{"version":3,"sources":["views/master/orders/addInvoice.js"],"names":["AddOrder","useState","useForm","defaultValues","hasSubscription","control","setValue","Date","picker","setPicker","initialvalues","id","name","email","isVerified","icon","phone","panNumber","Currency","value","label","City","State","Country","useEffect","tag","sm","onSubmit","e","preventDefault","md","for","type","placeholder","className","onChange","date","inline","Ripple","color","outline"],"mappings":"yVAgJeA,UAhIE,WAAO,IAAD,EAEGC,mBAAS,MAFZ,gCAGSC,YAAQ,CACpCC,cAAe,CAAEC,gBAAiB,SAJf,KAGbC,QAHa,EAGJC,SAGWL,mBAAS,IAAIM,OANpB,mBAMdC,EANc,KAMNC,EANM,KAQbC,EAAgB,CACtBC,GAAG,EACHC,KAAM,GACNC,MAAO,GACPT,gBAAiB,GACjBU,WAAY,GACZC,KAAO,GACPC,MAAQ,GACRC,UAAW,GACXC,SAAW,CAAC,CAACC,MAAO,WAAYC,MAAO,iBACvCC,KAAO,CAAC,CAACF,MAAO,OAAQC,MAAO,WAC/BE,MAAQ,CAAC,CAACH,MAAO,QAASC,MAAO,gBACjCG,QAAS,CAAC,CAACJ,MAAO,UAAWC,MAAO,WApBjB,EAsBOnB,mBAASS,GAtBhB,6BAmErB,OAbAc,qBAAU,eAeZ,eAAC,IAAD,WACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,yBAGF,cAAC,IAAD,UACA,cAAC,IAAD,UACA,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,cAAC,IAAD,CAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,GAAG,IAAIJ,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,IAAI,YAAX,wBACA,cAAC,IAAD,CAAOC,KAAK,OAAOrB,GAAG,YAAYsB,YAAY,oBAGlD,cAAC,IAAD,CAAKH,GAAG,IAAIJ,GAAG,KAAf,SACA,cAAC,IAAD,UACA,eAAC,WAAD,WACG,cAAC,IAAD,CAAOK,IAAI,iBAAX,kBACH,cAAC,IAAD,CAAWG,UAAU,eAAef,MAAOX,EAAQ2B,SAAU,SAAAC,GAAI,OAAI3B,EAAU2B,IAAOzB,GAAG,0BAIzF,eAAC,IAAD,CAAKmB,GAAG,IAAIJ,GAAG,KAAf,UACA,cAAC,IAAD,CAAOQ,UAAU,iBAAiBH,IAAI,SAAtC,SACU,sBAAMG,UAAU,GAAhB,sBAEV,eAAC,IAAD,CAAWA,UAAU,SAArB,UACQ,cAAC,IAAD,CAAOA,UAAU,iBAAiBH,IAAI,SAAtC,SACE,sBAAMG,UAAU,GAAhB,uBAEF,cAAC,IAAD,CACFF,KAAK,SACLE,UAAU,YACVvB,GAAG,eACHC,KAAK,eACLQ,MAAM,OACNiB,QAAM,UAKZ,eAAC,IAAD,CAAKH,UAAU,sCAAsCR,GAAG,KAAxD,UACE,cAAC,IAAOY,OAAR,CAAeJ,UAAU,4BAA4BF,KAAK,SAASO,MAAM,UAAzE,0BAGA,cAAC,IAAOD,OAAR,CAAeC,MAAM,YAAYC,SAAO,EAAxC,sC","file":"static/js/279.3e88c41b.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n// ** Custom Components\nimport Flatpickr from 'react-flatpickr'\n\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Lock, Edit, Trash2 } from 'react-feather'\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, CustomInput, CardHeader, CardBody, Card, CardTitle } from 'reactstrap'\nimport Select from 'react-select'\nimport { selectThemeColors, isObjEmpty } from '@utils'\nimport { useForm, Controller } from 'react-hook-form'\n\nconst AddOrder = () => {\n\n  const [data, setData] = useState(null)\n  const { control, setValue } = useForm({\n    defaultValues: { hasSubscription: 'No' }\n  })\n  const [picker, setPicker] = useState(new Date())\n\n    const initialvalues = {\n    id:1,\n    name: \"\",\n    email: \"\",\n    hasSubscription: \"\",\n    isVerified: \"\",\n    icon : \"\",\n    phone : \"\",\n    panNumber: \"\",\n    Currency:  [{value: \"currency\", label: \"Indian Rupee\"}],\n    City:  [{value: \"city\", label: \"Mumbai\"}], \n    State:  [{value: \"state\", label: \"Maharashtra\"}],\n    Country: [{value: \"country\", label: \"India\"}]\n  }\n  const [values, setValues] = useState(initialvalues)\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    //prop.editAction(values)\n    setValues(initialvalues)\n  }\n  const selectedUser = {\n    avatar: \"\",\n    company: \"Yotz PVT LTD\",\n    contact: \"(479) 232-9151\",\n    country: \"El Salvador\",\n    currentPlan: \"enterprise\",\n    email: \"gslixby0@abc.net.au\",\n    fullName: \"Coense Solution\",\n    id: 1,\n    role: \"editor\",\n    status: \"inactive\",\n    username: \"gslixby0\"\n      }\n  \n\n  // ** Update user image on mount or change\n  useEffect(() => {\n    // if (selectedUser !== null || (selectedUser !== null && userData !== null && selectedUser.id !== userData.id)) {\n    //   setUserData(selectedUser)\n    //   if (selectedUser.avatar.length) {\n    //     return setImg(selectedUser.avatar)\n    //   } else {\n    //     return setImg(null)\n    //   }\n    // }\n  })\n\n  // ** Renders User\n \n  return (\n \n<Card>\n<CardHeader>\n  <CardTitle tag='h1'>Add Order</CardTitle>\n</CardHeader>\n\n<CardBody>\n<Row>\n<Col sm='12'>\n  <Form onSubmit={e => e.preventDefault()}>\n    <Row>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='invoiceId'>Invoice Id</Label>\n          <Input type='text' id='invoiceId' placeholder='Invoice Id'  />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n      <FormGroup>\n      <Fragment>\n         <Label for='default-picker'>Date</Label>\n      <Flatpickr className='form-control' value={picker} onChange={date => setPicker(date)} id='default-picker' />\n        </Fragment>\n        </FormGroup> \n      </Col>\n      <Col md='6' sm='12'>\n      <Label className='d-flex my-auto' for='active'>\n                <span className=''>Status</span>\n              </Label>\n      <FormGroup className='d-flex'>\n              <Label className='d-flex my-auto' for='active'>\n                <span className=''>Created</span>\n              </Label>\n              <CustomInput\n            type='switch'\n            className='ml-1 py-1'\n            id='activeSwitch'\n            name='activeSwitch'\n            label='Paid'\n            inline\n            // onChange={handleInputeChange}\n          />\n            </FormGroup>\n      </Col>\n      <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n        <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n          Save Changes\n        </Button.Ripple>\n        <Button.Ripple color='secondary' outline>\n          Reset\n        </Button.Ripple>\n      </Col>\n    </Row>\n  </Form>\n</Col>\n</Row>\n</CardBody>\n</Card>\n  )\n}\nexport default AddOrder\n"],"sourceRoot":""}