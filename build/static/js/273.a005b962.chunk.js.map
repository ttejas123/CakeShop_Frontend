{"version":3,"sources":["views/master/state/data.js","views/master/state/FormModel.js","views/master/state/state.js"],"names":["data","id","StateName","Country","option","value","label","HorizontalForm","prop","initialvalues","useState","values","setValues","useEffect","currentId","Card","CardBody","Form","Row","Col","className","FormGroup","row","Label","sm","size","for","Input","type","name","placeholder","onChange","event","target","md","theme","selectThemeColors","classNamePrefix","defaultValue","options","isLoading","selectedOption","console","log","isClearable","offset","Button","Ripple","color","onClick","e","handleModal","editAction","outline","BootstrapCheckbox","forwardRef","ref","rest","DataTableWithButtons","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","setCurrentId","addClicked","setAddClicked","columns","selector","sortable","minWidth","cell","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","preventDefault","confirm","CardHeader","CardTitle","val","bsSize","updatedData","length","filter","item","startsWith","toLowerCase","includes","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","selectableRowsComponent"],"mappings":"wNACaA,EAAO,CAChB,CACEC,GAAG,EACHC,UAAW,cACXC,QAAS,SAEX,CACEF,GAAG,EACHC,UAAW,MACXC,QAAS,SAEX,CACEF,GAAG,EACHC,UAAW,gBACXC,QAAS,SAEX,CACEF,GAAG,EACHC,UAAW,cACXC,QAAS,OAEX,CACEF,GAAG,EACHC,UAAW,SACXC,QAAS,U,gGCNPC,EAAS,CACb,CAACC,MAAO,QAASC,MAAO,SACxB,CAACD,MAAO,MAAOC,MAAO,OACtB,CAACD,MAAO,QAASC,MAAO,UAqGXC,EAlGQ,SAACC,GACtB,IAAMC,EAAgB,CACtBP,UAAW,GACXC,QAAS,IAHsB,EAMLO,mBAASD,GANJ,mBAM1BE,EAN0B,KAMlBC,EANkB,KAQjCC,qBAAU,WACe,KAAnBL,EAAKM,UACLF,EAAU,eAAIH,IAEdG,EAAU,eACLJ,EAAKR,KAAKQ,EAAKM,UAAY,OAGnC,CAACN,EAAKM,UAAWN,EAAKR,OA2BvB,OACE,cAACe,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACC,EAAA,EAAD,CAAWC,KAAG,EAAd,UACE,cAACC,EAAA,EAAD,CAAOC,GAAG,IAAIC,KAAK,KAAKC,IAAI,YAA5B,wBAGA,cAACP,EAAA,EAAD,CAAKK,GAAG,IAAR,SACE,cAACG,EAAA,EAAD,CAAOC,KAAK,OAAOvB,MAAOM,EAAOT,UAAY2B,KAAK,YAAY5B,GAAG,YAAY6B,YAAY,YAAYC,SApC1F,SAACC,GAAW,IAAD,EACdA,EAAMC,OAArBJ,EAD6B,EAC7BA,KAAMxB,EADuB,EACvBA,MACbO,EAAU,2BAELD,GAFI,kBAGNkB,EAAQxB,aAkCD,eAACgB,EAAA,EAAD,CAAYC,KAAG,EAAf,UACI,cAACC,EAAA,EAAD,CAAOW,GAAG,IAAIV,GAAG,IAAjB,qBAGA,cAACL,EAAA,EAAD,CAAKC,UAAU,OAAOc,GAAG,IAAIV,GAAG,IAAhC,SACA,cAAC,IAAD,CACEW,MAAOC,IACPhB,UAAU,eACViB,gBAAgB,SAChBC,aAAc3B,EAAOR,QACrB0B,KAAK,UACLU,QAASnC,EACToC,WAAW,EACXT,SA1CG,SAACU,GACpBC,QAAQC,IAAIF,GACZ7B,EAAU,2BAEHD,GAFE,IAGLR,QAAUsC,EAAepC,UAsCbuC,aAAa,cAQrB,cAACvB,EAAA,EAAD,CAAWD,UAAU,eAAeE,KAAG,EAAvC,SACE,eAACH,EAAA,EAAD,CAAKC,UAAU,SAASc,GAAI,CAAET,KAAM,EAAGoB,OAAQ,GAA/C,UACE,cAACC,EAAA,EAAOC,OAAR,CAAe3B,UAAU,OAAO4B,MAAM,UAAUC,QAAU,SAAAC,GAChB1C,EAAK2C,cA3C3DT,QAAQC,IAAIhC,GACZH,EAAK4C,WAAWzC,GAChBC,EAAUH,IAwCE,oBAOA,cAACqC,EAAA,EAAOC,OAAR,CAAeM,SAAO,EAACL,MAAM,YAAYpB,KAAK,QAAQqB,QAASzC,EAAK2C,YAApE,iC,qGC9EVG,EAAoBC,sBAAW,WAAuBC,GAAvB,IAAGP,EAAH,EAAGA,QAAYQ,EAAf,kCACnC,sBAAKrC,UAAU,iCAAf,UACE,mCAAOQ,KAAK,WAAWR,UAAU,uBAAuBoC,IAAKA,GAASC,IACtE,uBAAOrC,UAAU,uBAAuB6B,QAASA,UA4NtCS,UAxNc,WAAM,MAEPhD,oBAAS,GAFF,gCAGKA,mBAAS,IAHd,mBAG1BiD,EAH0B,KAGbC,EAHa,OAIKlD,mBAAS,IAJd,mBAI1BmD,EAJ0B,KAIbC,EAJa,OAKOpD,mBAAS,IALhB,mBAK1BqD,EAL0B,KAKZC,EALY,OAMCtD,mBAAS,IANV,mBAM1BI,EAN0B,KAMfmD,EANe,OAQGvD,mBAAS,GARZ,mBAQ1BwD,EAR0B,KAQdC,EARc,KAuC3BC,EAAU,CACV,CACEvC,KAAM,YACNwC,SAAU,YACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAlD,GAAG,OACP,qBAAKF,UAAU,4BAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAMA,UAAU,yCAAhB,SAA0DE,EAAIpB,kBAKtE,CACE2B,KAAM,UACNwC,SAAU,UACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAlD,GACJ,OACI,qBAAKF,UAAU,4BAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAMA,UAAU,yCAAhB,SAA0DE,EAAInB,gBAM1E,CACE0B,KAAM,UACN4C,eAAe,EACfD,KAAM,SAAAlD,GACJ,OACE,sBAAKF,UAAU,SAAf,UACE,cAACsD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAgBvD,UAAU,OAAOwD,IAAI,OAArC,SACE,cAAC,IAAD,CAAOnD,KAAM,GAAIwB,QAAS,SAAAC,GACsCA,EAAE2B,iBACUvD,EAAIrB,IA/DxE,IAFH6E,QAAQ,mCAGzBpC,QAAQC,IAAI,2BAEdD,QAAQC,IAAI,uBAiEF,cAAC,IAAD,CAAMlB,KAAM,GAAIwB,QAAU,WACNgB,EAAa3C,EAAIrB,IAChBkE,GAAeD,YAU5Cf,EAAc,WAEjBgB,EADkB,IAAfD,EACW,EAEC,IA+DlB,OACE,cAAC,WAAD,UACE,eAACnD,EAAA,EAAD,WAEE,eAACgE,EAAA,EAAD,CAAY3D,UAAU,gFAAtB,UACE,cAAC4D,EAAA,EAAD,CAAWJ,IAAI,KAAf,yBACA,qBAAKxD,UAAU,sBAAf,SACkB,IAAf8C,EACG,eAACpB,EAAA,EAAD,CAAQ1B,UAAU,OAAO4B,MAAM,UAAUC,QAASE,EAAlD,UACwB,cAAC,IAAD,CAAM1B,KAAM,KACZ,sBAAML,UAAU,qBAAhB,+BAGxB,8BAKP8C,EAAa,cAAC,EAAD,CAAWf,YAAaA,EAAaC,WA9JnC,SAAC6B,GAEpBvC,QAAQC,IAAI7B,GACXmD,EAAa,IACbvB,QAAQC,IAAIsC,IA0JmEnE,UAAWA,EAAWd,KAAMA,IAAW,KACpH,cAACkB,EAAA,EAAD,CAAKE,UAAU,2BAAf,SACE,eAACD,EAAA,EAAD,CAAKC,UAAU,qDAAqDc,GAAG,IAAIV,GAAG,KAA9E,UACE,cAACD,EAAA,EAAD,CAAOH,UAAU,OAAOM,IAAI,eAA5B,oBAGA,cAACC,EAAA,EAAD,CACEP,UAAU,yBACVQ,KAAK,OACLsD,OAAO,KACPjF,GAAG,eACHI,MAAOwD,EACP9B,SAxFS,SAAAmB,GACnB,IAAM7C,EAAQ6C,EAAEjB,OAAO5B,MACnB8E,EAAc,GAClBzC,QAAQC,IAAI3C,GACZ8D,EAAezD,GAEXA,EAAM+E,SACRD,EAAcnF,EAAKqF,QAAO,SAAAC,GACxB,IAAMC,EACJD,EAAKpF,UAAUsF,cAAcD,WAAWlF,EAAMmF,gBAC9CF,EAAKnF,QAAQqF,cAAcD,WAAWlF,EAAMmF,eAExCC,EACJH,EAAKpF,UAAUsF,cAAcC,SAASpF,EAAMmF,gBAC5CF,EAAKnF,QAAQqF,cAAcC,SAASpF,EAAMmF,eAC5C,OAAID,KAEQA,GAAcE,EACjBA,EACK,SAEhBzB,EAAgBmB,GAChBrB,EAAezD,YAsEd,cAAC,IAAD,CACCqF,UAAQ,EACRC,YAAU,EACVC,gBAAc,EACdxB,QAASA,EACTyB,kBAAmB,EACnBzE,UAAU,kBACV0E,SAAU,cAAC,IAAD,CAAarE,KAAM,KAC7BsE,sBAAuBpC,EAAc,EACrCqC,oBArEmB,wBACvB,cAAC,KAAD,GACEC,cAAc,GACdC,UAAU,GACVC,UAAWxC,EACXyC,aAAc,SAAAC,GAAI,OAVG,SAAAA,GACvBzC,EAAeyC,EAAKC,UASIC,CAAiBF,IACvCG,UAAW3C,EAAYuB,OAASrB,EAAaqB,OAAS,EAAIpF,EAAKoF,OAAS,GAAK,EAC7EqB,WAAW,MACXC,mBAAoB,EACpBC,qBAAsB,EACtBC,gBAAgB,SAChBC,cAAc,YACdC,eAAe,YACfC,mBAAmB,YACnBC,kBAAkB,YAClBC,cAAc,iBACdC,kBAAkB,iBAClBC,sBAAsB,YACtBC,kBAAkB,aAjBpB,+BAkBiB,aAlBjB,mCAmBqB,aAnBrB,mCAoBqB,8FApBrB,KAqEIpH,KAAM6D,EAAYuB,OAASrB,EAAe/D,EAC1CqH,wBAAyB/D,W","file":"static/js/273.a005b962.chunk.js","sourcesContent":["//expot data\nexport const data = [\n    {\n      id:1,\n      StateName: \"Maharashtra\",\n      Country: \"India\"      \n    },\n    {\n      id:2,\n      StateName: \"Goa\",\n      Country: \"India\" \n    },\n    {\n      id:3,\n      StateName: \"Uttar Pardesh\",\n      Country: \"India\"\n    },\n    {\n      id:4,\n      StateName: \"PencilVenia\",\n      Country: \"USA\"\n    },\n    {\n      id:5,\n      StateName: \"Tokeyo\",\n      Country: \"Japan\"\n    }\n]\n","import React, { useState, useEffect } from 'react'\nimport { selectThemeColors } from '@utils'\nimport Select from 'react-select'\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Row,\n    Col,\n    Input,\n    Form,\n    Button,\n    CustomInput,\n    Label\n  } from 'reactstrap'\n  \n\n  const option = [\n    {value: \"India\", label: \"India\"},\n    {value: \"USA\", label: \"USA\"},\n    {value: \"Japan\", label: \"Japan\"}\n  ]\n\n  const HorizontalForm = (prop) => {\n    const initialvalues = {\n    StateName: \"\",\n    Country: \"\"\n  }\n\n  const [values, setValues] = useState(initialvalues)\n\n  useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues({...initialvalues})\n    } else {\n        setValues({\n          ...prop.data[prop.currentId - 1]\n        })\n    }\n  }, [prop.currentId, prop.data])\n\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n    //for drop down\n  const handleChange = (selectedOption) => {\n    console.log(selectedOption)\n    setValues(\n      {\n        ...values,\n        Country : selectedOption.value\n      }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    prop.editAction(values)\n    setValues(initialvalues)\n  }\n    return (\n      <Card>  \n        <CardBody>\n          <Form>\n            <Row >\n            <Col  className=\"ml-5\">\n              <FormGroup row >\n                <Label sm='4' size='lg' for='StateName'>\n                  State Name\n                </Label>\n                <Col sm='4'>\n                  <Input type='text' value={values.StateName}  name='StateName' id='StateName' placeholder='StateName' onChange={handleInputeChange} />\n                </Col>\n              </FormGroup>\n              <FormGroup  row>\n                  <Label md='4' sm='1'>\n                      Country\n                  </Label>\n                  <Col className='mb-1' md='4' sm='8'>\n                  <Select\n                    theme={selectThemeColors}\n                    className='react-select'\n                    classNamePrefix='select'\n                    defaultValue={values.Country}\n                    name='Country'\n                    options={option}\n                    isLoading={false}\n                    onChange={handleChange}\n                    isClearable={false}\n                  />\n                  </Col>\n         \n              </FormGroup>\n              \n            </Col>\n            </Row>\n            <FormGroup className='mb-0 mx-auto' row>\n              <Col className='d-flex' md={{ size: 8, offset: 4 }}>\n                <Button.Ripple className='mr-1' color='primary' onClick={ e =>  {\n                                                          prop.handleModal() \n                                                          submitHandle()\n                                                        }\n                                                      }>\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple outline color='secondary' type='reset' onClick={prop.handleModal} >\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n  export default HorizontalForm\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Table Data & Columns\nimport { data } from './data'\n\n// ** Add New Modal Component\nimport ModelForm from './FormModel'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\nconst DataTableWithButtons = () => {\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n\n  const [addClicked, setAddClicked] = useState(0)\n\n   //deleteCountry\n  const deleteState = (val) => {\n    //here we passing id to delete this specific record\n   const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n     console.log(currentId)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n   const basicColumns = [\n    {\n      name: 'ID',\n      selector: 'StateName',\n      // sortable: true,\n      maxWidth: '100px'\n    }\n   \n  ]\n\n  //columns\n  const columns = [\n        {\n          name: 'StateName',\n          selector: 'StateName',\n          sortable: true,\n          minWidth: '250px',\n          cell: row => (\n            <div className='d-flex align-items-center'>\n              <div className='user-info text-truncate ml-1'>\n                <span className='d-block font-weight-bold text-truncate'>{row.StateName}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Country',\n          selector: 'Country',\n          sortable: true,\n          minWidth: '250px',\n          cell: row => {\n            return (\n                <div className='d-flex align-items-center'>\n                  <div className='user-info text-truncate ml-1'>\n                    <span className='d-block font-weight-bold text-truncate'>{row.Country}</span>\n                  </div>\n                </div>\n            )\n          }\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pr-1' tag='span'>\n                    <Trash size={15} onClick={e => {\n                                                                                    e.preventDefault()\n                                                                                    deleteState(row.id)\n                                                                                  } } />\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n\n                <Edit size={15} onClick={ () => { \n                                    setCurrentId(row.id)\n                                     setAddClicked(!addClicked)\n                                     } }/>\n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle toggle\n  const handleModal = () => {\n    if (addClicked === 1) {\n     setAddClicked(0)\n    } else {\n      setAddClicked(1)\n    }\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    console.log(data)\n    setSearchValue(value)\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.StateName.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.Country.toLowerCase().startsWith(value.toLowerCase()) \n\n        const includes =\n          item.StateName.toLowerCase().includes(value.toLowerCase()) ||\n          item.Country.toLowerCase().includes(value.toLowerCase()) \n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>States List</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            {addClicked === 0 ? (\n                <Button className='ml-2' color='primary' onClick={handleModal}>\n                                        <Plus size={15} />\n                                        <span className='align-middle ml-50'>Add Your State</span>\n                </Button>\n                ) : (\n                <span></span>\n                )\n            }\n          </div>\n        </CardHeader>\n        {addClicked ? <ModelForm handleModal={handleModal} editAction={AddeditEvent} currentId={currentId} data={data} /> : null}\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n       <DataTable\n        noHeader\n        pagination\n        selectableRows\n        columns={columns}\n        paginationPerPage={7}\n        className='react-dataTable'\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={searchValue.length ? filteredData : data}\n        selectableRowsComponent={BootstrapCheckbox}\n      /> \n         \n        \n      </Card>\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n"],"sourceRoot":""}