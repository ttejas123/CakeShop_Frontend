{"version":3,"sources":["views/report/Notification/data.js","views/report/Notification/formModel.js","views/report/Notification/index.js","assets/images/logo/komal.jpg","assets/images/logo/himanshu.jpg","assets/images/logo/pravin.jpg","assets/images/logo/reethika.jpg"],"names":["data","id","Notification_To","notification_type","description","notification_for","Status","value","label","Notification_time","Date","toGMTString","AddNewModal","prop","useState","values","setValues","CloseBtn","className","size","onClick","handleModal","useEffect","currentId","Modal","isOpen","open","toggle","contentClassName","ModalHeader","close","tag","ModalBody","Row","Col","xs","Button","color","outline","DataTableWithButtons","statusObj","pending","send","failed","modal","setModal","currentPage","setCurrentPage","searchValue","filteredData","setCurrentId","columns","name","selector","sortable","minWidth","maxWidth","cell","row","Badge","pill","allowOverflow","UncontrolledDropdown","DropdownToggle","e","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Card","CardHeader","CardTitle","UncontrolledButtonDropdown","caret","DropdownMenu","right","DropdownItem","noHeader","pagination","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName"],"mappings":"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","file":"static/js/155.8e226b5e.chunk.js","sourcesContent":["// Id\n// Notification To\n// notification type = \"normal\" 'sms' 'email'\n// description\n// notification for = \"bid created\", \"order\"\n// Status\n\nimport komal  from '../../../assets/images/logo/komal.jpg'\nimport pravin  from '../../../assets/images/logo/pravin.jpg'\nimport himanshu  from '../../../assets/images/logo/himanshu.jpg'\nimport reethika  from '../../../assets/images/logo/reethika.jpg'\n\n\n//expot data\nexport const data = [\n      {\n        id:1,\n        Notification_To: \"Tejas\",\n        notification_type: \"normal\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"pending\", label: \"pending\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:2,\n        Notification_To: \"Tejas\",\n        notification_type: \"sms\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"send\", label: \"send\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:3,\n        Notification_To: \"Tejas\",\n        notification_type: \"email\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status:[{value: \"send\", label: \"send\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:4,\n        Notification_To: \"Tejas\",\n        notification_type: \"email\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"failed\", label: \"failed\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:5,\n        Notification_To: \"Tejas\",\n        notification_type: \"sms\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"pending\", label: \"pending\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:6,\n        Notification_To: \"Tejas\",\n        notification_type: \"email\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"failed\", label: \"failed\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:7,\n        Notification_To: \"Tejas\",\n        notification_type: \"sms\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"send\", label: \"send\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:8,\n        Notification_To: \"Tejas\",\n        notification_type: \"email\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"send\", label: \"send\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      },\n      {\n        id:9,\n        Notification_To: \"Tejas\",\n        notification_type: \"sms\",\n        description: \"Your Bid432 is created\",\n        notification_for : \"bid created\",\n        Status: [{value: \"send\", label: \"send\"}],\n        Notification_time: `${new Date().toGMTString()}` \n      }\n]\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport Select from 'react-select'\n// ** Third Party Components\nimport axios from 'axios'\nimport { MoreVertical, User, Users, Edit, Calendar, FileText, Archive, Trash,  MapPin, DollarSign, X  } from 'react-feather'\n//import Flatpickr from 'react-flatpickr'\n// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { selectThemeColors, isObjEmpty } from '@utils'\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label, Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row, Col  } from 'reactstrap'\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = (prop) => {\n  const init = {\n         id:4,\n        Notification_To: \"\",\n        notification_type: \"\",\n        description: \"\",\n        notification_for : \"\",\n        Status: [{value: \"s\", label: \"s\"}],\n        Notification_time: `${new Date().toGMTString()}`\n  }\n  const [values, setValues] = useState('')\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={prop.handleModal} />\n\n  useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues(\"\")\n    } else {\n        \n        setValues({\n          ...prop.data[prop.currentId - 1]\n        })\n    }\n  }, [prop.currentId, prop.data])\n\n  return (\n    <Modal\n      isOpen={prop.open}\n      toggle={prop.handleModal}\n      className='sidebar-sm'\n     \n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-1' toggle={prop.handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>Review</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <Row>\n          <Col xs='12'>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>ID : </div>\n              <h5 className='mb-1'> {values.id}</h5>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>Notification To : </div>\n              <h5 className='mb-1'> {values.Notification_To}</h5> \n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>Notification Type : </div>\n              <h5 className='mb-1'> {values.notification_type}</h5>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>Description : </div>\n              <h5 className='mb-1'> {values.description}</h5>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>Notification For : </div>\n              <h5 className='mb-1'> {values.notification_for}</h5>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>Status : </div>\n              <h5 className='mb-1'> { values.Status ? (<div>{values.Status[0].label}</div>) : (<div></div>)}</h5>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <div className='font-small-2'>Notification Time : </div>\n              <h5 className='mb-1'> {values.Notification_time}</h5>\n            </div>\n          </Col>\n        </Row>\n        <Button color='secondary' onClick={ prop.handleModal } outline>\n          Cancel\n        </Button>\n\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport axios from 'axios'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data } from './data'\nimport Select from 'react-select'\n\n// ** Add New Modal Component\nimport FormModel from './formModel'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Eye  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\nconst DataTableWithButtons = () => {\n  const statusObj = {\n        pending: 'light-secondary',\n        send: 'light-success',\n        failed: 'light-danger'\n  }\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n  const [Filter, setFilter] = useState('')\n\n   //view\n  const view = (val) => {\n    //here we passing id to delete this specific record\n   setModal(true)\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Id',\n          selector: 'id',\n          sortable: true,\n          minWidth: '120px',\n          maxWidth: '150px'\n        },\n        {\n          name: 'Notification To',\n          selector: 'Notification_To',\n          sortable: true,\n          minWidth: '120px',\n          maxWidth: '200px'\n        },\n        {\n          name: 'Notification type',\n          selector: 'notification_type',\n          sortable: true,\n          minWidth: '120px',\n          maxWidth: '200px'\n        },\n        {\n          name: 'Description',\n          selector: 'description',\n          sortable: true,\n          minWidth: '120px',\n          maxWidth: '200px'\n        },\n        {\n          name: 'Notification for',\n          selector: 'notification_for',\n          sortable: true,\n          minWidth: '120px',\n          maxWidth: '200px'\n        },\n        {\n          name: 'Notification for',\n          selector: 'notification_for',\n          sortable: true,\n          minWidth: '120px',\n          maxWidth: '200px',\n          cell: row => (\n            <div className='d-flex justify-content-left align-items-center'>\n              <div className='d-flex flex-column'>\n                <Badge className='text-capitalize' color={statusObj[row.Status[0].label]} pill>\n                        {row.Status[0].label}\n                </Badge>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          minWidth:\"150px\",\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pl-1' tag='span'>\n                    <Eye size={15} onClick={e => {\n                                                                                    view(row)\n                                                                                    setCurrentId(row.id)\n                                                                                  } }/>\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        \n        const startsWith =\n          item.Name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.customizations.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.deliveryDate.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.Category[0].label.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.subCategory[0].label.toLowerCase().startsWith(value.toLowerCase()) \n\n        const includes =\n          item.Name.toLowerCase().includes(value.toLowerCase()) ||\n          item.customizations.toLowerCase().includes(value.toLowerCase()) ||\n          item.deliveryDate.toLowerCase().includes(value.toLowerCase()) ||\n          item.Category[0].label.toLowerCase().includes(value.toLowerCase()) ||\n          item.subCategory[0].label.toLowerCase().includes(value.toLowerCase()) \n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n\n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Invoice</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n              \n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='secondary' caret outline>\n                <Share size={15} />\n                <span className='align-middle ml-50'>Export</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem className='w-100'>\n                  <Printer size={15} />\n                  <span className='align-middle ml-50'>Print</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(data)}>\n                  <FileText size={15} />\n                  <span className='align-middle ml-50'>CSV</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Grid size={15} />\n                  <span className='align-middle ml-50'>Excel</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <File size={15} />\n                  <span className='align-middle ml-50'>PDF</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Copy size={15} />\n                  <span className='align-middle ml-50'>Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </CardHeader>\n\n        <DataTable\n          noHeader\n          pagination\n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n        />\n        \n      </Card>\n       <FormModel open={modal} handleModal={handleModal} currentId={currentId}  data={data} />\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n","export default __webpack_public_path__ + \"static/media/komal.71eab2e7.jpg\";","export default __webpack_public_path__ + \"static/media/himanshu.db95087a.jpg\";","export default __webpack_public_path__ + \"static/media/pravin.5a89c6c3.jpg\";","export default __webpack_public_path__ + \"static/media/reethika.147b588d.jpg\";"],"sourceRoot":""}