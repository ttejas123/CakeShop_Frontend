{"version":3,"sources":["views/master/bids/bidMapping/data.js","views/master/bids/bidMapping/bidMapping.js"],"names":["Sellerscolumns","name","selector","sortable","minWidth","data","rfqId","category","subCategory","requiredQuantity","startTime","endTime","acceptTime","sellers","email","phone","columns","ExpandableTable","noHeader","className","BadgesMappingList","useState","currentPage","setCurrentPage","Card","CardHeader","CardTitle","tag","pagination","expandableRows","expandOnRowClicked","sortIcon","size","paginationDefaultPage","expandableRowsComponent","paginationRowsPerPageOptions","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName"],"mappings":"gOAQMA,EAAiB,CACnB,CACIC,KAAM,cACNC,SAAU,OACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,QACNC,SAAU,QACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,QACNC,SAAU,QACVC,UAAU,EACVC,SAAU,UAGLC,EAAO,CAChB,CACGC,MAAQ,OACRC,SAAW,cACXC,YAAc,aACdC,iBAAmB,GACnBC,UAAY,aACZC,QAAU,aACVC,WAAa,aACZC,QAAU,CACV,CACIZ,KAAO,aACPa,MAAQ,YACRC,MAAQ,UAEZ,CACId,KAAO,QACPa,MAAQ,aACRC,MAAQ,UAEZ,CACId,KAAO,SACPa,MAAQ,cACRC,MAAQ,YAIhB,CACIT,MAAQ,OACRC,SAAW,cACXC,YAAc,SACdC,iBAAmB,GACnBC,UAAY,aACZC,QAAU,aACXC,WAAa,aACZC,QAAU,CACV,CACIZ,KAAO,QACPa,MAAQ,aACRC,MAAQ,UAEZ,CACId,KAAO,SACPa,MAAQ,cACRC,MAAQ,YAIhB,CACIT,MAAQ,OACRC,SAAW,WACXC,YAAc,aACdC,iBAAmB,GACnBC,UAAY,aACZC,QAAU,aACXC,WAAa,aACZC,QAAU,CACV,CACIZ,KAAO,aACPa,MAAQ,YACRC,MAAQ,UAEZ,CACId,KAAO,QACPa,MAAQ,aACRC,MAAQ,UAEZ,CACId,KAAO,SACPa,MAAQ,cACRC,MAAQ,YAIhB,CACIT,MAAQ,OACTC,SAAW,WACXC,YAAc,UACdC,iBAAmB,GACnBC,UAAY,aACZC,QAAU,aACVC,WAAa,cACbC,QAAU,CACN,CACHZ,KAAO,aACPa,MAAQ,YACRC,MAAQ,UAEZ,CACId,KAAO,SACPa,MAAQ,cACRC,MAAQ,aA6BHC,EAAU,CAErB,CACEf,KAAM,SACNC,SAAU,QACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,WACNC,SAAU,WACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,eACNC,SAAU,cACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,oBACNC,SAAU,mBACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,aACNC,SAAU,YACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,WACNC,SAAU,UACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,cACNC,SAAU,aACVC,UAAU,EACVC,SAAU,UAGCa,EArES,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KACnB,OAWI,aAVA,CAUC,IAAD,UACA,cAAC,IAAD,CACJa,UAAQ,EACRF,QAAShB,EACTmB,UAAU,kBACVd,KAAMA,EAAKQ,a,iDCzEJO,UAxDW,WAAM,MAEQC,mBAAS,GAFjB,mBAEvBC,EAFuB,KAEVC,EAFU,KAiC9B,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,2BAEF,cAAC,IAAD,CACET,UAAQ,EACRU,YAAU,EACVvB,KAAMA,EACNwB,gBAAc,EACdb,QAASA,EACTc,oBAAkB,EAClBX,UAAU,kBACVY,SAAU,cAAC,IAAD,CAAaC,KAAM,KAC7BC,sBAAuBX,EAAc,EACrCY,wBAAyB,cAAC,EAAD,IACzBC,6BAA8B,CAAC,GAAI,GAAI,GAAI,KAC3CC,oBAxCmB,kBACvB,cAAC,IAAD,CACEC,cAAe,GACfC,UAAW,GACXC,UAAWjB,EACXkB,aAAc,SAAAC,GAAI,OAVG,SAAAA,GACvBlB,EAAekB,EAAKC,UASIC,CAAiBF,IACvCG,UAAW,GACXC,WAAY,MACZC,mBAAoB,EACpBC,qBAAsB,EACtBC,gBAAiB,SACjBC,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,eAAe,YACfC,mBAAmB,YACnBC,mBAAoB,kG","file":"static/js/272.e439be98.chunk.js","sourcesContent":["\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { MoreVertical, Edit, FileText, Archive, Trash } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport CardBody from 'reactstrap/lib/CardBody'\n\n\nconst Sellerscolumns = [\n    {\n        name: 'Seller Name',\n        selector: 'name',\n        sortable: true,\n        minWidth: '250px'\n      },\n      {\n        name: 'Email',\n        selector: 'email',\n        sortable: false,\n        minWidth: '250px'\n      },\n      {\n        name: 'Phone',\n        selector: 'phone',\n        sortable: false,\n        minWidth: '250px'\n      }\n]\nexport const data = [\n    {\n       rfqId : \"RFQ1\",\n       category : \"Electronics\",\n       subCategory : \"Telivision\",\n       requiredQuantity : 20,\n       startTime : \"01-05-2020\",\n       endTime : \"01-05-2020\",\n       acceptTime : \"15-05-2020\",\n        sellers : [\n        {\n            name : \"ReatilsNet\",\n            email : \"abc@c.com\",\n            phone : 98765432\n        },\n        {\n            name : \"Titan\",\n            email : \"abc@bc.com\",\n            phone : 98765432\n        },\n        {\n            name : \"Fossil\",\n            email : \"abc@cfg.com\",\n            phone : 98765432\n        }\n    ]\n    },\n    {\n        rfqId : \"RFQ2\",\n        category : \"Electronics\",\n        subCategory : \"Laptop\",\n        requiredQuantity : 30,\n        startTime : \"01-06-2020\",\n        endTime : \"01-07-2020\",\n       acceptTime : \"15-06-2020\",\n        sellers : [\n        {\n            name : \"Titan\",\n            email : \"abc@bc.com\",\n            phone : 98765432\n        },\n        {\n            name : \"Fossil\",\n            email : \"abc@cfg.com\",\n            phone : 98765432\n        }\n    ]\n    },\n    {\n        rfqId : \"RFQ3\",\n        category : \"Footwear\",\n        subCategory : \"Flip-Flpos\",\n        requiredQuantity : 25,\n        startTime : \"01-07-2020\",\n        endTime : \"01-08-2020\",\n       acceptTime : \"15-07-2020\",\n        sellers : [\n        {\n            name : \"ReatilsNet\",\n            email : \"abc@c.com\",\n            phone : 98765432\n        },\n        {\n            name : \"Titan\",\n            email : \"abc@bc.com\",\n            phone : 98765432\n        },\n        {\n            name : \"Fossil\",\n            email : \"abc@cfg.com\",\n            phone : 98765432\n        }\n    ]\n    },\n    {\n        rfqId : \"RFQ4\",\n       category : \"Clothing\",\n       subCategory : \"T-Shirt\",\n       requiredQuantity : 40,\n       startTime : \"04-05-2020\",\n       endTime : \"08-06-2020\",\n       acceptTime : \"017-06-2020\",\n       sellers : [\n           {\n        name : \"ReatilsNet\",\n        email : \"abc@c.com\",\n        phone : 98765432\n    },\n    {\n        name : \"Fossil\",\n        email : \"abc@cfg.com\",\n        phone : 98765432\n    }\n]\n    }\n]\nconst ExpandableTable = ({ data }) => {\n        return (\n            // <ul>\n            // <li>\n            //     <span>Seller Name :</span>\n            //     <span>{item.name}</span>\n            //     <span className='ml-3'>Email :</span>\n            //     <span>{item.email}</span>\n            //     <span className='ml-3'>Phone :</span>\n            //     <span>{item.phone}</span>\n            // </li>\n            // </ul>\n            <CardBody>\n            <DataTable\n        noHeader\n        columns={Sellerscolumns}\n        className='react-dataTable'\n        data={data.sellers}\n      />\n   </CardBody>\n    )\n\n}\n\nexport const columns = [\n  \n  {\n    name: 'RFQ ID',\n    selector: 'rfqId',\n    sortable: true,\n    minWidth: '250px'\n  },\n  {\n    name: 'Category',\n    selector: 'category',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Sub Category',\n    selector: 'subCategory',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Required Quantity',\n    selector: 'requiredQuantity',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Start Time',\n    selector: 'startTime',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'End Time',\n    selector: 'endTime',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Accept Time',\n    selector: 'acceptTime',\n    sortable: true,\n    minWidth: '150px'\n  }\n]\nexport default ExpandableTable","// ** React Imports\nimport { useState } from 'react'\n\n// ** Table columns & Expandable Data\nimport ExpandableTable, { data, columns } from './data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { Card, CardHeader, CardTitle } from 'reactstrap'\n\nconst BadgesMappingList = () => {\n  // ** State\n  const [currentPage, setCurrentPage] = useState(0)\n\n  // ** Function to handle filter\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={''}\n      nextLabel={''}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={10}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1'}\n    />\n  )\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Bid Mapping</CardTitle>\n      </CardHeader>\n      <DataTable\n        noHeader\n        pagination\n        data={data}\n        expandableRows\n        columns={columns}\n        expandOnRowClicked\n        className='react-dataTable'\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        expandableRowsComponent={<ExpandableTable />}\n        paginationRowsPerPageOptions={[10, 25, 50, 100]}\n        paginationComponent={CustomPagination}\n      />\n    </Card>\n  )\n}\n\nexport default BadgesMappingList\n"],"sourceRoot":""}