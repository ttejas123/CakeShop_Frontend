{"version":3,"sources":["views/master/country/data.js","views/master/country/AddNewModal.js","views/master/country/Home.js"],"names":["data","id","Name","Initial","code","currencies","AddNewModal","prop","SignupSchema","yup","shape","required","password","useForm","mode","resolver","yupResolver","register","errors","initialvalues","handleSubmit","Currency","useState","values","setValues","CloseBtn","className","size","onClick","handleModal","useEffect","currentId","handleInputeChange","event","target","name","value","Modal","isOpen","open","toggle","modalClassName","contentClassName","ModalHeader","close","tag","ModalBody","FormGroup","Label","for","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","innerRef","invalid","onChange","placeholder","FormFeedback","message","defaultValue","selectedOption","options","label","Button","color","e","console","log","editAction","outline","BootstrapCheckbox","forwardRef","ref","rest","type","DataTableWithButtons","modal","setModal","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","setCurrentId","columns","selector","sortable","minWidth","cell","row","currency","allowOverflow","UncontrolledDropdown","preventDefault","confirm","Card","CardHeader","CardTitle","Row","Col","md","sm","bsSize","updatedData","length","filter","item","startsWith","toLowerCase","includes","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","selectableRowsComponent","val"],"mappings":"8NAEaA,EAAO,CAChB,CACEC,GAAG,EACHC,KAAM,cACNC,QAAS,KACTC,KAAM,MACNC,WAAY,UAEd,CACEJ,GAAG,EACHC,KAAM,mBACNC,QAAS,KACTC,KAAM,IACNC,WAAY,UAEd,CACEJ,GAAG,EACHC,KAAM,UACNC,QAAS,KACTC,KAAM,MACNC,WAAY,M,0KC2IHC,EA7IK,SAACC,GACnB,IAAMC,EAAeC,MAAaC,MAAM,CACtCN,KAAMK,MAAaE,WACnBR,QAASM,MAAaE,WACtBT,KAAMO,MAAaE,WACnBC,SAAUH,MAAaE,aALG,EAQeE,YAAQ,CAAEC,KAAM,WAAYC,SAAUC,sBAAYR,KAArFS,EARoB,EAQpBA,SAAUC,EARU,EAQVA,OAOZC,GAfsB,EAQFC,aAOJ,CACpBlB,KAAM,GACNC,QAAS,GACTC,KAAM,GACNiB,SAAS,KAnBiB,EAqBgBC,qBArBhB,gCAsBAA,mBAASH,IAtBT,mBAsBrBI,EAtBqB,KAsBbC,EAtBa,KAwBtBC,EAAW,cAAC,IAAD,CAAGC,UAAU,iBAAiBC,KAAM,GAAIC,QAASrB,EAAKsB,cAEvEC,qBAAU,WACe,KAAnBvB,EAAKwB,UACLP,EAAU,eAAIL,IAEdK,EAAU,eACLjB,EAAKP,KAAKO,EAAKwB,UAAY,OAGnC,CAACxB,EAAKwB,UAAWxB,EAAKP,OAEzB,IAAMgC,EAAqB,SAACC,GAAW,IAAD,EACdA,EAAMC,OAArBC,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,MACbZ,EAAU,2BAELD,GAFI,kBAGNY,EAAQC,MAqBb,OACE,eAACC,EAAA,EAAD,CACEC,OAAQ/B,EAAKgC,KACbC,OAAQjC,EAAKsB,YACbH,UAAU,aACVe,eAAe,iBACfC,iBAAiB,OALnB,UAOE,cAACC,EAAA,EAAD,CAAajB,UAAU,OAAOc,OAAQjC,EAAKsB,YAAae,MAAOnB,EAAUoB,IAAI,MAA7E,SACE,oBAAInB,UAAU,cAAd,0BAEF,eAACoB,EAAA,EAAD,CAAWpB,UAAU,cAArB,UAEE,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAQ1B,KAAM,SAGlB,cAAC2B,EAAA,EAAD,CAAOnB,KAAK,OACVoB,SAAUtC,EAAS,CAAEN,UAAU,IAC/B6C,QAAStC,EAAOhB,OAAQ,EACxBuD,SAAUzB,EAAoB/B,GAAG,OAAOyD,YAAY,cAActB,MAAOb,EAAOrB,UAEnFgB,GAAUA,EAAOhB,MAAQ,cAACyD,EAAA,EAAD,UAAezC,EAAOhB,KAAK0D,aAGvD,eAACb,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,qBACA,cAACC,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAOnB,KAAK,UACVoB,SAAUtC,EAAS,CAAEN,UAAU,IAC/B6C,QAAStC,EAAOf,UAAW,EAAMsD,SAAUzB,EAAoB/B,GAAG,UAAUyD,YAAY,uBAAuBtB,MAAOb,EAAOpB,YAEhIe,GAAUA,EAAOf,SAAW,cAACwD,EAAA,EAAD,UAAezC,EAAOf,QAAQyD,aAG7D,eAACb,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAX,0BACA,cAACC,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAOnB,KAAK,OACVoB,SAAUtC,EAAS,CAAEN,UAAU,IAC/B6C,QAAStC,EAAOd,OAAQ,EAAMqD,SAAUzB,EAAoB/B,GAAG,OAAOyD,YAAY,wBAAwBtB,MAAOb,EAAOnB,SAE3Hc,GAAUA,EAAOd,MAAQ,cAACuD,EAAA,EAAD,UAAezC,EAAOd,KAAKwD,aAGvD,eAACb,EAAA,EAAD,CAAWrB,UAAU,OAArB,UACE,cAACsB,EAAA,EAAD,CAAOC,IAAI,WAAX,sBAGE,cAAC,IAAD,CACEvB,UAAU,OACVS,KAAK,WACL0B,aAActC,EAAOF,SACrBoC,SAzES,SAACK,GAEpBtC,EAAU,2BAEHD,GAFE,IAGLF,SAAWyC,EAAe1B,UAqEpB2B,QA9GG,CACf,CAAC3B,MAAO,SAAK4B,MAAO,kBACpB,CAAC5B,MAAO,SAAK4B,MAAO,OACpB,CAAC5B,MAAO,IAAK4B,MAAO,aAgHd,cAACC,EAAA,EAAD,CAAQvC,UAAU,OAAOwC,MAAM,UAAUtC,QAAU,SAAAuC,GACD5D,EAAKsB,cArE3DuC,QAAQC,IAAI9C,GACZhB,EAAK+D,WAAW/C,GAChBC,EAAUL,IAkEN,oBAOA,cAAC8C,EAAA,EAAD,CAAQC,MAAM,YAAYtC,QAAUrB,EAAKsB,YAAc0C,SAAO,EAA9D,2B,mHChHFC,EAAoBC,sBAAW,WAAuBC,GAAvB,IAAG9C,EAAH,EAAGA,QAAY+C,EAAf,kCACnC,sBAAKjD,UAAU,iCAAf,UACE,mCAAOkD,KAAK,WAAWlD,UAAU,uBAAuBgD,IAAKA,GAASC,IACtE,uBAAOjD,UAAU,uBAAuBE,QAASA,UA+NtCiD,UA3Nc,WAAM,MAEPvD,oBAAS,GAFF,mBAE1BwD,EAF0B,KAEnBC,EAFmB,OAGKzD,mBAAS,GAHd,mBAG1B0D,EAH0B,KAGbC,EAHa,OAIK3D,mBAAS,IAJd,mBAI1B4D,EAJ0B,KAIbC,EAJa,OAKO7D,mBAAS,IALhB,mBAK1B8D,EAL0B,KAKZC,EALY,OAMC/D,mBAAS,IANV,mBAM1BS,EAN0B,KAMfuD,EANe,KA2B3BC,EAAU,CACV,CACEpD,KAAM,OACNqD,SAAU,OACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAC,GAAG,OACP,qBAAKlE,UAAU,4BAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAMA,UAAU,yCAAhB,SAA0DkE,EAAI1F,aAKtE,CACEiC,KAAM,UACNqD,SAAU,UACVC,UAAU,EACVC,SAAU,SAEZ,CACEvD,KAAM,OACNqD,SAAU,OACVC,UAAU,EACVC,SAAU,SAGZ,CACEvD,KAAM,WACNqD,SAAU,aACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAC,GACJ,IAAMC,EAAWD,EAAIvF,WACrB,OACI,qBAAKqB,UAAU,4BAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAMA,UAAU,yCAAhB,SAA0DmE,UAMtE,CACE1D,KAAM,UACN2D,eAAe,EACfH,KAAM,SAAAC,GACJ,OACE,sBAAKlE,UAAU,SAAf,UACE,cAACqE,EAAA,EAAD,UACE,qBAAKrE,UAAU,OAAOmB,IAAI,OAA1B,SACE,cAAC,IAAD,CAAOlB,KAAM,GAAIC,QAAS,SAAAuC,GACKA,EAAE6B,iBACYJ,EAAI3F,IAnEzC,IAFFgG,QAAQ,mCAG1B7B,QAAQC,IAAI,2BAEdD,QAAQC,IAAI,uBAqEF,cAAC,IAAD,CAAM1C,KAAM,GAAIC,QAAU,WACN0D,EAAaM,EAAI3F,IACjB8E,GAAS,YAUrClD,EAAc,WAClBkD,GAAUD,IAuEZ,OACE,eAAC,WAAD,WACE,eAACoB,EAAA,EAAD,WAEE,eAACC,EAAA,EAAD,CAAYzE,UAAU,gFAAtB,UACE,cAAC0E,EAAA,EAAD,CAAWvD,IAAI,KAAf,4BACA,qBAAKnB,UAAU,sBAAf,SACE,eAACuC,EAAA,EAAD,CAAQvC,UAAU,OAAOwC,MAAM,UAAUtC,QAASC,EAAlD,UACE,cAAC,IAAD,CAAMF,KAAM,KACZ,sBAAMD,UAAU,qBAAhB,sCAKN,cAAC2E,EAAA,EAAD,CAAK3E,UAAU,2BAAf,SACE,eAAC4E,EAAA,EAAD,CAAK5E,UAAU,qDAAqD6E,GAAG,IAAIC,GAAG,KAA9E,UACE,cAACxD,EAAA,EAAD,CAAOtB,UAAU,OAAOuB,IAAI,eAA5B,oBAGA,cAACK,EAAA,EAAD,CACE5B,UAAU,yBACVkD,KAAK,OACL6B,OAAO,KACPxG,GAAG,eACHmC,MAAO8C,EACPzB,SA5FS,SAAAU,GACnB,IAAM/B,EAAQ+B,EAAEjC,OAAOE,MACnBsE,EAAc,GAClBtC,QAAQC,IAAIrE,GACZmF,EAAe/C,GASXA,EAAMuE,SACRD,EAAc1G,EAAK4G,QAAO,SAAAC,GACxB,IAAMC,EACJD,EAAK3G,KAAK6G,cAAcD,WAAW1E,EAAM2E,gBACzCF,EAAK1G,QAAQ4G,cAAcD,WAAW1E,EAAM2E,gBAC5CF,EAAKzG,KAAK2G,cAAcD,WAAW1E,EAAM2E,eAErCC,EACJH,EAAK3G,KAAK6G,cAAcC,SAAS5E,EAAM2E,gBACvCF,EAAK1G,QAAQ4G,cAAcC,SAAS5E,EAAM2E,gBAC1CF,EAAKzG,KAAK2G,cAAcC,SAAS5E,EAAM2E,eACzC,OAAID,KAEQA,GAAcE,EACjBA,EACK,SAEhB3B,EAAgBqB,GAChBvB,EAAe/C,YAkEb,cAAC,IAAD,CACE6E,UAAQ,EACRC,YAAU,EACVC,gBAAc,EACd5B,QAASA,EACT6B,kBAAmB,EACnB1F,UAAU,kBACV2F,SAAU,cAAC,IAAD,CAAa1F,KAAM,KAC7B2F,sBAAuBtC,EAAc,EACrCuC,oBAjEiB,wBACvB,cAAC,KAAD,GACEC,cAAc,GACdC,UAAU,GACVC,UAAW1C,EACX2C,aAAc,SAAAC,GAAI,OAVG,SAAAA,GACvB3C,EAAe2C,EAAKC,UASIC,CAAiBF,IACvCG,UAAW7C,EAAYyB,OAASvB,EAAauB,OAAS,EAAI3G,EAAK2G,OAAS,GAAK,EAC7EqB,WAAW,MACXC,mBAAoB,EACpBC,qBAAsB,EACtBC,gBAAgB,SAChBC,cAAc,YACdC,eAAe,YACfC,mBAAmB,YACnBC,kBAAkB,YAClBC,cAAc,iBACdC,kBAAkB,iBAClBC,sBAAsB,YACtBC,kBAAkB,aAjBpB,+BAkBiB,aAlBjB,mCAmBqB,aAnBrB,mCAoBqB,8FApBrB,KAiEM3I,KAAMkF,EAAYyB,OAASvB,EAAepF,EAC1C4I,wBAAyBpE,OAI7B,cAAC,EAAD,CAAajC,KAAMuC,EAAOjD,YAAaA,EAAayC,WAlMlC,SAACuE,GAEnBvD,EAAa,IACblB,QAAQC,IAAIwE,IA+LkE9G,UAAWA,EAAW/B,KAAMA,S","file":"static/js/245.97bf8ae5.chunk.js","sourcesContent":["\n//expot data\nexport const data = [\n    {\n      id:1,\n      Name: \"Afghanistan\",\n      Initial: \"AF\",\n      code: \"004\",\n      currencies: \"؋\"\n    },\n    {\n      id:2,\n      Name: \"Åland Islands\",\n      Initial: \"AX\",\n      code: 248,\n      currencies: \"€\"\n    },\n    {\n      id:3,\n      Name: \"Albania\",\n      Initial: \"AL\",\n      code: \"008\",\n      currencies: \"L\"\n    }\n]\n\n\n// ** Get initial Data\n// axios.get('http://restcountries.eu/rest/v2/all').then(response => {\n//   console.log(response.data)\n// })\n","// ** Custom Components\nimport * as yup from 'yup'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport Avatar from '@components/avatar'\nimport Select from 'react-select'\n// ** Third Party Components\nimport axios from 'axios'\nimport { MoreVertical, Edit, FileText, Archive, Trash,  MapPin, DollarSign, X  } from 'react-feather'\n\n// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label, Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, FormFeedback  } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = (prop) => {\n  const SignupSchema = yup.object().shape({\n    code: yup.string().required(),\n    Initial: yup.string().required(),\n    Name: yup.string().required(),\n    password: yup.string().required()\n  })\n\n  const { register, errors, handleSubmit } = useForm({ mode: 'onChange', resolver: yupResolver(SignupSchema) })\n\n  const option = [\n  {value: \"؋\", label: \"Afghan afghani\"},\n  {value: \"€\", label: \"EUR\"},\n  {value: \"L\", label: \"All\"}\n  ]\n  const initialvalues = {\n    Name: \"\",\n    Initial: \"\",\n    code: \"\",\n    Currency:\"\"\n  }\n  const [selectedOption, setselectedOption] = useState()\n  const [values, setValues] = useState(initialvalues)\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={prop.handleModal} />\n\n  useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues({...initialvalues})\n    } else {\n        setValues({\n          ...prop.data[prop.currentId - 1]\n        })\n    }\n  }, [prop.currentId, prop.data])\n  //for other input\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n  //for drop down\n  const handleChange = (selectedOption) => {\n    \n    setValues(\n      {\n        ...values,\n        Currency : selectedOption.value\n      }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    prop.editAction(values)\n    setValues(initialvalues)\n  }\n\n  return (\n    <Modal\n      isOpen={prop.open}\n      toggle={prop.handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-3' toggle={prop.handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>New Record</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n       \n        <FormGroup>\n          <Label for='Name'>Name</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <MapPin size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input name=\"Name\"\n              innerRef={register({ required: true })}\n              invalid={errors.Name && true}\n              onChange={handleInputeChange} id='Name' placeholder='Afghanistan' value={values.Name} />\n          </InputGroup>\n          {errors && errors.Name && <FormFeedback>{errors.Name.message}</FormFeedback>}\n        </FormGroup>\n\n        <FormGroup>\n          <Label for='Initial'>Initial</Label>\n          <InputGroup>\n            <Input name=\"Initial\"\n              innerRef={register({ required: true })}\n              invalid={errors.Initial && true} onChange={handleInputeChange} id='Initial' placeholder='eg. Afghanistan : AF' value={values.Initial} />\n          </InputGroup>\n          {errors && errors.Initial && <FormFeedback>{errors.Initial.message}</FormFeedback>}\n        </FormGroup>\n\n        <FormGroup>\n          <Label for='code'>Country code</Label>\n          <InputGroup>\n            <Input name=\"code\"\n              innerRef={register({ required: true })}\n              invalid={errors.code && true} onChange={handleInputeChange} id='post' placeholder='eg. Afghanistan : 004' value={values.code} />\n          </InputGroup>\n          {errors && errors.code && <FormFeedback>{errors.code.message}</FormFeedback>}\n        </FormGroup>\n\n        <FormGroup className='mb-4'>\n          <Label for='Currency'>Currency</Label>\n          \n            \n            <Select\n              className='mb-4'\n              name=\"Currency\"\n              defaultValue={values.Currency}\n              onChange={handleChange}\n              options={option}\n          />\n         \n        </FormGroup>\n\n        <Button className='mr-1' color='primary' onClick={ e =>  {\n                                                          prop.handleModal() \n                                                          submitHandle()\n                                                        }\n                                                      }>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={ prop.handleModal } outline>\n          Cancel\n        </Button>\n\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport axios from 'axios'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Table Data & Columns\nimport { data } from './data'\n\n// ** Add New Modal Component\nimport AddNewModal from './AddNewModal'\n\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\nconst DataTableWithButtons = () => {\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n\n   //deleteCountry\n  const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Name',\n          selector: 'Name',\n          sortable: true,\n          minWidth: '250px',\n          cell: row => (\n            <div className='d-flex align-items-center'>\n              <div className='user-info text-truncate ml-1'>\n                <span className='d-block font-weight-bold text-truncate'>{row.Name}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'initial',\n          selector: 'Initial',\n          sortable: true,\n          minWidth: '250px'\n        },\n        {\n          name: 'Code',\n          selector: 'code',\n          sortable: true,\n          minWidth: '150px'\n        },\n\n        {\n          name: 'Currency',\n          selector: 'currencies',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => {\n            const currency = row.currencies\n            return (\n                <div className='d-flex align-items-center'>\n                  <div className='user-info text-truncate ml-1'>\n                    <span className='d-block font-weight-bold text-truncate'>{currency}</span>\n                  </div>\n                </div>\n            )\n          }\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <div className='pr-1' tag='span'>\n                    <Trash size={15} onClick={e => {\n                                                   e.preventDefault()\n                                                   deleteCountry(row.id)\n                                           } }/>\n                  </div>\n                </UncontrolledDropdown>\n\n                <Edit size={15} onClick={ () => { \n                                    setCurrentId(row.id)\n                                    setModal(true)\n                                     } }/>\n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    console.log(data)\n    setSearchValue(value)\n    const status = {\n      1: { title: 'Current', color: 'light-primary' },\n      2: { title: 'Professional', color: 'light-success' },\n      3: { title: 'Rejected', color: 'light-danger' },\n      4: { title: 'Resigned', color: 'light-warning' },\n      5: { title: 'Applied', color: 'light-info' }\n    }\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.Name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.Initial.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.code.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.Name.toLowerCase().includes(value.toLowerCase()) ||\n          item.Initial.toLowerCase().includes(value.toLowerCase()) ||\n          item.code.toLowerCase().includes(value.toLowerCase())\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Countries List</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            <Button className='ml-2' color='primary' onClick={handleModal}>\n              <Plus size={15} />\n              <span className='align-middle ml-50'>Add Your Country</span>\n            </Button>\n          </div>\n        </CardHeader>\n\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n\n        <DataTable\n          noHeader\n          pagination\n          selectableRows\n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          selectableRowsComponent={BootstrapCheckbox}\n        />\n        \n      </Card>\n      <AddNewModal open={modal} handleModal={handleModal} editAction={AddeditEvent} currentId={currentId} data={data} />\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n"],"sourceRoot":""}