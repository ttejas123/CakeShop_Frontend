{"version":3,"sources":["@core/components/sidebar/index.js","views/master/InvoiceL/add/AddCard.js","views/master/InvoiceL/add/AddAction.js","views/master/InvoiceL/add/index.js","@core/components/repeater/index.js"],"names":["Sidebar","props","width","open","toggleSidebar","size","bodyClassName","contentClassName","wrapperClassName","headerClassName","className","title","children","closeBtn","rest","renderCloseBtn","onClick","Modal","isOpen","toggle","classnames","modalClassName","undefined","style","String","ModalHeader","close","tag","ModalBody","AddCard","useState","count","setCount","setOpen","setClients","Date","picker","setPicker","invoiceNumber","setInvoiceNumber","dueDatepicker","setDueDatePicker","value","label","type","color","options","setOptions","initialvalues","id","default_c","values","setValues","handleInputeChange","event","target","name","useEffect","axios","get","then","response","arr","data","map","item","push","page","perPage","status","q","lastInvoiceNumber","Math","max","apply","allData","i","deleteForm","e","preventDefault","closest","remove","Card","CardBody","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","disabled","onChange","date","Tag","SlideDown","Row","Col","sm","lg","CardText","rows","defaultValue","UncontrolledTooltip","Button","Ripple","Form","onSubmit","md","FormGroup","Label","for","Name","SGST","CGST","IGST","commission","Amount","OrderNumber","order","xs","cols","theme","selectThemeColors","classNamePrefix","isClearable","outline","AddActions","block","Link","to","CustomInput","defaultChecked","InvoiceAdd","xl","AddAction","Repeater","component","items","defaultProps"],"mappings":"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","file":"static/js/240.33d9a80d.chunk.js","sourcesContent":["// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    width,\n    open,\n    toggleSidebar,\n    size,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    className,\n    title,\n    children,\n    closeBtn,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames({\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <ModalBody\n        className={classnames('flex-grow-1', {\n          [bodyClassName]: bodyClassName\n        })}\n      >\n        {children}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  title: Proptypes.string.isRequired,\n  open: Proptypes.bool.isRequired,\n  toggleSidebar: Proptypes.func.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\nimport Repeater from '@components/repeater'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Flatpickr from 'react-flatpickr'\nimport { SlideDown } from 'react-slidedown'\nimport { X, Plus, Hash } from 'react-feather'\nimport Select, { components } from 'react-select'\nimport { selectThemeColors } from '@utils'\nimport {\n  Card,\n  CardBody,\n  CardText,\n  Row,\n  Col,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormGroup,\n  Label,\n  Button,\n  UncontrolledTooltip\n} from 'reactstrap'\n\n// ** Styles\nimport 'react-slidedown/lib/slidedown.css'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst AddCard = () => {\n  // ** States\n  const [count, setCount] = useState(1)\n  const [value, setValue] = useState({})\n  const [open, setOpen] = useState(false)\n  const [clients, setClients] = useState(null)\n  const [selected, setSelected] = useState(null)\n  const [picker, setPicker] = useState(new Date())\n  const [invoiceNumber, setInvoiceNumber] = useState(false)\n  const [dueDatepicker, setDueDatePicker] = useState(new Date())\n  const [options, setOptions] = useState([\n    {\n      value: 'add-new',\n      label: 'Add New Customer',\n      type: 'button',\n      color: 'flat-success'\n    }\n  ])\n  const initialvalues = {\n    id:0,\n    type: 'Category',\n    default_c: 10\n  }\n  const [selectedOption, setselectedOption] = useState()\n  const [values, setValues] = useState(initialvalues)\n  const [allDay, setAllDay] = useState(false)\n  const [endPicker, setEndPicker] = useState(new Date())  \n\n  const optionStatus = [\n    {value: \"meeting done\", label: \"meeting done\"},\n    {value: \"Coprorate converted\", label: \"Coprorate converted\"}\n  ]\n  \n\n  //for other input\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n\n  const submitHandle = (event) => {\n    const { name, value } = event.target\n    console.log({\n      ...values,\n      [name] : values\n    })\n    setValues({\n      ...values,\n      [name] : values\n    })\n    //prop.editAction(values)\n    \n    setValues(initialvalues)\n    alert(\"Data successfully inserted\")\n  }\n\n  useEffect(() => {\n    // ** Get Clients\n    axios.get('/api/invoice/clients').then(response => {\n      const arr = options\n      response.data.map(item => arr.push({ value: item.name, label: item.name }))\n      setOptions([...arr])\n      setClients(response.data)\n    })\n\n    // ** Get Invoices & Set Invoice Number\n    axios\n      .get('/apps/invoice/invoices', {\n        page: 1,\n        perPage: 10,\n        status: '',\n        q: ''\n      })\n      .then(response => {\n        const lastInvoiceNumber = Math.max.apply(\n          Math,\n          response.data.allData.map(i => i.id)\n        )\n        setInvoiceNumber(lastInvoiceNumber + 1)\n      })\n  }, [])\n\n  // ** Deletes form\n  const deleteForm = e => {\n    e.preventDefault()\n    e.target.closest('.repeater-wrapper').remove()\n  }\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setOpen(!open)\n\n  // ** Vars\n  const countryOptions = [\n    { value: 'australia', label: 'Australia' },\n    { value: 'canada', label: 'Canada' },\n    { value: 'russia', label: 'Russia' },\n    { value: 'saudi-arabia', label: 'Saudi Arabia' },\n    { value: 'singapore', label: 'Singapore' },\n    { value: 'sweden', label: 'Sweden' },\n    { value: 'switzerland', label: 'Switzerland' },\n    { value: 'united-kingdom', label: 'United Kingdom' },\n    { value: 'united-arab-emirates', label: 'United Arab Emirates' },\n    { value: 'united-states-of-america', label: 'United States of America' }\n  ]\n\n  // ** Custom Options Component\n  const OptionComponent = ({ data, ...props }) => {\n    if (data.type === 'button') {\n      return (\n        <Button className='text-left rounded-0' color={data.color} block onClick={() => setOpen(true)}>\n          <Plus size={14} /> <span className='align-middle ml-50'>{data.label}</span>\n        </Button>\n      )\n    } else {\n      return <components.Option {...props}> {data.label} </components.Option>\n    }\n  }\n\n  // ** Invoice To OnChange\n  const handleInvoiceToChange = data => {\n    setValue(data)\n    setSelected(clients.filter(i => i.name === data.value)[0])\n  }\n\n  const note =\n    'It was a pleasure working with you and your team. We hope you will keep us in mind for future freelance projects. Thank You!'\n\n  return (\n    <Fragment>\n      <Card className='invoice-preview-card mb-0'>\n        {/* Header */}\n        <CardBody className='invoice-padding pb-0'>\n          <div className='d-flex justify-content-between flex-md-row flex-column invoice-spacing mt-0'>\n            <div>\n              <div className='logo-wrapper'>\n                \n                <h3 className='text-primary invoice-logo ml-0'>Bidoya</h3>\n              </div>\n              <p className='card-text mb-25'>Office 149, 450 South Brand Brooklyn</p>\n              <p className='card-text mb-25'>San Diego County, CA 91905, USA</p>\n              <p className='card-text mb-0'>+1 (123) 456 7891, +44 (876) 543 2198</p>\n            </div>\n            <div className='invoice-number-date mt-md-0 mt-2'>\n              <div className='d-flex align-items-center justify-content-md-end mb-1'>\n                <h4 className='invoice-title'>Invoice</h4>\n                <InputGroup className='input-group-merge invoice-edit-input-group disabled'>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <Hash size={15} />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type='number'\n                    className='invoice-edit-input'\n                    value={invoiceNumber || 3171}\n                    placeholder='53634'\n                    disabled\n                  />\n                </InputGroup>\n              </div>\n              <div className='d-flex align-items-center mb-1'>\n                <span className='title'>Date:</span>\n                <Flatpickr\n                  value={picker}\n                  onChange={date => setPicker(date)}\n                  className='form-control invoice-edit-input date-picker'\n                />\n              </div>\n              <div className='d-flex align-items-center'>\n                <span className='title'>Due Date:</span>\n                <Flatpickr\n                  value={dueDatepicker}\n                  onChange={date => setDueDatePicker(date)}\n                  className='form-control invoice-edit-input due-date-picker'\n                />\n              </div>\n            </div>\n          </div>\n        </CardBody>\n        {/* /Header */}\n\n        <hr className='invoice-spacing' />\n       { /*\n        \n        <CardBody className='invoice-padding pt-0'>\n          <Row className='row-bill-to invoice-spacing'>\n            <Col className='col-bill-to pl-0' lg='8'>\n              <h6 className='invoice-to-title'>Invoice To:</h6>\n              <div className='invoice-customer'>\n                {/*{clients !== null ? (\n                                  <Fragment>\n                                    <Select\n                                      className='react-select'\n                                      classNamePrefix='select'\n                                      id='label'\n                                      value={value}\n                                      options={options}\n                                      theme={selectThemeColors}\n                                      components={{\n                                        Option: OptionComponent\n                                      }}\n                                      onChange={handleInvoiceToChange}\n                                    />\n                                    {selected !== null ? (*\n                      <div className='customer-details mt-1'>\n                        <p className='mb-25'>{selected.name}</p>\n                        <p className='mb-25'>{selected.company}</p>\n                        <p className='mb-25'>{selected.address}</p>\n                        <p className='mb-25'>{selected.country}</p>\n                        <p className='mb-0'>{selected.contact}</p>\n                        <p className='mb-0'>{selected.companyEmail}</p>\n                      </div>\n                   ) : null}\n                                     </Fragment>\n                                   ) : null}\n                    <div className='customer-details mt-1'>\n                        <p className='mb-25'>Tony Herrera</p>\n                        <p className='mb-25'>Leonard-Garcia and Sons</p>\n                        <p className='mb-25'>5345 Robert Squares, Denmark</p>\n                        \n                        <p className='mb-0'>(955) 676-1076</p>\n                        <p className='mb-0'>smithtiffany@powers.com</p>\n                      </div>\n              </div>\n            </Col>\n            <Col className='pr-0 mt-xl-0 mt-2' lg='4'>\n              <h6 className='mb-2'>Payment Details:</h6>\n              <table>\n                <tbody>\n                  <tr>\n                    <td className='pr-1'>Total Due:</td>\n                    <td>\n                      <span className='font-weight-bolder'>$12,110.55</span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className='pr-1'>Bank name:</td>\n                    <td>American Bank</td>\n                  </tr>\n                  <tr>\n                    <td className='pr-1'>Country:</td>\n                    <td>United States</td>\n                  </tr>\n                  <tr>\n                    <td className='pr-1'>IBAN:</td>\n                    <td>ETD95476213874685</td>\n                  </tr>\n                  <tr>\n                    <td className='pr-1'>SWIFT code:</td>\n                    <td>BR91905</td>\n                  </tr>\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n        </CardBody> \n      */ }\n        {/* /Address and Contact */}\n       \n        {/* Product Details */}\n        <CardBody className='invoice-padding invoice-product-details'>\n          <Repeater count={count}>\n            {i => {\n              const Tag = i === 0 ? 'div' : SlideDown\n              return (\n                <Tag key={i} className='repeater-wrapper'>\n                  <Row>\n                    <Col className='d-flex product-details-border position-relative pr-0' sm='12'>\n                      <Row className='w-100 pr-lg-0 pr-1 py-2'>\n                        <Col className='mb-lg-0 mb-2 mt-lg-0 mt-2' lg='5' sm='12'>\n                          <CardText className='col-title mb-md-50 mb-0'>Item</CardText>\n                          <Input type='select' className='item-details'>\n                            <option>App Design</option>\n                            <option>App Customization</option>\n                            <option>ABC Template</option>\n                            <option>App Development</option>\n                          </Input>\n                          <Input className='mt-2' type='textarea' rows='1' defaultValue='Customization & Bug Fixes' />\n                        </Col>\n                        <Col className='my-lg-0 my-2' lg='3' sm='12'>\n                          <CardText className='col-title mb-md-2 mb-0'>Cost</CardText>\n                          <Input type='number' defaultValue='24' placeholder='24' />\n                          <div className='mt-2'>\n                            <span>Discount:</span> <span>0%</span>\n                            <span id={`tax1-${i}`} className='ml-50'>\n                              0%\n                            </span>\n                            <span id={`tax2-${i}`} className='ml-50'>\n                              0%\n                            </span>\n                            <UncontrolledTooltip target={`tax1-${i}`}>Tax 1</UncontrolledTooltip>\n                            <UncontrolledTooltip target={`tax2-${i}`}>Tax 2</UncontrolledTooltip>\n                          </div>\n                        </Col>\n                        <Col className='my-lg-0 my-2' lg='2' sm='12'>\n                          <CardText className='col-title mb-md-2 mb-0'>Qty</CardText>\n                          <Input type='number' defaultValue='1' placeholder='1' />\n                        </Col>\n                        <Col className='my-lg-0 mt-2' lg='2' sm='12'>\n                          <CardText className='col-title mb-md-50 mb-0'>Price</CardText>\n                          <CardText className='mb-0'>$24.00</CardText>\n                        </Col>\n                      </Row>\n                      <div className='d-flex flex-column align-items-center justify-content-start border-left invoice-product-actions py-50 px-25'>\n                        <X size={18} className='cursor-pointer' onClick={deleteForm} />\n                      </div>\n                    </Col>\n                  </Row>\n                </Tag>\n              )\n            }}\n          </Repeater>\n          <Row className='mt-1'>\n            <Col sm='12' className='px-0'>\n              <Button.Ripple color='primary' size='sm' className='btn-add-new' onClick={() => setCount(count + 1)}>\n                <Plus size={14} className='mr-25'></Plus>\n                <span className='align-middle'>Add Item</span>\n              </Button.Ripple>\n            </Col>\n          </Row>\n        </CardBody>\n\n        {/* /Product Details */}\n           <Row>\n      \n      <CardBody className='pl-3 pt-2'>\n      <Col sm='12'>\n        <Form onSubmit={e => e.preventDefault()}>\n          <Row>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='Name'>User Name</Label>\n                <InputGroup>\n                  \n                  <Input name=\"Name\" onChange={handleInputeChange} id='type' value={values.Name} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='SGST'>SGST</Label>\n                <InputGroup>\n                  \n                  <Input name=\"SGST\" onChange={handleInputeChange} id='type' value={values.SGST} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='CGST'>CGST</Label>\n                <InputGroup>\n                  \n                  <Input name=\"CGST\" onChange={handleInputeChange} id='type' value={values.CGST} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='IGST'>IGST</Label>\n                <InputGroup>\n                  \n                  <Input name=\"IGST\" onChange={handleInputeChange} id='type' value={values.IGST} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='commission'>commission</Label>\n                <InputGroup>\n                  \n                  <Input name=\"commission\" onChange={handleInputeChange} id='type' value={values.commission} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='Amount'>Amount</Label>\n                <InputGroup>\n                  \n                  <Input name=\"Amount\" onChange={handleInputeChange} id='type' value={values.Amount} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='OrderNumber'>OrderNumber</Label>\n                <InputGroup>\n                  \n                  <Input name=\"OrderNumber\" onChange={handleInputeChange} id='type' value={values.OrderNumber} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n          </Row>\n        </Form>\n      </Col>\n      </CardBody> \n    </Row>\n        {/* Invoice Total */}\n        <CardBody className='invoice-padding'>\n          <Row className='invoice-sales-total-wrapper'>\n            <Col className='mt-md-0 mt-3' md={{ size: '6', order: 1 }} xs={{ size: 12, order: 2 }}>\n              <div className='d-flex align-items-center mb-1'>\n                <Label for='salesperson' className='form-label'>\n                  Salesperson:\n                </Label>\n                <Input type='text' className='ml-50' id='salesperson' placeholder='Edward Crowley' />\n              </div>\n            </Col>\n            <Col className='d-flex justify-content-end' md={{ size: '6', order: 2 }} xs={{ size: 12, order: 1 }}>\n              <div className='invoice-total-wrapper'>\n                <div className='invoice-total-item'>\n                  <p className='invoice-total-title'>Subtotal:</p>\n                  <p className='invoice-total-amount'>$1800</p>\n                </div>\n                <div className='invoice-total-item'>\n                  <p className='invoice-total-title'>Discount:</p>\n                  <p className='invoice-total-amount'>$28</p>\n                </div>\n                <div className='invoice-total-item'>\n                  <p className='invoice-total-title'>Tax:</p>\n                  <p className='invoice-total-amount'>21%</p>\n                </div>\n                <hr className='my-50' />\n                <div className='invoice-total-item'>\n                  <p className='invoice-total-title'>Total:</p>\n                  <p className='invoice-total-amount'>$1690</p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </CardBody>\n        {/* /Invoice Total */}\n\n        <hr className='invoice-spacing mt-0' />\n\n        {/* Invoice Note */}\n        \n        {/* /Invoice Note */}\n      </Card>\n\n      <Sidebar\n        size='lg'\n        open={open}\n        title='Add Payment'\n        headerClassName='mb-1'\n        contentClassName='p-0'\n        toggleSidebar={toggleSidebar}\n      >\n        <Form>\n          <FormGroup>\n            <Label for='customer-name' className='form-label'>\n              Customer Name\n            </Label>\n            <Input id='customer-name' placeholder='John Doe' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='customer-email' className='form-label'>\n              Customer Email\n            </Label>\n            <Input type='email' id='customer-email' placeholder='example@domain.com' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='customer-address' className='form-label'>\n              Customer Address\n            </Label>\n            <Input type='textarea' cols='2' rows='2' id='customer-address' placeholder='1307 Lady Bug Drive New York' />\n          </FormGroup>\n          <FormGroup>\n            <Label for='country' className='form-label'>\n              Country\n            </Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              options={countryOptions}\n              isClearable={false}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='customer-contact' className='form-label'>\n              Contact\n            </Label>\n            <Input type='number' id='customer-contact' placeholder='763-242-9206' />\n          </FormGroup>\n          <FormGroup className='d-flex flex-wrap mt-2'>\n            <Button className='mr-1' color='primary' onClick={() => setOpen(false)}>\n              Add\n            </Button>\n            <Button color='secondary' onClick={() => setOpen(false)} outline>\n              Cancel\n            </Button>\n          </FormGroup>\n        </Form>\n      </Sidebar>\n    </Fragment>\n  )\n}\n\nexport default AddCard\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Card, CardBody, Button, Input, CustomInput, Label } from 'reactstrap'\n\nconst AddActions = () => {\n  return (\n    <Fragment>\n      <Card className='invoice-action-wrapper'>\n        <CardBody>\n          <Button.Ripple color='primary' block className='mb-75' disabled>\n            Send Invoice\n          </Button.Ripple>\n          <Button.Ripple tag={Link} to='/apps/invoice/preview' color='primary' block outline className='mb-75'>\n            Preview\n          </Button.Ripple>\n          <Button.Ripple color='primary' block outline>\n            Save\n          </Button.Ripple>\n        </CardBody>\n      </Card>\n      <div className='mt-2'>\n        <div className='invoice-payment-option'>\n          <p className='mb-50'>Accept payments via</p>\n          <Input type='select' id='payment-select'>\n            <option>Debit Card</option>\n            <option>Credit Card</option>\n            <option>Paypal</option>\n            <option>Internet Banking</option>\n            <option>UPI Transfer</option>\n          </Input>\n        </div>\n        <div className='invoice-terms mt-1'>\n          <div className='d-flex justify-content-between'>\n            <Label className='mb-0' for='payment-terms'>\n              Payment Terms\n            </Label>\n            <CustomInput type='switch' id='payment-terms' defaultChecked />\n          </div>\n          <div className='d-flex justify-content-between py-1'>\n            <Label className='mb-0' for='client-notes'>\n              Client Notes\n            </Label>\n            <CustomInput type='switch' id='client-notes' defaultChecked />\n          </div>\n          <div className='d-flex justify-content-between'>\n            <Label className='mb-0' for='payment-stub'>\n              Payment Stub\n            </Label>\n            <CustomInput type='switch' id='payment-stub' />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AddActions\n","// ** Invoice Add Components\nimport AddCard from './AddCard'\nimport AddActions from './AddAction'\n\n// ** Third Party Components\nimport { Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/base/pages/app-invoice.scss'\n\nconst InvoiceAdd = () => {\n  return (\n    <div className='invoice-add-wrapper'>\n      <Row className='invoice-add'>\n        <Col xl={9} md={8} sm={12}>\n          <AddCard />\n        </Col>\n        <Col xl={3} md={4} sm={12}>\n          <AddActions />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default InvoiceAdd\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}