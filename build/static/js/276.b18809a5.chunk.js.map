{"version":3,"sources":["views/report/productIssue/data.js","views/report/productIssue/index.js"],"names":["data","Order_Id","product_id","product_quality","product_Cost","Action","raised_by","entity_type","raised_time","Date","toGMTString","id","BootstrapCheckbox","forwardRef","ref","onClick","rest","className","type","DataTableWithButtons","statusObj","return","refund","replace","useState","currentPage","setCurrentPage","filteredData","searchValue","columns","name","selector","sortable","minWidth","maxWidth","cell","row","Badge","color","pill","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Card","CardHeader","CardTitle","tag","UncontrolledButtonDropdown","DropdownToggle","caret","outline","size","DropdownMenu","right","DropdownItem","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","selectableRowsComponent"],"mappings":"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","file":"static/js/276.b18809a5.chunk.js","sourcesContent":["//order id\n//product id\n//product quality\n//product cost\n//return\n//refund\n//replace\n//raised by\n// entity type\n//raised time\n\n//expot data\nexport const data = [\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"return\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 1\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"refund\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 2\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"return\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 3\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"replace\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 4\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"refund\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 5\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"return\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 6\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"refund\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 7\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"replace\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 8\n      },\n      {\n        Order_Id: 123123,\n        product_id: 321321,\n        product_quality: \"Good\",\n        product_Cost: 30000,\n        Action: \"return\",\n        raised_by: \"user1212\",\n        entity_type:'',\n        raised_time: `${new Date().toGMTString()}`,\n        id: 9\n      }\n]\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport axios from 'axios'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data } from './data'\nimport Select from 'react-select'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Eye, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash, Check, X  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\nconst DataTableWithButtons = () => {\n  const statusObj = {\n        return: 'light-secondary',\n        refund: 'light-success',\n        replace: 'light-warning'\n  }\n  // ** States\n  \n  \n  const [currentPage, setCurrentPage] = useState(0)\n  const [reviewId, setreviewId] = useState(0)\n  const [filteredData, setFilteredData] = useState([])\n  const [searchValue, setSearchValue] = useState('')\n  const [Filter, setFilter] = useState('')\n\n   //deleteCountry\n  const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) { \n        console.log(\"Deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n\n  //columns\n  const columns = [\n//order id\n//product id\n//product quality\n//product cost\n//return\n//refund\n//replace\n//raised by\n// entity type\n//raised time\n        {\n          name: 'Id',\n          selector: 'id',\n          sortable: true,\n          minWidth: '50px',\n          maxWidth: '150px'\n        },\n        {\n          name: 'Order Id',\n          minWidth: '150px',\n          selector: 'Order_Id',\n          sortable: true,\n          cell: row => (\n            <div className='d-flex justify-content-left align-items-center'>\n\n              <div className='d-flex flex-column'>\n                \n                  <span className='font-weight-bold'>{row.Order_Id}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Product Id',\n          selector: 'product_id',\n          sortable: true,\n          minWidth: '130px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>{row.product_id}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Action',\n          selector: 'Action',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n<span className='d-block font-weight-bold text-truncate'>\n                      <Badge className='text-capitalize' color={statusObj[row.Action]} pill>\n                          {row.Action}\n                      </Badge>\n                </span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Raised By',\n          selector: 'raised_by',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>\n                          {row.raised_by}       \n                </span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Entity Type',\n          selector: 'entity_type',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Raised Time',\n          selector: 'raised_time',\n          sortable: true,\n          minWidth: '130px',\n          maxWidth: '150px'\n        }\n    ]\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n\n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n     \n     <Card>\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Product Issue</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n                \n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='secondary' caret outline>\n                <Share size={15} />\n                <span className='align-middle ml-50'>Export</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem className='w-100'>\n                  <Printer size={15} />\n                  <span className='align-middle ml-50'>Print</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(data)}>\n                  <FileText size={15} />\n                  <span className='align-middle ml-50'>CSV</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Grid size={15} />\n                  <span className='align-middle ml-50'>Excel</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <File size={15} />\n                  <span className='align-middle ml-50'>PDF</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Copy size={15} />\n                  <span className='align-middle ml-50'>Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown> \n          </div>\n        </CardHeader>\n\n        <DataTable\n          noHeader\n          pagination\n          selectableRows\n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          selectableRowsComponent={BootstrapCheckbox}\n        />\n        \n      </Card>\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n"],"sourceRoot":""}