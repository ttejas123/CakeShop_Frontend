{"version":3,"sources":["views/master/kyc/AddKyc.js","views/master/kyc/EditKyc.js","views/master/kyc/kycList.js"],"names":["HorizontalForm","props","useState","values","setValues","Card","CardBody","Form","Row","Col","className","md","size","offset","FormGroup","row","Label","sm","for","Input","type","name","id","placeholder","onChange","event","target","value","Button","Ripple","color","onClick","e","preventDefault","console","log","handleSubmit","outline","handleCancel","EditForm","data","defaultValue","KYCList","KYCData","currentPage","setCurrentPage","searchValue","filteredData","addClicked","setAddClicked","editClicked","setEditClicked","editData","setEditData","BrandColumns","selector","sortable","minWidth","allowOverflow","cell","UncontrolledDropdown","DropdownToggle","tag","confirm","item","Previous","Next","CardHeader","CardTitle","noHeader","pagination","selectableRowsNoSelectAll","columns","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName"],"mappings":"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","file":"static/js/268.7ab01dd5.chunk.js","sourcesContent":["import { useState } from 'react'\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Row,\n    Col,\n    Input,\n    Form,\n    Button,\n    CustomInput,\n    Label\n  } from 'reactstrap'\n  \n  const HorizontalForm = (props) => {\n    \n    const [values, setValues] = useState('')\n    const handleInputeChange = (event) => {\n        const {name, value} = event.target\n        setValues(\n        {\n          ...values,\n          [name] : value\n        }\n        )\n      }\n    \n      const handleSubmit = () => {\n        console.log(values)\n        props.handleSubmit(values)\n        //prop.editAction(values)\n        //setValues(initialvalues)\n      }\n\n    \n    //   const handleSubmit = () => {\n    //       console.log(name)\n    //       console.log(symbol)\n    //   }\n    return (\n      <Card>  \n        <CardBody>\n          <Form>\n            <Row >\n            <Col className='d-flex' md={{ size: 9, offset: 5 }}>\n            <FormGroup row  md={{ size: 9, offset: 3 }}>\n              <Label sm='4' size='lg' for='name'>\n                Name\n              </Label>\n              <Col sm='8'>\n                <Input type='text' name='name' id='name' placeholder='KYC Name' onChange={handleInputeChange} />\n              </Col>\n            </FormGroup>\n  \n            \n            </Col>\n            </Row>\n            <FormGroup className='mb-0 mx-auto' row>\n              <Col className='d-flex' md={{ size: 8, offset: 5 }}>\n                <Button.Ripple className='mr-1' color='primary' type='submit' onClick={e => { \n                                                e.preventDefault() \n                                                handleSubmit()\n                                                } } >\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple outline color='secondary' type='reset' onClick={props.handleCancel} >\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n  export default HorizontalForm\n  ","import { useState } from 'react'\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Row,\n    Col,\n    Input,\n    Form,\n    Button,\n    CustomInput,\n    Label\n  } from 'reactstrap'\n  \n  const EditForm = (props) => {\n      console.log(props.data)\n      const [values, setValues] = useState('')\n    const handleInputeChange = (event) => {\n        const {name, value} = event.target\n        setValues(\n        {\n          ...values,\n          [name] : value\n        }\n        )\n      }\n    \n      const handleSubmit = () => {\n        console.log(values)\n        props.handleSubmit(values)\n        //prop.editAction(values)\n        //setValues(initialvalues)\n      }\n    return (\n      <Card>  \n        <CardBody>\n          <Form>\n            <Row >\n            <Col className='d-flex' md={{ size: 9, offset: 5 }}>\n            <FormGroup row  md={{ size: 9, offset: 3 }}>\n              <Label sm='4' size='lg' for='name'>\n                Name\n              </Label>\n              <Col sm='8'>\n                <Input type='text' name='name' id='name' defaultValue={props.data.name} placeholder='KYC Name' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup>\n\n            </Col>\n            </Row>\n            <FormGroup className='mb-0 mx-auto' row>\n              <Col className='d-flex' md={{ size: 8, offset: 5 }}>\n              <Button.Ripple className='mr-1' color='primary' type='submit' onClick={e => { \n                                                e.preventDefault() \n                                                handleSubmit()\n                                                } } >\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple outline color='secondary' type='reset' onClick={props.handleCancel}>\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n  export default EditForm\n  ","// ** React Imports\nimport { Fragment, useState } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Table Columns\n//import { KYCData } from './data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { FormattedMessage } from 'react-intl'\nimport DataTable from 'react-data-table-component'\nimport { MoreVertical, Edit, FileText, Archive, Trash, ChevronDown, Plus} from 'react-feather'\nimport { Card, CardHeader, CardTitle, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap'\n//import InputBasic from './AddKYC'\nimport HorizontalForm from './AddKyc'\nimport EditForm from './EditKyc'\n\nconst KYCList = () => {\n\n    //console.log(BrandColumns)\n    const KYCData = [\n        {\n            name:\"Aadhar\"\n        },\n        {\n            name:\"Pan\"\n        },\n        {\n            name:\"Driving License\"\n        },\n        {\n            name:\"Passport\"\n        }\n    ]\n    console.log(KYCData)\n  // ** State\n//   const data = [\n//     {\n//       name: \"US Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Canadian Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Euro\",\n//       symbol: \"€\"\n//     }\n// ]\n// console.log(data)\n\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [addClicked, setAddClicked] = useState(0)\n  const [editClicked, setEditClicked] = useState(0)\n  const [editData, setEditData] = useState({})\n  \n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  const handleEditClick = (item) => {\n      if (!addClicked) { \n        setEditClicked(!editClicked)\n        setEditData(item)\n      }\n    //console.log(item)\n  }\n\n  const handleAddClick = () => {\n      if (!editClicked) {\n        setAddClicked(!addClicked)\n      }\n  }\n\n  const handleCancelOfEdit = () => {\n    console.log(\"in Cancel\")\n    setEditClicked(!editClicked)\n}\nconst handleCancelOfAdd = () => {\n    console.log(\"in Cancel\")\n    setAddClicked(!addClicked)\n}\nconst handleSubmitOfAdd = (data) => {\n    console.log(\"in submit\", data)\n    setAddClicked(!addClicked)\n}\n\nconst handleSubmitOfEdit = (data) => {\n    console.log(\"in submit of edit\", data)\n    setEditClicked(!editClicked)\n}\n\nconst handleDelete = (data) => {\n   const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n}\n\n  const BrandColumns = [\n    {\n      name: 'KYC Name',\n      selector: 'name',\n      sortable: true,\n      minWidth: '250px',\n      className : 'dt-body-right'\n    },\n    {\n      name: 'Actions',\n      allowOverflow: true,\n      cell: row => {\n        return (\n          <div className='d-flex'>\n            <UncontrolledDropdown>\n              <DropdownToggle className='pr-1' tag='span'>\n                <Trash size={15} onClick={e => { handleDelete(row) }} />\n              </DropdownToggle>\n            </UncontrolledDropdown>\n            <Edit size={15} onClick={ e => { \n                                                e.preventDefault() \n                                                handleEditClick(row) \n                                                } } />\n          </div>\n        )\n      }\n    }\n  ]\n  \n  // ** Function to handle filter\n  // const handleFilter = e => {\n  //   const value = e.target.value\n  //   let updatedData = []\n  //   setSearchValue(value)\n\n  //   const status = {\n  //     1: { title: 'Current', color: 'light-primary' },\n  //     2: { title: 'Professional', color: 'light-success' },\n  //     3: { title: 'Rejected', color: 'light-danger' },\n  //     4: { title: 'Resigned', color: 'light-warning' },\n  //     5: { title: 'Applied', color: 'light-info' }\n  //   }\n\n  //   if (value.length) {\n  //     updatedData = data.filter(item => {\n  //       const startsWith =\n  //         item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n  //       const includes =\n  //         item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.post.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.email.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.age.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n  //       if (startsWith) {\n  //         return startsWith\n  //       } else if (!startsWith && includes) {\n  //         return includes\n  //       } else return null\n  //     })\n  //     setFilteredData(updatedData)\n  //     setSearchValue(value)\n  //   }\n  // }\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Prev' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Next' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : KYCData.length / 7 || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\n    />\n  )\n\n  return (\n      <Fragment>\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>KYC List</CardTitle>\n        <Button className='ml-2' color='primary' onClick={handleAddClick}>\n              <Plus size={15} />\n              <span className='align-middle ml-50'>Add KYC</span>\n            </Button>\n      </CardHeader>\n      {addClicked ? <HorizontalForm handleCancel={handleCancelOfAdd} handleSubmit={handleSubmitOfAdd} /> : null}\n      {editClicked ? <EditForm data ={editData} handleCancel={handleCancelOfEdit} handleSubmit={handleSubmitOfEdit} /> : null}\n      {/* <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='mr-1' for='search-input-1'>\n            <FormattedMessage id='Search' />\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row> */}\n      <DataTable\n        noHeader\n        pagination\n        selectableRowsNoSelectAll\n        columns={BrandColumns}\n        className='react-dataTable dt-body-right'\n        paginationPerPage={7}\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={KYCData}\n      />\n      {/* <CardFooter>\n        <CardText className='mb-0'>\n          <span className='font-weight-bold'>Note:</span>{' '}\n          <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter> */}\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default KYCList\n"],"sourceRoot":""}