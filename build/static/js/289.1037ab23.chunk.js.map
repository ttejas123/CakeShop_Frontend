{"version":3,"sources":["views/master/claculator/index.js","@core/components/repeater/index.js"],"names":["UserAccountTab","prop","initialvalues","id","gst","amount","bidoya","useState","values","setValues","Total","setTotal","Date","handleInputeChange","event","target","name","value","useEffect","parseFloat","sm","className","onSubmit","e","preventDefault","md","for","onChange","type","min","max","step","Repeater","props","count","tag","children","component","rest","Tag","items","i","push","defaultProps"],"mappings":"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","file":"static/js/289.1037ab23.chunk.js","sourcesContent":["// ** React Imports\nimport Nouislider from 'nouislider-react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { useParams } from 'react-router-dom'\nimport Repeater from '@components/repeater'\nimport Select from 'react-select'\nimport { selectThemeColors, isObjEmpty } from '@utils'\nimport { useState, useEffect } from 'react'\nimport Flatpickr from 'react-flatpickr'\nimport { MoreVertical, User, Users, Edit, Calendar, FileText, Archive, Trash,  MapPin, DollarSign, X, Plus  } from 'react-feather'\n// import { data } from './data'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\n\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, InputGroup, InputGroupAddon, InputGroupText,  Card, CardHeader,\n  CardBody, Badge, ListGroupItem,\n  CardTitle, CustomInput } from 'reactstrap'\n\nconst UserAccountTab = (prop) => {\n\n  const initialvalues = {\n    id:0,\n    gst:0,\n    amount:0,\n    bidoya: 0\n  }\n  const [selectedOption, setselectedOption] = useState()\n  const [values, setValues] = useState(initialvalues)\n  const [allDay, setAllDay] = useState(false)\n  const [Total, setTotal] = useState(0)\n  const [endPicker, setEndPicker] = useState(new Date())  \n\n  //for other input\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n\n  const submitHandle = (event) => {\n    const { name, value } = event.target\n    console.log({\n      ...values,\n      [name] : values\n    })\n    setValues({\n      ...values,\n      [name] : values\n    })\n    //prop.editAction(values)\n    \n    setValues(initialvalues)\n    alert(\"Data successfully inserted\")\n  }\n\n  useEffect(() => {\n     \n     const amount = parseFloat(values.amount)\n     const gst = amount * parseFloat(values.gst) / 100\n     const bidoya = amount * parseFloat(values.bidoya) / 100\n      setTotal(\n        gst + amount + bidoya\n        )\n         \n  }, [values.gst, values.amount, values.bidoya])\n  \n\n  return (\n    <Card>\n    <Row>\n      \n        <Col sm='12' className=\"pl-5 pt-2\">\n          <h2 className=\"mb-1\">Calculator</h2>\n        </Col>\n      \n      <CardBody className='pl-3 pt-2'>\n      <Col sm='12'>\n        <Form onSubmit={e => e.preventDefault()}>\n          <Row>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='amount'>Amount without GST in (₹)</Label>\n                <InputGroup>\n                  \n                  <Input name=\"amount\" onChange={handleInputeChange} id='amount' type=\"number\" value={values.amount} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n            \n            <Col md='7' sm='12'>\n                \n                  <FormGroup>\n                    <Label for='gst'>Seller GST</Label>\n                    <Input type='range' onChange={handleInputeChange} name='gst'  min=\"0\" max=\"100\" step=\"0.2\" value={values.gst} />\n                    <output id=\"output\">{values.gst}%</output>\n                  </FormGroup>\n              \n            </Col>\n\n            <Col md='7' sm='12'>\n                \n                  <FormGroup>\n                    <Label for='bidoya'>Bidoya Commission</Label>\n                    <Input type='range' onChange={handleInputeChange} name='bidoya'  min=\"0\" max=\"100\" step=\"0.2\" value={values.bidoya} />\n                    <output id=\"output\">{values.bidoya}%</output>\n                  </FormGroup>\n              \n            </Col>\n            <hr />\n            <Col md='12' sm='12'>\n                 \n                    <Row className=\"pt-2\">\n                      <Col md=\"4\" sm='6'>\n                        <h5 for='bidoya'>Amount without GST in (₹):</h5>\n                      </Col>\n                      <Col md=\"4\" sm='6'>\n                        <>₹{values.amount}</>\n                      \n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col md=\"4\" sm='6'>\n                        <h5 for='bidoya'>Seller GST in (%):</h5>\n                      </Col>\n                      <Col md=\"4\" sm='6'>\n                        <>{values.gst}%</>\n                      \n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col md=\"4\" sm='6'>\n                        <h5 for='bidoya'>Seller GST in (%):</h5>\n                      </Col>\n                      <Col md=\"4\" sm='6'>\n                        <>{values.bidoya}%</>\n                      \n                      </Col>\n                    </Row>\n                      \n                    \n                    <hr />\n\n                  \n                  <Row>\n                      <Col md=\"4\" sm='6'>\n                        <h4 for='bidoya'><b>Total Amount:</b></h4>\n                      </Col>\n                      <Col md=\"4\" sm='6'>\n                        <><b>₹{Total}</b></>\n                      \n                      </Col>\n                    </Row>\n            </Col> \n          </Row>\n        </Form>\n      </Col>\n\n      </CardBody> \n    </Row>\n    </Card>\n  )\n}\nexport default UserAccountTab\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}