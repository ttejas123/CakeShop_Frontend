{"version":3,"sources":["views/master/logistics/data.js","views/master/logistics/formModel.js","views/master/logistics/logistics.js"],"names":["data","Name","id","HorizontalForm","prop","initialvalues","useState","values","setValues","useEffect","currentId","Card","CardBody","Form","Row","Col","className","md","size","offset","FormGroup","row","Label","sm","for","Input","type","value","name","placeholder","onChange","event","target","files","console","log","Button","Ripple","color","onClick","e","handleModal","editAction","outline","BootstrapCheckbox","forwardRef","ref","rest","DataTableWithButtons","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","setCurrentId","addClicked","setAddClicked","columns","selector","sortable","minWidth","cell","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","preventDefault","confirm","CardHeader","CardTitle","val","bsSize","updatedData","length","filter","item","startsWith","toLowerCase","includes","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","selectableRowsComponent"],"mappings":"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","file":"static/js/277.d480673a.chunk.js","sourcesContent":["//expot data\nexport const data = [\n      {\n        Name: \"LNT\",\n        id: 1\n      },\n      {\n        Name: \"TCS\",\n        id: 2\n      },\n      {\n        Name: \"Govind limited\",\n        id: 3\n      },\n      {\n        Name: \"GCS\",\n        id: 4\n      },\n      {\n        Name: \"TATA logistics limited\",\n        id: 5\n      },\n      {\n        Name: \"Infosys\",\n        id: 6\n      },\n      {\n        Name: \"IDE\",\n        id: 7\n      },\n      {\n        Name: \"MasterCard\",\n        id: 8\n      }\n]\n","import React, { useState, useEffect } from 'react'\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Row,\n    Col,\n    Input,\n    Form,\n    Button,\n    CustomInput,\n    Label\n  } from 'reactstrap'\n  \n  const HorizontalForm = (prop) => {\n    const initialvalues = {\n    Name: \"\"\n  }\n\n  const [values, setValues] = useState(initialvalues)\n\n  useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues({...initialvalues})\n    } else {\n        setValues({\n          ...prop.data[prop.currentId - 1]\n        })\n    }\n  }, [prop.currentId, prop.data])\n\n  const handleInputeChange = (event) => {\n    const {name, value, files} = event.target\n    console.log(event.target)\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    prop.editAction(values)\n    setValues(initialvalues)\n  }\n    return (\n      <Card>  \n        <CardBody>\n          <Form>\n            <Row >\n            <Col className='d-flex' md={{ size: 7, offset: 3 }}>\n              <FormGroup className='ml-3' row>\n                <Label sm='4' size='lg' for='state'>\n                  Partner Name \n                </Label>\n                <Col sm='8'>\n                  <Input type='text' value={values.Name}  name='Name' id='Name' placeholder='Name' onChange={handleInputeChange} />\n                </Col>\n              </FormGroup>\n            </Col>\n            </Row>\n            <FormGroup className='mb-0 mx-auto' row>\n              <Col className='d-flex' md={{ size: 8, offset: 5 }}>\n                <Button.Ripple className='mr-1' color='primary' onClick={ e =>  {\n                                                          prop.handleModal() \n                                                          submitHandle()\n                                                        }\n                                                      }>\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple outline color='secondary' type='reset' onClick={prop.handleModal} >\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n  export default HorizontalForm\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Table Data & Columns\nimport { data } from './data'\n\n// ** Add New Modal Component\nimport ModelForm from './formModel'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\nconst DataTableWithButtons = () => {\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n\n  const [addClicked, setAddClicked] = useState(0)\n\n\n   //deleteCountry\n  const deleteState = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n     console.log(currentId)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Partners Name',\n          selector: 'Name',\n          sortable: true,\n          minWidth: '250px',\n          cell: row => (\n            <div className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>{row.Name}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pr-1' tag='span'>\n                    <Trash size={15}  onClick={e => {\n                                                                                    e.preventDefault()\n                                                                                    deleteState(row.id)\n                                                                                  } } />\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n\n                <Edit size={15} onClick={ () => { \n                                    setCurrentId(row.id)\n                                     setAddClicked(!addClicked)\n                                     } }/>\n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle toggle\n  const handleModal = () => {\n    if (addClicked === 1) {\n     setAddClicked(0)\n    } else {\n      setAddClicked(1)\n    }\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    console.log(data)\n    setSearchValue(value)\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.Name.toLowerCase().startsWith(value.toLowerCase())\n\n        const includes =\n          item.Name.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 6 : data.length / 6 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Logistics Partners</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            {addClicked === 0 ? (\n                <Button className='ml-2' color='primary' onClick={handleModal}>\n                                        <Plus size={15} />\n                                        <span className='align-middle ml-50'>Add new partner</span>\n                </Button>\n                ) : (\n                <span></span>\n                )\n            }\n          </div>\n        </CardHeader>\n        {addClicked ? <ModelForm handleModal={handleModal} editAction={AddeditEvent} currentId={currentId} data={data} /> : null}\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          selectableRows\n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          selectableRowsComponent={BootstrapCheckbox}\n        />\n        \n      </Card>\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n"],"sourceRoot":""}