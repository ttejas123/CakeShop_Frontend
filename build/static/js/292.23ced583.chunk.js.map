{"version":3,"sources":["views/master/credit/creditLimitList.js"],"names":["CreditLimitList","useState","currentPage","setCurrentPage","searchValue","filteredData","renderCorporateName","row","color","Math","floor","random","img","length","to","id","className","width","height","content","corporateName","initials","columns","name","minWidth","selector","sortable","cell","allowOverflow","tag","size","onClick","e","confirm","console","log","Previous","Next","noHeader","pagination","selectableRowsNoSelectAll","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","creditLimitData","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","data"],"mappings":"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","file":"static/js/292.23ced583.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// ** Table Columns\nimport { creditLimitData, columns } from './data'\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { FormattedMessage } from 'react-intl'\nimport DataTable from 'react-data-table-component'\nimport { MoreVertical, Edit, FileText, Archive, Trash, ChevronDown, Plus} from 'react-feather'\nimport { Card, CardHeader, CardTitle, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap'\n//import InputBasic from './AddBadges'\n// import HorizontalForm from './AddCurrency'\n// import EditForm from './EditCurrency'\n\nconst CreditLimitList = () => {\n\n    //console.log(BankGuarranteApplsColumns)\n    //console.log(creditLimitData)\n  // ** State\n//   const data = [\n//     {\n//       name: \"US Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Canadian Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Euro\",\n//       symbol: \"â‚¬\"\n//     }\n// ]\n// console.log(data)\n\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [addClicked, setAddClicked] = useState(0)\n  const [editClicked, setEditClicked] = useState(0)\n  const [editData, setEditData] = useState({})\n  \n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  const handleEditClick = (item) => {\n      if (!addClicked) { \n        setEditClicked(!editClicked)\n        setEditData(item)\n      }\n    //console.log(item)\n  }\n\n  const handleAddClick = () => {\n      if (!editClicked) {\n        setAddClicked(!addClicked)\n      }\n  }\n\n  const handleCancelOfEdit = () => {\n    console.log(\"in Cancel\")\n    setEditClicked(!editClicked)\n}\nconst handleCancelOfAdd = () => {\n    console.log(\"in Cancel\")\n    setAddClicked(!addClicked)\n}\nconst handleSubmitOfAdd = (data) => {\n    console.log(\"in submit\", data)\n    setAddClicked(!addClicked)\n}\n\nconst handleSubmitOfEdit = (data) => {\n    console.log(\"in submit of edit\", data)\n    setEditClicked(!editClicked)\n}\n\nconst handleDelete = (data) => {\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n}\n\nconst renderCorporateName = row => {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n  \n    if (row.img.length) {\n      return <Link to={`/bidDetails/${row.id}`}> <Avatar className='mr-1' img={row.img} width='32' height='32'  /> </Link>\n    } else {\n      return <Link to={`/bidDetails/${row.id}`}><Avatar color={color || 'primary'} className='mr-1' content={row.corporateName || 'John Doe'} initials /> </Link>\n    }\n  }\n\nconst columns = [\n    {\n        name: 'Corporate Name',\n        minWidth: '250px',\n        selector: 'corporateName',\n        sortable: true,\n        cell: row => (\n          <div className='d-flex justify-content-left align-items-center'>\n            {renderCorporateName(row)}\n            <div className=''>\n              {/* <Link to={`/bidDetails/${row.id}`}> */}\n                <div className='user-info text-truncate d-flex flex-column'>\n                   <span className='font-weight-bold'>{row.corporateName}</span>\n                   {/* <small className='text-truncate text-muted mb-0'>@{row.corporateName}</small> */}\n                </div>\n              {/* </Link>   */}\n            </div>\n          </div>\n        )\n    },\n    {\n        name: 'Financial Partner',\n        selector: 'financialPartner',\n        sortable: true,\n        minWidth: '100px'\n      },\n    {\n        name: 'Credit Limit',\n        selector: 'creditLimit',\n        sortable: true,\n        minWidth: '100px'\n    },\n    {\n        name: 'Currency',\n        selector: 'currency',\n        sortable: true,\n        minWidth: '100px'\n    },\n    {\n        name: 'Rate Of Interest',\n        selector: 'rateOfInterest',\n        sortable: true,\n        minWidth: '100px'\n    },\n    {\n        name: 'Approved Time',\n        selector: 'approvedTime',\n        sortable: true,\n        minWidth: '100px'\n    },\n    {\n      name: 'Actions',\n      allowOverflow: true,\n      cell: row => {\n        return (\n          <div className='d-flex'>\n            <UncontrolledDropdown>\n              <DropdownToggle className='pr-1' tag='span'>\n                <Trash size={15} onClick={e => { handleDelete(row) }} />\n              </DropdownToggle>\n            </UncontrolledDropdown>\n            <Edit  \n                  size={15} \n                  onClick={ () => { \n                                    //setCurrentId(row.id)\n                                    //setModal(true)\n                                     } }>\n                                       \n                                     </Edit>\n          </div>\n        )\n      }\n    }\n  ]\n  \n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Prev' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Next' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : creditLimitData.length / 7 || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\n    />\n  )\n\n  return (\n      <Fragment>\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>Credit Limit List</CardTitle>\n        {/* <Link  to={`/add-bill-discounting`}>\n            <Button className='ml-2' color='primary'>\n              <Plus size={15} />\n              <span className='align-middle ml-50'>Add Application</span>\n            </Button>\n            </Link> */}\n      </CardHeader>\n      {/* {addClicked ? <HorizontalForm handleCancel={handleCancelOfAdd} handleSubmit={handleSubmitOfAdd} /> : null}\n      {editClicked ? <EditForm data ={editData} handleCancel={handleCancelOfEdit} handleSubmit={handleSubmitOfEdit} /> : null} */}\n      {/* <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='mr-1' for='search-input-1'>\n            <FormattedMessage id='Search' />\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row> */}\n      <DataTable\n        noHeader\n        pagination\n        selectableRowsNoSelectAll\n        columns={columns}\n        className='react-dataTable'\n        paginationPerPage={7}\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={creditLimitData}\n      />\n      {/* <CardFooter>\n        <CardText className='mb-0'>\n          <span className='font-weight-bold'>Note:</span>{' '}\n          <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter> */}\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default CreditLimitList\n"],"sourceRoot":""}