{"version":3,"sources":["configs/themeConfig.js","assets/images/logo/logo.jpg","utility/context/ThemeColors.js","redux/reducers/auth/index.js","redux/reducers/navbar/index.js","redux/reducers/layout/index.js","views/user/store/reducer/index.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","@core/components/spinner/Fallback-spinner.js","@core/components/ripple-button/index.js","serviceWorker.js","index.js"],"names":["themeConfig","app","appName","appLogoImage","require","default","layout","isRTL","skin","routerTransition","type","contentWidth","menu","isHidden","isCollapsed","navbar","backgroundColor","footer","customizer","scrollTop","ThemeColors","createContext","ThemeContext","children","useState","colors","setColors","useEffect","window","getHex","color","getComputedStyle","document","body","getPropertyValue","trim","obj","primary","light","concat","main","secondary","success","danger","warning","info","dark","Provider","value","initialState","userData","authReducer","state","action","data","config","storageTokenKeyName","storageRefreshTokenKeyName","suggestions","bookmarks","query","navbarReducer","val","objectToUpdate","find","item","id","isBookmarked","bookmarkIndex","findIndex","x","push","splice","menuCollapsed","localStorage","getItem","JSON","parse","initialMenuCollapsed","menuHidden","layoutReducer","setItem","allData","total","params","selectedUser","users","rootReducer","combineReducers","auth","middleware","thunk","createDebounce","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","SpinnerComponent","className","style","height","width","src","logo","alt","Button","Ripple","onClick","rest","mounted","setMounted","isRippling","setIsRippling","y","coords","setCoords","setTimeout","classnames","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","Boolean","location","hostname","match","LazyApp","lazy","ReactDOM","render","fallback","newestOnTop","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kJAGA,IAAMA,EAAc,CAClBC,IAAK,CACHC,QAAS,SACTC,aAAcC,EAAQ,IAAoCC,SAE5DC,OAAQ,CACNC,OAAO,EACPC,KAAM,OACNC,iBAAkB,SAClBC,KAAM,WACNC,aAAc,OACdC,KAAM,CACJC,UAAU,EACVC,aAAa,GAEfC,OAAQ,CAGNL,KAAM,SAENM,gBAAiB,WAEnBC,OAAQ,CACNP,KAAM,UAERQ,YAAY,EACZC,WAAW,IAIAnB,O,gCCjCf,OAAe,cAA0B,kC,oICInCoB,EAAcC,0BAEdC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAETC,mBAAS,IAFA,mBAE9BC,EAF8B,KAEtBC,EAFsB,KA8CrC,OAzCAC,qBAAU,WACR,GAAe,cAAXC,OAAwB,CAE1B,IAAMC,EAAS,SAAAC,GAAK,OAAIF,OAAOG,iBAAiBC,SAASC,MAAMC,iBAAiBJ,GAAOK,QAGjFC,EAAM,CACVC,QAAS,CACPC,MAAOT,EAAO,aAAaU,OAAO,MAClCC,KAAMX,EAAO,cAEfY,UAAW,CACTH,MAAOT,EAAO,eAAeU,OAAO,MACpCC,KAAMX,EAAO,gBAEfa,QAAS,CACPJ,MAAOT,EAAO,aAAaU,OAAO,MAClCC,KAAMX,EAAO,cAEfc,OAAQ,CACNL,MAAOT,EAAO,YAAYU,OAAO,MACjCC,KAAMX,EAAO,aAEfe,QAAS,CACPN,MAAOT,EAAO,aAAaU,OAAO,MAClCC,KAAMX,EAAO,cAEfgB,KAAM,CACJP,MAAOT,EAAO,UAAUU,OAAO,MAC/BC,KAAMX,EAAO,WAEfiB,KAAM,CACJR,MAAOT,EAAO,UAAUU,OAAO,MAC/BC,KAAMX,EAAO,YAIjBH,EAAU,eAAKU,OAEhB,IAEI,cAAChB,EAAY2B,SAAb,CAAsBC,MAAO,CAAEvB,UAA/B,SAA0CF,M,iOCnD7C0B,EAAe,CACnBC,SAAU,IAqBGC,EAlBK,WAAmC,IAAD,EAAjCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACpD,OAAQA,EAAO3C,MACb,IAAK,QACH,OAAO,2BACF0C,GADL,OAEEF,SAAUG,EAAOC,MAFnB,cAGGD,EAAOE,OAAOC,oBAAsBH,EAAOA,EAAOE,OAAOC,sBAH5D,cAIGH,EAAOE,OAAOE,2BAA6BJ,EAAOA,EAAOE,OAAOE,6BAJnE,IAMF,IAAK,SACH,IAAMrB,EAAG,eAAQiB,GAEjB,cADOjB,EAAI1B,KACJ,2BAAK0C,GAAZ,IAAmBF,SAAU,IAAOd,GACtC,QACE,OAAOgB,IClBPH,EAAe,CACnBS,YAAa,GACbC,UAAW,GACXC,MAAO,IAmCMC,EAhCO,WAAmC,IAAlCT,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAQA,EAAO3C,MACb,IAAK,sBACH,OAAO,2BAAK0C,GAAZ,IAAmBQ,MAAOP,EAAOS,MACnC,IAAK,gBACH,OAAO,2BAAKV,GAAZ,IAAmBM,YAAaL,EAAOC,KAAMK,UAAWN,EAAOM,YACjE,IAAK,oBACH,IAAII,EAGJX,EAAMM,YAAYM,MAAK,SAAAC,GACjBA,EAAKC,KAAOb,EAAOa,KACrBD,EAAKE,cAAgBF,EAAKE,aAC1BJ,EAAiBE,MAKrB,IAAMG,EAAgBhB,EAAMO,UAAUU,WAAU,SAAAC,GAAC,OAAIA,EAAEJ,KAAOb,EAAOa,MAQrE,OANuB,IAAnBE,EACFhB,EAAMO,UAAUY,KAAKR,GAErBX,EAAMO,UAAUa,OAAOJ,EAAe,GAGjC,eAAKhB,GACd,QACE,OAAOA,I,QCxBPH,EAAe,CACnB1C,MAAOP,IAAYM,OAAOC,MAC1BkE,cAT2B,WAC3B,IAAMR,EAAOrC,OAAO8C,aAAaC,QAAQ,iBAEzC,OAAOV,EAAOW,KAAKC,MAAMZ,GAAQjE,IAAYM,OAAOM,KAAKE,YAM1CgE,GACfC,WAAY/E,IAAYM,OAAOM,KAAKC,SACpCF,aAAcX,IAAYM,OAAOK,cAmBpBqE,EAhBO,WAAmC,IAAlC5B,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAQA,EAAO3C,MACb,IAAK,uBACH,OAAO,2BAAK0C,GAAZ,IAAmBzC,aAAc0C,EAAOL,QAC1C,IAAK,wBAEH,OADApB,OAAO8C,aAAaO,QAAQ,gBAAiB5B,EAAOL,OAC7C,2BAAKI,GAAZ,IAAmBqB,cAAepB,EAAOL,QAC3C,IAAK,qBACH,OAAO,2BAAKI,GAAZ,IAAmB2B,WAAY1B,EAAOL,QACxC,IAAK,aACH,OAAO,2BAAKI,GAAZ,IAAmB7C,MAAO8C,EAAOL,QACnC,QACE,OAAOI,IC7BPH,EAAe,CACjBiC,QAAS,GACT5B,KAAM,GACN6B,MAAO,EACPC,OAAQ,GACRC,aAAc,MAQHC,EANC,WAAmC,IAAlClC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC9C,OAAQA,EAAO3C,MACX,IAAK,eACD,OAAO,2BAAK0C,GAAZ,IAAmB8B,QAAS7B,EAAOC,SCMhCiC,EAPKC,YAAgB,CAClCC,OACA1E,SACAT,SACAgF,UCPII,EAAa,CAACC,IAAOC,OAGrBC,EAAmBjE,OAAOkE,sCAAwCC,IAGlEC,EAAQC,YAAYV,EAAa,GAAIM,EAAiBK,IAAe,WAAf,EAAmBR,K,+BCMhES,EAhBU,WACvB,OACE,sBAAKC,UAAU,0BAAf,UAEE,qBAAKA,UAAU,gBAAgBC,MAAO,GAAKC,OAAO,KAC9CC,MAAM,KAAKC,IAAKC,UAAMC,IAAI,SAC9B,sBAAKN,UAAU,UAAf,UAEE,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,4B,8CC6DvBO,IAAOC,OAhEc,SAAC,GAA+C,IAA7CR,EAA4C,EAA5CA,UAAW7E,EAAiC,EAAjCA,SAAUsF,EAAuB,EAAvBA,QAAYC,EAAW,oDAEpCtF,oBAAS,GAF2B,mBAE3DuF,EAF2D,KAElDC,EAFkD,OAG9BxF,oBAAS,GAHqB,mBAG3DyF,EAH2D,KAG/CC,EAH+C,OAItC1F,mBAAS,CAAE8C,GAAI,EAAG6C,GAAI,IAJgB,mBAI3DC,EAJ2D,KAInDC,EAJmD,KA+BlE,OAxBA1F,qBAAU,WAER,OADAqF,GAAW,GACJ,kBAAMA,GAAW,MACvB,IAGHrF,qBAAU,WACJoF,KACgB,IAAdK,EAAO9C,IAA0B,IAAd8C,EAAOD,GAC5BD,GAAc,GACdI,YAAW,kBAAMJ,GAAc,KAAQ,MAEvCA,GAAc,MAGjB,CAACE,IAGJzF,qBAAU,WACJoF,IACGE,GAAYI,EAAU,CAAE/C,GAAI,EAAG6C,GAAI,OAEzC,CAACF,IAGF,eAACN,EAAA,EAAD,yBACEP,UAAWmB,IAAW,eAAD,eAClBnB,EAAYA,IAEfS,QAAS,SAAAW,GACP,IAAMC,EAAOD,EAAEE,OAAOC,wBACtBN,EAAU,CAAE/C,EAAGkD,EAAEI,QAAUH,EAAKI,KAAMV,EAAGK,EAAEM,QAAUL,EAAKM,MACtDlB,GACFA,EAAQW,KAGRV,GAXN,cAaGvF,EACA0F,EACC,sBACEb,UAAU,eACVC,MAAO,CACLwB,KAAMT,EAAO9C,EACbyD,IAAKX,EAAOD,KAGd,U,gDCnDUa,QACW,cAA7BpG,OAAOqG,SAASC,UAEe,UAA7BtG,OAAOqG,SAASC,UAEhBtG,OAAOqG,SAASC,SAASC,MAAM,2DCoBnC,IAAMC,EAAUC,gBAAK,kBAAM,0DAE3BC,IAASC,OACP,cAAC,IAAD,CAAUvC,MAAOA,EAAjB,SACE,cAAC,WAAD,CAAUwC,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAACJ,EAAD,IACA,cAAC,IAAD,CAAgBK,aAAW,WAIjCzG,SAAS0G,eAAe,SD0EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.92333b04.chunk.js","sourcesContent":["// You can customize the template with the help of this file\r\n\r\n//Template config options\r\nconst themeConfig = {\r\n  app: {\r\n    appName: 'Bidoya',\r\n    appLogoImage: require('@src/assets/images/logo/logo.jpg').default\r\n  },\r\n  layout: {\r\n    isRTL: false,\r\n    skin: 'dark', // light, dark, bordered, semi-dark\r\n    routerTransition: 'fadeIn', // fadeIn, fadeInLeft, zoomIn, none or check this for more transition https://animate.style/\r\n    type: 'vertical', // vertical, horizontal\r\n    contentWidth: 'full', // full, boxed\r\n    menu: {\r\n      isHidden: false,\r\n      isCollapsed: false\r\n    },\r\n    navbar: {\r\n      // ? For horizontal menu, navbar type will work for navMenu type\r\n      // type: 'floating', // static , sticky , floating, hidden\r\n      type: 'sticky', // static , sticky , floating, hidden\r\n\r\n      backgroundColor: 'primary' // BS color options [primary, success, etc]\r\n    },\r\n    footer: {\r\n      type: 'static' // static, sticky, hidden\r\n    },\r\n    customizer: false,\r\n    scrollTop: true // Enable scroll to top button\r\n  }\r\n}\r\n\r\nexport default themeConfig\r\n","export default __webpack_public_path__ + \"static/media/logo.e653e0c0.jpg\";","// ** React Imports\r\nimport { useEffect, useState, createContext } from 'react'\r\n\r\n// ** Create Context\r\nconst ThemeColors = createContext()\r\n\r\nconst ThemeContext = ({ children }) => {\r\n  // ** State\r\n  const [colors, setColors] = useState({})\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (window !== 'undefined') {\r\n      //** Get variable value\r\n      const getHex = color => window.getComputedStyle(document.body).getPropertyValue(color).trim()\r\n\r\n      //** Colors obj\r\n      const obj = {\r\n        primary: {\r\n          light: getHex('--primary').concat('1a'),\r\n          main: getHex('--primary')\r\n        },\r\n        secondary: {\r\n          light: getHex('--secondary').concat('1a'),\r\n          main: getHex('--secondary')\r\n        },\r\n        success: {\r\n          light: getHex('--success').concat('1a'),\r\n          main: getHex('--success')\r\n        },\r\n        danger: {\r\n          light: getHex('--danger').concat('1a'),\r\n          main: getHex('--danger')\r\n        },\r\n        warning: {\r\n          light: getHex('--warning').concat('1a'),\r\n          main: getHex('--warning')\r\n        },\r\n        info: {\r\n          light: getHex('--info').concat('1a'),\r\n          main: getHex('--info')\r\n        },\r\n        dark: {\r\n          light: getHex('--dark').concat('1a'),\r\n          main: getHex('--dark')\r\n        }\r\n      }\r\n\r\n      setColors({ ...obj })\r\n    }\r\n  }, [])\r\n\r\n  return <ThemeColors.Provider value={{ colors }}>{children}</ThemeColors.Provider>\r\n}\r\n\r\nexport { ThemeColors, ThemeContext }\r\n","// **  Initial State\nconst initialState = {\n  userData: {}\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        userData: action.data,\n        [action.config.storageTokenKeyName]: action[action.config.storageTokenKeyName],\n        [action.config.storageRefreshTokenKeyName]: action[action.config.storageRefreshTokenKeyName]\n      }\n    case 'LOGOUT':\n      const obj = { ...action }\n      delete obj.type\n      return { ...state, userData: {}, ...obj }\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","// ** Initial State\r\nconst initialState = {\r\n  suggestions: [],\r\n  bookmarks: [],\r\n  query: ''\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HANDLE_SEARCH_QUERY':\r\n      return { ...state, query: action.val }\r\n    case 'GET_BOOKMARKS':\r\n      return { ...state, suggestions: action.data, bookmarks: action.bookmarks }\r\n    case 'UPDATE_BOOKMARKED':\r\n      let objectToUpdate\r\n\r\n      // ** find & update object\r\n      state.suggestions.find(item => {\r\n        if (item.id === action.id) {\r\n          item.isBookmarked = !item.isBookmarked\r\n          objectToUpdate = item\r\n        }\r\n      })\r\n\r\n      // ** Get index to add or remove bookmark from array\r\n      const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.id)\r\n\r\n      if (bookmarkIndex === -1) {\r\n        state.bookmarks.push(objectToUpdate)\r\n      } else {\r\n        state.bookmarks.splice(bookmarkIndex, 1)\r\n      }\r\n\r\n      return { ...state }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default navbarReducer\r\n","// ** ThemeConfig Import\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Returns Initial Menu Collapsed State\r\nconst initialMenuCollapsed = () => {\r\n  const item = window.localStorage.getItem('menuCollapsed')\r\n  //** Parse stored json or if none return initialValue\r\n  return item ? JSON.parse(item) : themeConfig.layout.menu.isCollapsed\r\n}\r\n\r\n// ** Initial State\r\nconst initialState = {\r\n  isRTL: themeConfig.layout.isRTL,\r\n  menuCollapsed: initialMenuCollapsed(),\r\n  menuHidden: themeConfig.layout.menu.isHidden,\r\n  contentWidth: themeConfig.layout.contentWidth\r\n}\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HANDLE_CONTENT_WIDTH':\r\n      return { ...state, contentWidth: action.value }\r\n    case 'HANDLE_MENU_COLLAPSED':\r\n      window.localStorage.setItem('menuCollapsed', action.value)\r\n      return { ...state, menuCollapsed: action.value }\r\n    case 'HANDLE_MENU_HIDDEN':\r\n      return { ...state, menuHidden: action.value }\r\n    case 'HANDLE_RTL':\r\n      return { ...state, isRTL: action.value }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default layoutReducer\r\n","// ** Initial State\nconst initialState = {\n    allData: [],\n    data: [],\n    total: 1,\n    params: {},\n    selectedUser: null\n  }\n  const users = (state = initialState, action) => {\n    switch (action.type) {\n        case 'GET_ALL_DATA':\n            return { ...state, allData: action.data }\n    }\n}\nexport default users\n","// ** Redux Imports\r\nimport { combineReducers } from 'redux'\r\n\r\n// ** Reducers Imports\r\nimport auth from './auth'\r\nimport navbar from './navbar'\r\nimport layout from './layout'\r\nimport users from '@src/views/user/store/reducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  navbar,\r\n  layout,\r\n  users\r\n})\r\n\r\nexport default rootReducer\r\n","// ** Redux, Thunk & Root Reducer Imports\r\nimport thunk from 'redux-thunk'\r\nimport createDebounce from 'redux-debounced'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\n\r\n// ** init middleware\r\nconst middleware = [thunk, createDebounce()]\r\n\r\n// ** Dev Tools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n// ** Create store\r\nconst store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nexport { store }\r\n","// ** Logo\nimport logo from '@src/assets/images/logo/logo.jpg'\n\nconst SpinnerComponent = () => {\n  return (\n    <div className='fallback-spinner vh-100'>\n\n      <img className='fallback-logo' style={{}}  height='50'\n          width='50' src={logo} alt='logo' />\n      <div className='loading'>\n\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default SpinnerComponent\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport { Button } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Styles\nimport './ripple-button.scss'\n\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\n  // ** States\n  const [mounted, setMounted] = useState(false)\n  const [isRippling, setIsRippling] = useState(false)\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\n\n  // ** Toggle mounted on mount & unmount\n  useEffect(() => {\n    setMounted(true)\n    return () => setMounted(false)\n  }, [])\n\n  // ** Check for coords and set ripple\n  useEffect(() => {\n    if (mounted) {\n      if (coords.x !== -1 && coords.y !== -1) {\n        setIsRippling(true)\n        setTimeout(() => setIsRippling(false), 500)\n      } else {\n        setIsRippling(false)\n      }\n    }\n  }, [coords])\n\n  // ** Reset Coords on ripple end\n  useEffect(() => {\n    if (mounted) {\n      if (!isRippling) setCoords({ x: -1, y: -1 })\n    }\n  }, [isRippling])\n\n  return (\n    <Button\n      className={classnames('waves-effect', {\n        [className]: className\n      })}\n      onClick={e => {\n        const rect = e.target.getBoundingClientRect()\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\n        if (onClick) {\n          onClick(e)\n        }\n      }}\n      {...rest}\n    >\n      {children}\n      {isRippling ? (\n        <span\n          className='waves-ripple'\n          style={{\n            left: coords.x,\n            top: coords.y\n          }}\n        ></span>\n      ) : null}\n    </Button>\n  )\n}\n\n// ** PropTypes\nRippleButton.propTypes = {\n  ...Button.propTypes\n}\n\nButton.Ripple = RippleButton\n","/*eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker === null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","// ** React Imports\nimport { Suspense, lazy } from 'react'\nimport ReactDOM from 'react-dom'\n\n// ** Redux Imports\nimport { Provider } from 'react-redux'\nimport { store } from './redux/storeConfig/store'\n\n// ** Toast & ThemeColors Context\nimport { ToastContainer } from 'react-toastify'\nimport { ThemeContext } from './utility/context/ThemeColors'\n\n// ** Spinner (Splash Screen)\nimport Spinner from './@core/components/spinner/Fallback-spinner'\n\n// ** Ripple Button\nimport './@core/components/ripple-button'\n\n// ** PrismJS\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport 'prismjs/components/prism-jsx.min'\n\n// ** React Perfect Scrollbar\nimport 'react-perfect-scrollbar/dist/css/styles.css'\n\n// ** React Toastify\nimport '@styles/react/libs/toastify/toastify.scss'\n\n// ** Core styles\nimport './@core/assets/fonts/feather/iconfont.css'\nimport './@core/scss/core.scss'\nimport './assets/scss/style.scss'\n\n// ** Service Worker\nimport * as serviceWorker from './serviceWorker'\n\n// ** Lazy load app\nconst LazyApp = lazy(() => import('./App'))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={<Spinner />}>\n      <ThemeContext>\n        <LazyApp />\n        <ToastContainer newestOnTop />\n      </ThemeContext>\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}