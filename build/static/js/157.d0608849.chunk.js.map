{"version":3,"sources":["views/master/vas/trascAdd.js","views/master/vas/data.js","assets/images/logo/komal.jpg","assets/images/logo/himanshu.jpg","assets/images/logo/pravin.jpg","assets/images/logo/reethika.jpg","@core/components/repeater/index.js"],"names":["UserAccountTab","prop","initialvalues","id","type","Name","onBihalf","allocate","behalf","amount","useState","values","setValues","Date","renderClient","row","color","Math","floor","random","avatar","length","className","img","width","height","content","D_Name","initials","status","part","data2","username","optionPartners","value","label","data","sm","onSubmit","e","preventDefault","md","for","classNamePrefix","isClearable","options","theme","selectThemeColors","onChange","name","event","target","addonType","size","tag","Flatpickr","date","dateFormat","Ripple","onClick","console","log","alert","submitHandle","outline","Cost","rate","quantity","komal","unit","pravin","Repeater","props","count","children","component","rest","Tag","items","i","push","defaultProps"],"mappings":"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","file":"static/js/157.d0608849.chunk.js","sourcesContent":["//Amout, date, Allocate to, On behalf\n// ** React Imports\nimport { ReactSortable } from 'react-sortablejs'\nimport { useParams } from 'react-router-dom'\nimport Repeater from '@components/repeater'\nimport Select from 'react-select'\nimport { selectThemeColors, isObjEmpty } from '@utils'\nimport { useState, useEffect } from 'react'\nimport Flatpickr from 'react-flatpickr'\nimport { MoreVertical, User, Users, Edit, Calendar, FileText, Archive, Trash,  MapPin, DollarSign, X, Plus  } from 'react-feather'\nimport { data } from './data'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n// ** Third Party Components\n\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, InputGroup, InputGroupAddon, InputGroupText,  Card, CardHeader,\n  CardBody, Badge, ListGroupItem,\n  CardTitle, CustomInput } from 'reactstrap'\n\nconst UserAccountTab = (prop) => {\n  // const { id } = useParams()\n  const initialvalues = {\n    id:0,\n    type: '',\n    Name: \"\",\n    onBihalf: \"\",\n    allocate:\"\",\n    behalf: \"\",\n    amount: 0\n  }\n  const [selectedOption, setselectedOption] = useState()\n  const [values, setValues] = useState(initialvalues)\n  const [allDay, setAllDay] = useState(false)\n  const [endPicker, setEndPicker] = useState(new Date())  \n\n  const renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar.length) {\n    return  <Avatar className='mr-1' img={row.avatar} width='32' height='32'  /> \n  } else {\n    return  <Avatar color={color || 'primary'} className='mr-1' content={row.D_Name || 'John Doe'} initials status=\"online\" /> \n  }\n}\n\n  const part = (data2) => {\n  return (<div className='d-flex justify-content-left align-items-center'>\n          {renderClient(data2)}\n        <div className=''>\n                                          \n          <div className='user-info text-truncate d-flex flex-column'>\n            <span className='font-weight-bold'>{data2.D_Name}</span>\n              <small className='text-truncate text-muted mb-0'>@{data2.username}</small>\n          </div>\n                                         \n        </div>\n    </div>)\n}\n\n  const optionPartners = [\n    {value: \"user1212\", label: part(data[0])},\n    {value: \"user1231\", label: part(data[1])},\n    {value: \"user1234\", label: part(data[2])},\n    {value: \"user2345\", label: part(data[3])},\n    {value: \"user3456\", label: part(data[4])},\n    {value: \"user2345\", label: part(data[5])},\n    {value: \"user3456\", label: part(data[6])}\n  ]\n\n  //for other input\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n\n  const submitHandle = (event) => {\n    const { name, value } = event.target\n    console.log({\n      ...values,\n      [name] : values\n    })\n    setValues({\n      ...values,\n      [name] : values\n    })\n    //prop.editAction(values)\n    \n    setValues(initialvalues)\n    alert(\"Data successfully inserted\")\n  }\n\n  return (\n    <Card>\n    <Row>\n      \n        <Col sm='12' className=\"pl-5 pt-2\">\n          <h2 className=\"mb-1\">VAS Transaction Add</h2>\n        </Col>\n      \n      <CardBody className='pl-3 pt-2'>\n      <Col sm='12'>\n        <Form onSubmit={e => e.preventDefault()}>\n          <Row>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='allocate'>Allocate To</Label>\n                <Select\n                  id='allocate'\n                  className='react-select'\n                  classNamePrefix='select'\n                  isClearable={false}\n                  options={optionPartners}\n                  theme={selectThemeColors}\n                  value={values.Name[0]}\n                  onChange={data => {\n                                     setValues(\n                                              {\n                                                 ...values,\n                                                 Name : data\n                                              } \n                                      )\n                                    }\n                            }\n                />\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='onBihalf'>On Behalf</Label>\n                <Select\n                  id='onBihalf'\n                  className='react-select'\n                  classNamePrefix='select'\n                  isClearable={false}\n                  options={optionPartners}\n                  theme={selectThemeColors}\n                  value={values.behalf[0]}\n                  onChange={data => {\n                                     setValues(\n                                              {\n                                                 ...values,\n                                                 behalf : data\n                                              } \n                                      )\n                                    }\n                            }\n                />\n              </FormGroup>\n            </Col>\n            \n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='amount'>Amount</Label>\n                <InputGroup>\n                  \n                  <Input name=\"amount\" type=\"number\" onChange={handleInputeChange} id='amount' value={values.amount} />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                    <Label for='date'>Date</Label>\n                   <InputGroup>\n                    <InputGroupAddon addonType='prepend'>\n                      <InputGroupText>\n                        <Calendar size={15} />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Flatpickr\n                      id='date'\n                      tag={Flatpickr}\n                      name='date '\n                      className='form-control'\n                      onChange={(date) => setValues(\n                                                {\n                                                     ...values,\n                                                    date  : date[0]\n                                                }\n                                           )}\n                      value={values.date }\n                      options={{\n                        dateFormat: 'd-m-Y'\n                      }}\n                    />\n                  </InputGroup>\n              </FormGroup>\n            </Col>\n\n            <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n              <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' onClick={ e =>  {\n                                                          submitHandle(e)\n                                                        }\n                                                      } color='primary'>\n                Save Changes\n              </Button.Ripple>\n              <Button.Ripple color='secondary' onClick={ () => setValues(initialvalues) } outline>\n                Reset\n              </Button.Ripple>\n            </Col> \n          </Row>\n        </Form>\n      </Col>\n      </CardBody> \n    </Row>\n    </Card>\n  )\n}\nexport default UserAccountTab\n","import komal  from '@src/assets/images/logo/komal.jpg'\nimport pravin  from '@src/assets/images/logo/pravin.jpg'\nimport himanshu  from '@src/assets/images/logo/himanshu.jpg'\nimport reethika  from '@src/assets/images/logo/reethika.jpg'\n\n//expot data\nexport const data = [\n      {\n        behalf:\"\",\n        Name: \"instagram manager\",\n        Cost: 800,\n        id: 1,\n        rate : 250,\n        quantity : \"10hr\",\n        D_Name : \"Komal Kamble\",\n        username: \"pravin\",\n        avatar: komal,\n        unit : \"Hours\"\n      },\n      {\n        behalf:\"\",\n        Name: \"editor\",\n        Cost: 400,\n        id: 2,\n        rate : 700,\n        quantity : \"20hr\",\n        D_Name : \"Pravin Poshmani\",\n        username: \"komal\",\n        avatar: pravin,\n        unit : \"Minutes\"\n      },\n      {\n        behalf:\"\",\n        Name: \"Keyword finder\",\n        Cost: 200,\n        id: 3,\n        rate : 700,\n        quantity : \"30hr\",\n        D_Name : \"Pravin Poshmani\",\n        username: \"pravin\",\n        avatar: \"\",\n        unit : \"Minutes\"\n      },\n      {\n        behalf:\"\",\n        Name: \"Web devlopment\",\n        Cost: 300,\n        id: 4,\n        rate : 650,\n        quantity : \"40hr\",\n        D_Name : \"Pravin Poshmani\",\n        username: \"pravin\",\n        avatar: \"\",\n        unit : \"Minutes\"\n      },\n      {\n        behalf:\"\",\n        Name: \"instagram manager\",\n        Cost: 750,\n        id: 5,\n        rate : 700,\n        quantity : \"50hr\",\n        D_Name : \"Pravin Poshmani\",\n        username: \"pravin\",\n        avatar: \"\",\n        unit : \"Hours\"\n      },\n      {\n        behalf:\"\",\n        Name: \"editor\",\n        Cost: 400,\n        id: 6,\n        rate : 340,\n        quantity : \"60hr\",\n        D_Name : \"Pravin Poshmani\",\n        username: \"pravin\",\n        avatar: \"\",\n        unit : \"Hours\"\n      },\n      {\n        behalf:\"\",\n        Name: \"Keyword finder\",\n        Cost: 200,\n        id: 7,\n        rate : 700,\n        quantity : \"70hr\",\n        D_Name : \"Pravin Poshmani\",\n        username: \"pravin\",\n        avatar: \"\",\n        unit : \"Hours\"\n      }\n      // {\n      //   Name: \"Web devlopment\",\n      //   Cost: 300,\n      //   id: 8\n      // },\n      // {\n      //   Name: \"instagram manager\",\n      //   Cost: 600,\n      //   id: 9\n      // },\n      // {\n      //   Name: \"editor\",\n      //   Cost: 400,\n      //   id: 10\n      // },\n      // {\n      //   Name: \"Keyword finder\",\n      //   Cost: 200,\n      //   id: 11\n      // },\n      // {\n      //   Name: \"Web devlopment\",\n      //   Cost: 300,\n      //   id: 12\n      // }\n]\n","export default __webpack_public_path__ + \"static/media/komal.71eab2e7.jpg\";","export default __webpack_public_path__ + \"static/media/himanshu.db95087a.jpg\";","export default __webpack_public_path__ + \"static/media/pravin.5a89c6c3.jpg\";","export default __webpack_public_path__ + \"static/media/reethika.147b588d.jpg\";","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}