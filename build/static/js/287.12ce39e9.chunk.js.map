{"version":3,"sources":["views/master/kyc/sellerKycList.js"],"names":["SellerKycList","useState","currentPage","setCurrentPage","searchValue","filteredData","columns","name","selector","sortable","minWidth","allowOverflow","cell","row","className","tag","size","onClick","e","confirm","console","log","to","Previous","Next","noHeader","pagination","selectableRowsNoSelectAll","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","data1","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","data"],"mappings":"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","file":"static/js/287.12ce39e9.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// ** Table Columns\nimport { data1 } from './data'\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { FormattedMessage } from 'react-intl'\nimport DataTable from 'react-data-table-component'\nimport { MoreVertical, Edit, FileText, Archive, Share, Printer, File, Grid, Copy, Trash, ChevronDown, Plus} from 'react-feather'\nimport { Card, CardHeader, CardTitle, UncontrolledDropdown, UncontrolledButtonDropdown, DropdownItem, DropdownToggle, DropdownMenu, Button } from 'reactstrap'\n//import InputBasic from './AddBadges'\n// import HorizontalForm from './AddCurrency'\n// import EditForm from './EditCurrency'\n\nconst SellerKycList = () => {\n\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [addClicked, setAddClicked] = useState(0)\n  const [editClicked, setEditClicked] = useState(0)\n  const [editData, setEditData] = useState({})\n  \n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  const handleEditClick = (item) => {\n      if (!addClicked) { \n        setEditClicked(!editClicked)\n        setEditData(item)\n      }\n    //console.log(item)\n  }\n\n  const handleAddClick = () => {\n      if (!editClicked) {\n        setAddClicked(!addClicked)\n      }\n  }\n\n  const handleCancelOfEdit = () => {\n    console.log(\"in Cancel\")\n    setEditClicked(!editClicked)\n}\nconst handleCancelOfAdd = () => {\n    console.log(\"in Cancel\")\n    setAddClicked(!addClicked)\n}\nconst handleSubmitOfAdd = (data) => {\n    console.log(\"in submit\", data)\n    setAddClicked(!addClicked)\n}\n\nconst handleSubmitOfEdit = (data) => {\n    console.log(\"in submit of edit\", data)\n    setEditClicked(!editClicked)\n}\n\nconst handleDelete = (data) => {\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n}\n\nconst columns = [\n    {\n      name: 'Id',\n      selector: 'id',\n      sortable: true,\n      minWidth: '80px'\n    },\n    {\n      name: 'User Id',\n      selector: 'userId',\n      sortable: true,\n      minWidth: '80px'\n    },\n    {\n        name: 'Identity Proof',\n        selector: 'identityProof',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'Address Proof',\n        selector: 'addressProof',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'MOA',\n        selector: 'moa',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'AOA',\n        selector: 'aoa',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'CIN',\n        selector: 'cin',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'CIN Cert',\n        selector: 'cinCert',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'TAN',\n        selector: 'tan',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'TAN Cert',\n        selector: 'tanCert',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'GST',\n        selector: 'gst',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'GST Cert',\n        selector: 'gstCert',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'Approved By',\n        selector: 'approvedBy',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n        name: 'Approved Time',\n        selector: 'approvedTime',\n        sortable: true,\n        minWidth: '80px'\n    },\n    {\n      name: 'Actions',\n      allowOverflow: true,\n      cell: row => {\n        return (\n          <div className='d-flex'>\n            <UncontrolledDropdown>\n              <DropdownToggle className='pr-1' tag='span'>\n                <Trash size={15} onClick={e => { handleDelete(row) }} />\n              </DropdownToggle>\n            </UncontrolledDropdown>\n            <Link  to={`/report/add-GstReport`}><Edit  \n                  size={15} \n                  onClick={ () => { \n                                    //setCurrentId(row.id)\n                                    //setModal(true)\n                                     } }>\n                                       <Link to='/report/add-GstReport'/>\n                                     </Edit></Link>\n          </div>\n        )\n      }\n    }\n  ]\n  \n  // ** Function to handle filter\n  // const handleFilter = e => {\n  //   const value = e.target.value\n  //   let updatedData = []\n  //   setSearchValue(value)\n\n  //   const status = {\n  //     1: { title: 'Current', color: 'light-primary' },\n  //     2: { title: 'Professional', color: 'light-success' },\n  //     3: { title: 'Rejected', color: 'light-danger' },\n  //     4: { title: 'Resigned', color: 'light-warning' },\n  //     5: { title: 'Applied', color: 'light-info' }\n  //   }\n\n  //   if (value.length) {\n  //     updatedData = data.filter(item => {\n  //       const startsWith =\n  //         item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.GstReport.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n  //       const includes =\n  //         item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.post.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.GstReport.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.age.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n  //       if (startsWith) {\n  //         return startsWith\n  //       } else if (!startsWith && includes) {\n  //         return includes\n  //       } else return null\n  //     })\n  //     setFilteredData(updatedData)\n  //     setSearchValue(value)\n  //   }\n  // }\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Prev' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Next' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data1.length / 7 || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\n    />\n  )\n\n   \n  // ** Converts table to CSV\n  \n\n  return (\n      <Fragment>\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>Seller Kyc</CardTitle>\n      </CardHeader>\n      {/* {addClicked ? <HorizontalForm handleCancel={handleCancelOfAdd} handleSubmit={handleSubmitOfAdd} /> : null}\n      {editClicked ? <EditForm data ={editData} handleCancel={handleCancelOfEdit} handleSubmit={handleSubmitOfEdit} /> : null} */}\n      {/* <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='mr-1' for='search-input-1'>\n            <FormattedMessage id='Search' />\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row> */}\n      <DataTable\n        noHeader\n        pagination\n        selectableRowsNoSelectAll\n        columns={columns}\n        className='react-dataTable'\n        paginationPerPage={7}\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={data1}\n      />\n      {/* <CardFooter>\n        <CardText className='mb-0'>\n          <span className='font-weight-bold'>Note:</span>{' '}\n          <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter> */}\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default SellerKycList\n"],"sourceRoot":""}