{"version":3,"sources":["views/master/city/data.js","views/master/city/AddCity.js","views/master/city/EditCity.js","views/master/city/CityList.js"],"names":["cityData","name","state","country","HorizontalForm","props","useForm","defaultValues","gender","dob","register","errors","control","setValue","trigger","useState","values","setValues","handleInputeChange","event","target","value","Card","CardBody","Form","Row","Col","className","md","size","offset","FormGroup","row","Label","sm","for","Input","type","id","placeholder","onChange","defaultValue","Button","Ripple","color","onClick","e","preventDefault","console","log","handleSubmit","outline","handleCancel","EditForm","data","CityList","currentPage","setCurrentPage","searchValue","filteredData","addClicked","setAddClicked","editClicked","setEditClicked","editData","setEditData","cityColumns","selector","sortable","minWidth","allowOverflow","cell","UncontrolledDropdown","DropdownToggle","tag","confirm","item","Previous","Next","CardHeader","CardTitle","noHeader","pagination","selectableRowsNoSelectAll","columns","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName"],"mappings":"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","file":"static/js/265.b1b75806.chunk.js","sourcesContent":["export const cityData = [\n    {\n      name: \"Mumbai\",\n      state: \"Maharashtra\",\n      country: \"India\"\n    },\n    {\n        name: \"Hyderabad\",\n        state: \"Telangana\",\n        country: \"India\"\n      },\n      {\n        name: \"Bangalore\",\n        state: \"Karnataka\",\n        country: \"India\"\n      },\n      {\n        name: \"Chennai\",\n        state: \"TN\",\n        country: \"India\"\n      },\n      {\n        name: \"Melbourne\",\n        state: \"TN\",\n        country: \"Australia\"\n      }\n]\n  \n","import { useState } from 'react'\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Row,\n    Col,\n    Input,\n    Form,\n    Button,\n    CustomInput,\n    Label\n  } from 'reactstrap'\n  import { useForm, Controller } from 'react-hook-form'\n  \n  const HorizontalForm = (props) => {\n    const { register, errors, control, setValue, trigger } = useForm({\n      defaultValues: { gender: 'gender-female', dob: null }\n    })\n    const [values, setValues] = useState('')\n    const handleInputeChange = (event) => {\n        const {name, value} = event.target\n        setValues(\n        {\n          ...values,\n          [name] : value\n        }\n        )\n      }\n    \n      const handleSubmit = () => {\n        console.log(values)\n        props.handleSubmit(values)\n        //prop.editAction(values)\n        //setValues(initialvalues)\n      }\n    return (\n      <Card>  \n        <CardBody>\n          <Form>\n            <Row >\n            <Col className='d-flex' md={{ size: 9, offset: 1 }}>\n            <FormGroup row  >\n              <Label sm='4' size='lg' for='name'>\n                City\n              </Label>\n              <Col sm='8'>\n                <Input type='text' name='name' id='name' placeholder='City Name' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup>\n  \n            <FormGroup className='ml-3' row>\n              <Label sm='4' size='lg' for='Country'>\n                Country\n              </Label>\n              <Col sm='8'>\n                <Input type='text' name='Country' id='Country' placeholder='Country' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup>\n            {/* <FormGroup className='ml-3' row>\n              <Label sm='4' size='lg' for='country'>\n                Country\n              </Label>\n              <Col sm='8'>\n                <Input type='email' name='Country' id='Country' placeholder='Country' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup> */}\n              <FormGroup className='ml-3' row>\n                <Label sm='5' size='lg' for='country'>State</Label>\n                <Col sm='7'>\n                <Input  type='select' name='country' id='country' defaultValue=\"India\" onChange={handleInputeChange}>\n                <option value='select'>Select</option>\n                  <option value='maharshtra'>Maharashtra</option>\n                  <option value='AP'>AP</option>\n                  <option value='UP'>UP</option>\n                  <option value='telangana'>Telangana</option>\n                  <option value='karnataka'>karnataka</option>\n                </Input>\n                </Col>\n              </FormGroup>\n            </Col>\n            </Row>\n            <FormGroup className='mb-0 mx-auto' row>\n              <Col className='d-flex' md={{ size: 8, offset: 5 }}>\n                <Button.Ripple className='mr-1' color='primary' type='submit' onClick={e => { \n                                                e.preventDefault() \n                                                handleSubmit()\n                                                } } >\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple outline color='secondary' type='reset' onClick={props.handleCancel} >\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n  export default HorizontalForm\n  ","import { useState } from 'react'\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    FormGroup,\n    Row,\n    Col,\n    Input,\n    Form,\n    Button,\n    CustomInput,\n    Label\n  } from 'reactstrap'\n  \n  const EditForm = (props) => {\n      console.log(props.data)\n      console.log(props.data)\n      const [values, setValues] = useState('')\n    const handleInputeChange = (event) => {\n        const {name, value} = event.target\n        setValues(\n        {\n          ...values,\n          [name] : value\n        }\n        )\n      }\n    \n      const handleSubmit = () => {\n        console.log(values)\n        props.handleSubmit(values)\n        //prop.editAction(values)\n        setValues('')\n      }\n    return (\n      <Card>  \n        <CardBody>\n          <Form>\n            <Row >\n            <Col className='d-flex' md={{ size: 11, offset: 1 }}>\n            <FormGroup row  md={{ size: 9, offset: 3 }}>\n              <Label sm='4' size='lg' for='name'>\n                City\n              </Label>\n              <Col sm='8'>\n                <Input type='text' name='name' id='name' defaultValue={props.data.name} placeholder='City Name' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup>\n  \n            <FormGroup className='ml-3' row>\n              <Label sm='4' size='lg' for='Country'>\n                Country\n              </Label>\n              <Col sm='8'>\n                <Input type='text' name='Country' id='Country' defaultValue={props.data.country} placeholder='Country' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup>\n            {/* <FormGroup className='ml-3' row>\n              <Label sm='4' size='lg' for='country'>\n                Country\n              </Label>\n              <Col sm='8'>\n                <Input type='email' name='Country' id='Country' defaultValue={props.data.country} placeholder='Country' onChange={handleInputeChange}/>\n              </Col>\n            </FormGroup> */}\n            <FormGroup className='ml-3' row>\n                <Label sm='5' size='lg' for='country'>State</Label>\n                <Col sm='7'>\n                <Input  type='select' name='country' id='country' defaultValue={props.data.state} onChange={handleInputeChange}>\n                <option value='select'>Select</option>\n                  <option value='maharshtra'>Maharashtra</option>\n                  <option value='AP'>AP</option>\n                  <option value='UP'>UP</option>\n                  <option value='telangana'>Telangana</option>\n                  <option value='karnataka'>karnataka</option>\n                </Input>\n                </Col>\n              </FormGroup>\n            </Col>\n            </Row>\n            <FormGroup className='mb-0 mx-auto' row>\n              <Col className='d-flex' md={{ size: 8, offset: 5 }}>\n                <Button.Ripple className='mr-1' color='primary' type='submit'  onClick={e => { \n                                                e.preventDefault() \n                                                handleSubmit()\n                                                } } >\n                  Submit\n                </Button.Ripple>\n                <Button.Ripple outline color='secondary' type='reset' onClick={props.handleCancel}>\n                  Cancel\n                </Button.Ripple>\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    )\n  }\n  export default EditForm\n  ","\n// ** React Imports\nimport { Fragment, useState } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Table Columns\nimport { cityData } from './data'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { FormattedMessage } from 'react-intl'\nimport DataTable from 'react-data-table-component'\nimport { MoreVertical, Edit, FileText, Archive, Trash, ChevronDown, Plus} from 'react-feather'\nimport { Card, CardHeader, CardTitle, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap'\n//import InputBasic from './AddCity'\nimport HorizontalForm from './AddCity'\nimport EditForm from './EditCity'\n\nconst CityList = () => {\n\n    //console.log(cityColumns)\n    console.log(cityData)\n  // ** State\n//   const data = [\n//     {\n//       name: \"US Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Canadian Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Euro\",\n//       symbol: \"€\"\n//     }\n// ]\n// console.log(data)\n\n//   const cityColumns = [\n//     {\n//       name: 'city Name',\n//       selector: 'name',\n//       sortable: true,\n//       minWidth: '200px'\n//     },\n//     {\n//       name: 'Symbol',\n//       selector: 'symbol',\n//       sortable: false,\n//       minWidth: '250px'\n//     },\n//     {\n//       name: 'Actions',\n//       allowOverflow: true,\n//       cell: row => {\n//         return (\n//           <div className='d-flex'>\n//             <UncontrolledDropdown>\n//               <DropdownToggle className='pr-1' tag='span'>\n//                 <MoreVertical size={15} />\n//               </DropdownToggle>\n//               <DropdownMenu right>\n//                 <DropdownItem>\n//                   <FileText size={15} />\n//                   <span className='align-middle ml-50'>Details</span>\n//                 </DropdownItem>\n//                 <DropdownItem>\n//                   <Archive size={15} />\n//                   <span className='align-middle ml-50'>Archive</span>\n//                 </DropdownItem>\n//                 <DropdownItem>\n//                   <Trash size={15} />\n//                   <span className='align-middle ml-50'>Delete</span>\n//                 </DropdownItem>\n//               </DropdownMenu>\n//             </UncontrolledDropdown>\n//             <Edit size={15} />\n//           </div>\n//         )\n//       }\n//     }\n//   ]\n\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [addClicked, setAddClicked] = useState(0)\n  const [editClicked, setEditClicked] = useState(0)\n  const [editData, setEditData] = useState({})\n\n  // ** Function to handle pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  const handleAddClick = () => {\n    if (!editClicked) {\n      setAddClicked(!addClicked)\n    }\n  }\n\n  const handleEditClick = (item) => {\n    if (!addClicked) { \n      setEditClicked(!editClicked)\n      setEditData(item)\n    }\n  //console.log(item)\n}\nconst handleCancelOfEdit = () => {\n    console.log(\"in Cancel\")\n    setEditClicked(!editClicked)\n}\nconst handleCancelOfAdd = () => {\n    console.log(\"in Cancel\")\n    setAddClicked(!addClicked)\n}\nconst handleSubmitOfAdd = (data) => {\n  console.log(\"in submit\", data)\n  setAddClicked(!addClicked)\n}\n\nconst handleSubmitOfEdit = (data) => {\n  console.log(\"in submit of edit\", data)\n  setEditClicked(!editClicked)\n}\n\nconst handleDelete = (data) => {\n  \n  const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n}\n  // ** Function to handle filter\n  // const handleFilter = e => {\n  //   const value = e.target.value\n  //   let updatedData = []\n  //   setSearchValue(value)\n\n  //   const status = {\n  //     1: { title: 'Current', color: 'light-primary' },\n  //     2: { title: 'Professional', color: 'light-success' },\n  //     3: { title: 'Rejected', color: 'light-danger' },\n  //     4: { title: 'Resigned', color: 'light-warning' },\n  //     5: { title: 'Applied', color: 'light-info' }\n  //   }\n\n  //   if (value.length) {\n  //     updatedData = data.filter(item => {\n  //       const startsWith =\n  //         item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.email.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n  //       const includes =\n  //         item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.post.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.email.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.age.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n  //       if (startsWith) {\n  //         return startsWith\n  //       } else if (!startsWith && includes) {\n  //         return includes\n  //       } else return null\n  //     })\n  //     setFilteredData(updatedData)\n  //     setSearchValue(value)\n  //   }\n  // }\n\n  const cityColumns = [\n    {\n        name: 'City Name',\n        selector: 'name',\n        sortable: false,\n        minWidth: '250px'\n      },\n      {\n        name: 'State',\n        selector: 'state',\n        sortable: true,\n        minWidth: '250px'\n      },\n      {\n        name: 'Country',\n        selector: 'country',\n        sortable: true,\n        minWidth: '250px'\n      },\n      {\n        name: 'Actions',\n        allowOverflow: true,\n        cell: row => {\n          return (\n            <div className='d-flex'>\n              <UncontrolledDropdown>\n                <DropdownToggle className='pr-1' tag='span'>\n                  <Trash size={15} onClick={e => { handleDelete(row) }} />\n                </DropdownToggle>\n              </UncontrolledDropdown>\n              <Edit size={15} onClick={ e => { \n                                                e.preventDefault() \n                                                handleEditClick(row) \n                                                } } />\n            </div>\n          )\n        }\n      }\n    ]\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Prev' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Next' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : cityData.length / 7 || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\n    />\n  )\n\n  return (\n      <Fragment>\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>City List</CardTitle>\n        <Button className='ml-2' color='primary' onClick={handleAddClick} >\n              <Plus size={15} />\n              <span className='align-middle ml-50'>Add city</span>\n            </Button>\n      </CardHeader>\n      {addClicked ? <HorizontalForm handleCancel={handleCancelOfAdd} handleSubmit={handleSubmitOfAdd}/> : null}\n      {editClicked ? <EditForm data = {editData} handleCancel={handleCancelOfEdit} handleSubmit={handleSubmitOfEdit}/> : null}\n      {/* <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='mr-1' for='search-input-1'>\n            <FormattedMessage id='Search' />\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row> */}\n      <DataTable\n        noHeader\n        pagination\n        selectableRowsNoSelectAll\n        columns={cityColumns}\n        className='react-dataTable'\n        paginationPerPage={7}\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={cityData}\n      />\n      {/* <CardFooter>\n        <CardText className='mb-0'>\n          <span className='font-weight-bold'>Note:</span>{' '}\n          <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter> */}\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default CityList\n"],"sourceRoot":""}