{"version":3,"sources":["views/master/subCat/Attributes/data.js","views/master/subCat/Attributes/index.js"],"names":["data","id","Cat","subCat","value","label","subAttributes","key","title","description","chosen","Math","random","DataTableWithButtons","useState","modal","setModal","currentPage","setCurrentPage","searchValue","filteredData","columns","name","selector","minWidth","cell","row","className","map","val","index","href","UncontrolledTooltip","placement","target","sortable","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","size","onClick","e","preventDefault","confirm","console","log","to","Card","CardHeader","CardTitle","Button","color","noHeader","pagination","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName"],"mappings":"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","file":"static/js/282.48c8c433.chunk.js","sourcesContent":["\nexport const data = [\n      {\n        id:1,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Camera\", label: \"Camera\"}],\n        subAttributes: [ \n                         {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n      },\n      {\n        id:2,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Display\", label: \"Display\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n      },\n      {\n        id:3,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:4,\n        Cat:\"Men's Clothers\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:5,\n        Cat:\"Men's Clothers\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:6,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:7,\n        Cat:\"Textile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:8,\n        Cat:\"Textile\",\n        subCat:[{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      }\n\n]","// ** Custom Components\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data } from './data'\nimport Select from 'react-select'\n\n// ** Add New Modal Component\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardText,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown,\n  UncontrolledTooltip  \n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar.length) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32'  />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={row.Name || 'John Doe'} initials status=\"online\" />\n  }\n}\n\nconst optionSubAttribute = [\n    {value: \"\", label: \"Filter Status\"},\n    {value: \"created\", label: \"created\"},\n    {value: \"live\", label: \"live\"},\n    {value: \"extended\", label: \"extended\"},\n    {value: \"closed\", label: \"closed\"},\n    {value: \"rejected\", label: \"rejected\"},\n    {value: \"auto closed\", label: \"auto closed\"}\n  ]\n\nconst DataTableWithButtons = () => {\n  const statusObj = {\n        pending: 'light-secondary',\n        approved: 'light-success',\n        approval: 'light-warning'\n  }\n  // ** States\n  const [modal, setModal] = useState(false)\n   const [responseModel, setResponseModel] = useState(false)\n    const [reviewId, setreviewId] = useState(0)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n  const [Filter, setFilter] = useState('')\n  const [tooltipOpen, setTooltipOpen] = useState(false)\n\n   //deleteCountry\n  const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) { \n        console.log(\"Deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Attributes',\n          selector: 'subAttributes',\n          minWidth: '150px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span id=\"Attributess\" className='d-block font-weight-bold text-truncate d-flex '>\n                {row.subAttributes.map((val, index) => {\n                  if (index < 1) {\n                    return (\n                      <div className=\"mr-1\">{val.title} <a className=\"m-1 \" href=\"#\">view</a></div>\n                      )\n                  }\n                })\n                }\n                </span>\n                <UncontrolledTooltip className='d-block font-weight-bold text-truncate d-flex ' placement='top' target='Attributess'>\n                 \n                  {row.subAttributes.map((val, index) => {\n                   \n                      return (\n                        <><div className=\"\">{val.title}</div><br/></>\n                        )\n                   \n                  })\n                  }\n                </UncontrolledTooltip>\n                \n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Sub Category',\n          selector: 'subCat',\n          sortable: true,\n          minWidth: '130px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>{row.subCat[0].value}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pr-1' tag='span'>\n                    <Trash size={15} onClick={e => {\n                                                                                    e.preventDefault()\n                                                                                    deleteCountry(row.id)\n                                                                                  } }/>\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n                <Link to={`/add-attribute`}>\n                  <Edit size={15} />\n                </Link>  \n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => {\n    setModal(!modal)\n  }\n  \n  const handleResponse = () => {\n    setResponseModel(!responseModel)\n  }\n  // handle drop down filter\n  const handleFilterByDropDown = (value) => {\n    let updatedData = []\n    setFilter(value)\n    console.log(value.value)\n    let search = \"l\"\n    search = value.value\n    setSearchValue(search)\n      if (search.length) {\n          updatedData = data.filter(item => {\n            const startsWith =\n              item.BidStatus[0].value.toLowerCase().startsWith(search.toLowerCase()) \n              \n            const includes =\n              item.BidStatus[0].value.toLowerCase().includes(search.toLowerCase())\n    \n            if (startsWith) {\n              return startsWith\n            } else if (!startsWith && includes) {\n              return includes\n            } else return null\n           })\n        \n      setFilteredData(updatedData)\n      // setSearchValue(search)\n      setFilter(value)\n    }\n  }\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.subCat.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.Cat.toLowerCase().startsWith(value.toLowerCase()) \n          \n        const includes =\n          item.subCat.toLowerCase().includes(value.toLowerCase()) ||\n          item.Cat.toLowerCase().includes(value.toLowerCase()) \n          \n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Attributes</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            <Link to={`/add-attribute`}>\n              <Button className='ml-2' color='primary' onClick={handleModal}>\n                                          <Plus size={15} />\n                                          <span className='align-middle ml-50'>Add Attributes</span>\n              </Button>\n            </Link>\n          </div>\n        </CardHeader>\n\n        <DataTable\n          noHeader\n          pagination\n         \n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          \n        />\n        \n      </Card>\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons"],"sourceRoot":""}