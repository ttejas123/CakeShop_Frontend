{"version":3,"sources":["views/master/membership/data.js","views/master/membership/membershipList.js"],"names":["data1","name","membershipFor","benefit","membershipType","cost","active","duration","MembershipList","console","log","useState","currentPage","setCurrentPage","searchValue","filteredData","addClicked","setAddClicked","editClicked","useEffect","Prism","highlightAll","MembershipColumns","selector","sortable","minWidth","cell","row","className","to","id","style","maxWidth","UncontrolledTooltip","placement","target","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","size","onClick","e","confirm","Previous","Next","Card","CardHeader","CardTitle","Button","color","noHeader","pagination","selectableRowsNoSelectAll","columns","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","data"],"mappings":"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","file":"static/js/278.59468243.chunk.js","sourcesContent":["// ** Custom Components\n\nexport const data1 = [\n    {\n        name: \"Platinum\",\n        membershipFor: \"Himanshu Chanda\",\n        benefit : \"No Commission on transactions,Get Third party VAS, reveal name\",\n        membershipType : \"Individual\",\n        cost : 12124,\n        active : \"Yes\",\n        duration : \"12 Months\"\n    },\n    {\n        name: \"Premium\",\n        membershipFor: \"Tejas Thakare\",\n        benefit : \"No Commission on transactions,Get Third party VAS, reveal name%\",\n        membershipType : \"Corporate\",\n        cost : 123,\n        active : \"yes\",\n        duration : \"6 Months\"\n    },\n    {\n        name: \"Gold\",\n        membershipFor: \"Pravin Poshmani\",\n        benefit : \"No Commission on transactions,Get Third party VAS, reveal name%\",\n        membershipType : \"Individual\",\n        cost : 1234,\n        active : \"yes\",\n        duration : \"6 Months\"\n    },\n    {\n        name: \"Silver\",\n        membershipFor: \"Komal Kamble\",\n        benefit : \"No Commission on transactions,Get Third party VAS, reveal name%\",\n        membershipType : \"Corporate\",\n        cost : 1212,\n        active : \"No\",\n        duration : \"3 Months\"\n    }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// ** Table Columns\nimport { data1 } from './data'\nimport { Link } from 'react-router-dom'\nimport Prism from 'prismjs'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { FormattedMessage } from 'react-intl'\nimport DataTable from 'react-data-table-component'\nimport { MoreVertical, Edit, FileText, Archive, Trash, ChevronDown, Plus} from 'react-feather'\nimport { Card, CardHeader, CardTitle, UncontrolledDropdown, DropdownToggle, DropdownMenu, UncontrolledTooltip, Button } from 'reactstrap'\n//import InputBasic from './AddMembership'\n// import HorizontalForm from './AddMembership'\n// import EditForm from './EditMembership'\n\nconst MembershipList = () => {\n\n    //console.log(currencyColumns)\n    console.log(data1)\n  // ** State\n//   const data = [\n//     {\n//       name: \"US Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Canadian Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Euro\",\n//       symbol: \"â‚¬\"\n//     }\n// ]\n// console.log(data)\n\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [addClicked, setAddClicked] = useState(0)\n  const [editClicked, setEditClicked] = useState(0)\n  const [editData, setEditData] = useState({})\n  \n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  const handleEditClick = (item) => {\n      if (!addClicked) { \n        setEditClicked(!editClicked)\n        setEditData(item)\n      }\n    //console.log(item)\n  }\n\n  const handleAddClick = () => {\n      if (!editClicked) {\n        setAddClicked(!addClicked)\n      }\n  }\n\n  const handleCancelOfEdit = () => {\n    console.log(\"in Cancel\")\n    setEditClicked(!editClicked)\n}\nconst handleCancelOfAdd = () => {\n    console.log(\"in Cancel\")\n    setAddClicked(!addClicked)\n}\nconst handleSubmitOfAdd = (data) => {\n    console.log(\"in submit\", data)\n    setAddClicked(!addClicked)\n}\n\nconst handleSubmitOfEdit = (data) => {\n    console.log(\"in submit of edit\", data)\n    setEditClicked(!editClicked)\n}\n\nconst handleDelete = (data) => {\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n}\n\n  const MembershipColumns = [\n    {\n      name: 'Membership Name',\n      selector: 'name',\n      sortable: true,\n      minWidth: '150px',\n           cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <Link to={`/master/membershps/views`}>\n                <div className='user-info text-truncate'>\n                  <span className='d-block font-weight-bold text-truncate'>{row.name}</span>\n                </div>\n              </Link>  \n            </div>\n          )\n\n    },\n    {\n      name: 'Membership For',\n      selector: 'membershipFor',\n      sortable: false,\n      minWidth: '250px'\n    },\n    {\n      name: 'Membership Type',\n      selector: 'membershipType',\n      sortable: false,\n      minWidth: '250px'\n    },\n    {\n        name: 'Benefit',\n        selector: 'benefit',\n        sortable: false,\n        minWidth: '250px',\n        cell: row => (\n          <div key={row.name} className='d-flex align-items-center'>\n            <span id='positionBottom' className='text-truncate' style={{maxWidth:200}} > {row.benefit} </span>\n            <UncontrolledTooltip placement='bottom' target='positionBottom'>\n          {row.benefit}\n            </UncontrolledTooltip> \n          </div>\n        )\n      },\n      {\n        name: 'Cost',\n        selector: 'cost',\n        sortable: false,\n        minWidth: '250px'\n      },\n      {\n        name: 'Duration',\n        selector: 'duration',\n        sortable: false,\n        minWidth: '250px'\n      },\n      {\n        name: 'Active',\n        selector: 'active',\n        sortable: false,\n        minWidth: '250px'\n      },\n    {\n      name: 'Actions',\n      allowOverflow: true,\n      cell: row => {\n        return (\n          <div className='d-flex'>\n            <UncontrolledDropdown>\n              <DropdownToggle className='pr-1' tag='span'>\n                <Trash size={15} onClick={e => { handleDelete(row) }} />\n              </DropdownToggle>\n            </UncontrolledDropdown>\n\n             <Link  to={`/edit-membership`}><Edit  \n                  size={15} \n                  onClick={ () => { \n                                    //setCurrentId(row.id)\n                                    //setModal(true)\n                                     } }>\n                                       <Link to='/edit-membership'/>\n                                     </Edit></Link>\n          </div>\n        )\n      }\n    }\n  ]\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Prev' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Next' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data1.length / 7 || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\n    />\n  )\n\n  return (\n      <Fragment>\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>Membership List</CardTitle>\n        <Link  to={`/edit-membership`}>\n        <Button className='ml-2' color='primary' onClick={handleAddClick}>\n              <Plus size={15} />\n              <span className='align-middle ml-50'>Add Membership</span>\n            </Button>\n            </Link>\n      </CardHeader>\n      {/* {addClicked ? <HorizontalForm handleCancel={handleCancelOfAdd} handleSubmit={handleSubmitOfAdd} /> : null} */}\n      {/* {editClicked ? <EditForm data ={editData} handleCancel={handleCancelOfEdit} handleSubmit={handleSubmitOfEdit} /> : null} */}\n      <DataTable\n        noHeader\n        pagination\n        selectableRowsNoSelectAll\n        columns={MembershipColumns}\n        className='react-dataTable'\n        paginationPerPage={7}\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={data1}\n      />\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default MembershipList\n"],"sourceRoot":""}