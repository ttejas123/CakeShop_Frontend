{"version":3,"sources":["views/master/sponsoredKeyword/Add/index.js"],"names":["AddSponsoredKeywords","useState","Date","picker","setPicker","useForm","defaultValues","hasSubscription","initialvalues","control","setValue","id","name","email","isVerified","icon","phone","panNumber","Currency","value","label","City","State","Country","values","setValues","useEffect","tag","sm","onSubmit","e","preventDefault","md","for","type","placeholder","style","zIndex","position","className","classNamePrefix","isClearable","options","theme","selectThemeColors","onChange","data","Product","data-enable-time","date","inline","Ripple","color","outline"],"mappings":"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","file":"static/js/280.09c9ee64.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport Flatpickr from 'react-flatpickr'\n\n// ** Third Party Components\nimport { Lock, Edit, Trash2 } from 'react-feather'\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, CustomInput, CardHeader, CardBody, Card, CardTitle } from 'reactstrap'\nimport Select from 'react-select'\nimport { selectThemeColors, isObjEmpty } from '@utils'\nimport { useForm, Controller } from 'react-hook-form'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddSponsoredKeywords = () => {\n  const [picker, setPicker] = useState(new Date())\n\n  const [data, setData] = useState(null)\n  const { control, setValue } = useForm({\n    defaultValues: { hasSubscription: 'No' }\n  })\n\n    const initialvalues = {\n    id:1,\n    name: \"\",\n    email: \"\",\n    hasSubscription: \"\",\n    isVerified: \"\",\n    icon : \"\",\n    phone : \"\",\n    panNumber: \"\",\n    Currency:  [{value: \"currency\", label: \"Indian Rupee\"}],\n    City:  [{value: \"city\", label: \"Mumbai\"}], \n    State:  [{value: \"state\", label: \"Maharashtra\"}],\n    Country: [{value: \"country\", label: \"India\"}]\n  }\n  const [values, setValues] = useState(initialvalues)\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    //prop.editAction(values)\n    setValues(initialvalues)\n  }\n  const selectedUser = {\n    avatar: \"\",\n    company: \"Yotz PVT LTD\",\n    contact: \"(479) 232-9151\",\n    country: \"El Salvador\",\n    currentPlan: \"enterprise\",\n    email: \"gslixby0@abc.net.au\",\n    fullName: \"Coense Solution\",\n    id: 1,\n    role: \"editor\",\n    status: \"inactive\",\n    username: \"gslixby0\"\n      }\n  //console.log(selectedUser)\n  // ** States\n  const [img, setImg] = useState(null)\n  const [userData, setUserData] = useState(null)\n  // ** Function to change user image\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setImg(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  // ** Update user image on mount or change\n  useEffect(() => {\n    // if (selectedUser !== null || (selectedUser !== null && userData !== null && selectedUser.id !== userData.id)) {\n    //   setUserData(selectedUser)\n    //   if (selectedUser.avatar.length) {\n    //     return setImg(selectedUser.avatar)\n    //   } else {\n    //     return setImg(null)\n    //   }\n    // }\n  })\n\n  // ** Renders User\n  const renderUserAvatar = () => {\n    if (img === null) {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded mr-2 my-25'\n          content={selectedUser.fullName}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    } else {\n      return (\n        <img\n          className='user-avatar rounded mr-2 my-25 cursor-pointer'\n          src={img}\n          alt='user profile avatar'\n          height='90'\n          width='90'\n        />\n      )\n    }\n  }\n  const optionCurrency = [\n    {value: \"TCS\", label: \"TCS\"},\n    {value: \"Nike Solutions\", label: \"Nike Solutions\"},\n    {value: \"Coense Solutions\", label: \"Coense Solutions\"},\n    {value: \"Sanoffi\", label: \"Sanoffi\"}\n    ]\n    const optionProduct = [\n      {value: \"TCSa\", label: \"Boxset of 10 Board Books for Kids\"},\n      {value: \"Nike Solutions\", label: \"Cotton Face Mask\"},\n      {value: \"Coense Solutions\", label: \"Kenstar Cool Grande 60 Litres Desert Air Cooler\"},\n      {value: \"Sanoffi\", label: \"Sanoffi\"}\n      ]\n\n\n  return (\n \n<Card>\n<CardHeader>\n  <CardTitle tag='h1'>Add / Edit Sponsored Keywords</CardTitle>\n</CardHeader>\n\n<CardBody>\n<Row>\n<Col sm='12'>\n  <Form onSubmit={e => e.preventDefault()}>\n    <Row>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='name'>Keyword</Label>\n          {/* <Input type='text' id='Keyword' placeholder='Keyword' defaultValue={userData && userData.name} /> */}\n          <Input type='text' id='Keyword' placeholder='Keyword'  />\n\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='amount'>Amount Paid</Label>\n          {/* <Input type='text' id='Keyword' placeholder='Keyword' defaultValue={userData && userData.name} /> */}\n          <Input type='text' id='amount' placeholder='Amount'  />\n\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n      <FormGroup>\n              <Label for='Currency'>Corporate</Label>\n              <div style={{zIndex:997, position:'relative'}}>\n            <Select\n              id='Corporate'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={optionCurrency}\n              theme={selectThemeColors}\n              // value={values.Currency[0]}\n              onChange={data => {\n\n\n                                 setValues(\n                                          {\n                                             ...values,\n                                             Currency : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n            </div>\n            </FormGroup> \n      </Col> \n      <Col md='6' sm='12'>\n      <FormGroup>\n              <Label for='Product'>Product</Label>\n              <div style={{zIndex:997, position:'relative'}}>\n            <Select\n              id='Product'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={optionProduct}\n              theme={selectThemeColors}\n              // value={values.Currency[0]}\n              onChange={data => {\n\n\n                                 setValues(\n                                          {\n                                             ...values,\n                                             Product : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n            </div>\n            </FormGroup> \n      </Col>      \n                \n\n                <Col md='6' sm='12'>\n                  <Label for='start_date' className=''>Start Date</Label>\n                  <Flatpickr\n                    value={picker}\n                    data-enable-time\n                    id='date-time-picker'\n                    className='form-control'\n                    onChange={date => setPicker(date)}\n                  />\n                </Col>\n                <Col md='6' sm='12'>\n                  <Label for='end_date' className=''>End Date</Label>\n                  <Flatpickr\n                    value={picker}\n                    data-enable-time\n                    id='date-time-picker'\n                    className='form-control'\n                    onChange={date => setPicker(date)}\n                  />\n                </Col>\n                <Col md='6' sm='12'>\n                  <Label for='name' className=''>Status</Label>\n                  <FormGroup className='d-flex'>\n                    <Label className='d-flex my-auto' for='active'>\n                      <span className=''>Inactive</span>\n                    </Label>\n                    <CustomInput\n                      type='switch'\n                      className='ml-1 py-1'\n                      id='activeSwitch'\n                      name='activeSwitch'\n                      label='Active'\n                      inline\n                    // onChange={handleInputeChange}\n                    /> \n                  </FormGroup>\n                </Col>\n\n    \n      <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n        <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n          Save Changes\n        </Button.Ripple>\n        <Button.Ripple color='secondary' outline>\n          Reset\n        </Button.Ripple>\n      </Col>\n    </Row>\n  </Form>\n</Col>\n</Row>\n</CardBody>\n</Card>\n  )\n}\nexport default AddSponsoredKeywords\n"],"sourceRoot":""}