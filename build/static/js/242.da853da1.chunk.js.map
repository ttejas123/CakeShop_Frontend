{"version":3,"sources":["views/master/subCat/SubAttributes/viewSubAttr.js","views/master/subCat/SubAttributes/SubAttributes.js","views/master/subCat/SubAttributes/data.js"],"names":["AddNewModal","prop","useState","values","setValues","CloseBtn","className","size","onClick","handleModal","useEffect","currentId","data","Modal","isOpen","open","toggle","contentClassName","ModalHeader","close","tag","ModalBody","Row","Col","xs","Attribute","subAttributes","map","val","Badge","color","pill","title","Button","outline","DataTableWithButtons","modal","setModal","responseModel","setResponseModel","reviewId","setreviewId","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","columns","name","selector","sortable","minWidth","maxWidth","cell","row","index","length","href","id","Cat","subCat","value","allowOverflow","UncontrolledDropdown","DropdownToggle","e","preventDefault","confirm","console","log","to","Card","CardHeader","CardTitle","md","sm","Label","for","Input","type","bsSize","onChange","target","updatedData","filter","item","startsWith","toLowerCase","includes","noHeader","pagination","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","label","key","description","chosen","Math","random"],"mappings":"qVAuFeA,EAvEK,SAACC,GACnB,IAD4B,EAOAC,mBAAS,IAPT,mBAOrBC,EAPqB,KAObC,EAPa,KAStBC,EAAW,cAAC,IAAD,CAAGC,UAAU,iBAAiBC,KAAM,GAAIC,QAASP,EAAKQ,cAYvE,OAVAC,qBAAU,WACe,KAAnBT,EAAKU,UACLP,EAAU,IAEVA,EAAU,eACLH,EAAKW,KAAKX,EAAKU,UAAY,OAGnC,CAACV,EAAKU,UAAWV,EAAKW,OAGvB,eAACC,EAAA,EAAD,CACEC,OAAQb,EAAKc,KACbC,OAAQf,EAAKQ,YACbH,UAAU,aAEVW,iBAAiB,OALnB,UAOE,cAACC,EAAA,EAAD,CAAaZ,UAAU,OAAOU,OAAQf,EAAKQ,YAAaU,MAAOd,EAAUe,IAAI,MAA7E,SACE,oBAAId,UAAU,cAAd,6BAEF,eAACe,EAAA,EAAD,CAAWf,UAAU,cAArB,UACE,cAACgB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,UACE,qBAAKlB,UAAU,iDAAf,SAEE,qBAAKA,UAAU,qBAAf,SACE,uBAAMA,UAAU,mBAAhB,uBAA6C,4BAAIH,EAAOsB,mBAI5D,uBACA,qBAAKnB,UAAU,sCAAf,SACI,uBAAMA,UAAU,eAAhB,yBACOL,EAAKW,KAAKX,EAAKU,UAAY,GAC1B,qBAAKL,UAAU,OAAf,SACGL,EAAKW,KAAKX,EAAKU,UAAY,GAAGe,cAAcC,KAAI,SAACC,GAC/C,OACG,cAACC,EAAA,EAAD,CAAOvB,UAAU,uBAAuBwB,MAAM,UAAUC,MAAI,EAA5D,SACKH,EAAII,aAKb,eAOpB,cAACC,EAAA,EAAD,CAAQH,MAAM,YAAYtB,QAAUP,EAAKQ,YAAcyB,SAAO,EAA9D,2B,6HCwQOC,UA9Qc,WAC3B,IADiC,EAOPjC,oBAAS,GAPF,mBAO1BkC,EAP0B,KAOnBC,EAPmB,OAQUnC,oBAAS,GARnB,mBAQzBoC,EARyB,KAQVC,EARU,OASCrC,mBAAS,GATV,mBASxBsC,EATwB,KASdC,EATc,OAUKvC,mBAAS,GAVd,mBAU1BwC,EAV0B,KAUbC,EAVa,OAWKzC,mBAAS,IAXd,mBAW1B0C,EAX0B,KAWbC,EAXa,OAYO3C,mBAAS,IAZhB,mBAY1B4C,EAZ0B,KAYZC,EAZY,OAaC7C,mBAAS,IAbV,gCAcLA,mBAAS,KAdJ,mBAmC3B8C,GAnC2B,UAmCjB,CACV,CACEC,KAAM,KACNC,SAAU,KACVC,UAAU,EACVC,SAAU,OACVC,SAAU,SAEZ,CACEJ,KAAM,aACNC,SAAU,gBACVE,SAAU,QACVE,KAAM,SAAAC,GAAG,OACP,qBAAkBjD,UAAU,4BAA5B,SACE,qBAAKA,UAAU,0BAAf,SACE,uBAAMA,UAAU,iDAAhB,UACCiD,EAAI7B,cAAcC,KAAI,SAACC,EAAK4B,GAC3B,GAAIA,EAAQ,EACV,OACE,qBAAKlD,UAAU,OAAf,SAAuBsB,EAAII,WAKhCuB,EAAI7B,cAAc+B,OAAS,EACM,4BAAG,mBAAGC,KAAK,IAAIlD,QAAU,WACRiC,EAAYc,EAAII,IACfpB,GAAiB,IAFhC,oBAMC,WAlBhCgB,EAAII,MAyBlB,CACEV,KAAM,WACNC,SAAU,MACVC,UAAU,EACVC,SAAU,QACXE,KAAM,SAAAC,GAAG,OACN,qBAAkBjD,UAAU,4BAA5B,SACE,qBAAKA,UAAU,0BAAf,SACE,sBAAMA,UAAU,yCAAhB,SAA0DiD,EAAIK,SAFxDL,EAAII,MAOlB,CACEV,KAAM,eACNC,SAAU,SACVC,UAAU,EACVC,SAAU,QACVE,KAAM,SAAAC,GAAG,OACP,qBAAkBjD,UAAU,4BAA5B,SACE,qBAAKA,UAAU,0BAAf,SACE,sBAAMA,UAAU,yCAAhB,SAA0DiD,EAAIM,OAAO,GAAGC,WAFlEP,EAAII,MAOlB,CACEV,KAAM,UACNc,eAAe,EACfT,KAAM,SAAAC,GACJ,OACE,sBAAKjD,UAAU,SAAf,UACE,cAAC0D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAgB3D,UAAU,OAAOc,IAAI,OAArC,SACE,cAAC,IAAD,CAAOb,KAAM,GAAIC,QAAS,SAAA0D,GACsCA,EAAEC,iBACYZ,EAAII,IAxF1E,IAFFS,QAAQ,mCAG1BC,QAAQC,IAAI,WAEdD,QAAQC,IAAI,uBAyFF,cAAC,IAAD,CAAMC,GAAE,2BAAsBhB,EAAII,IAAlC,SACE,cAAC,IAAD,CAAMpD,KAAM,cAwG5B,OACE,eAAC,WAAD,WACE,eAACiE,EAAA,EAAD,WAEE,eAACC,EAAA,EAAD,CAAYnE,UAAU,gFAAtB,UACE,cAACoE,EAAA,EAAD,CAAWtD,IAAI,KAAf,sBACA,qBAAKd,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMiE,GAAE,kBAAR,SACE,eAACtC,EAAA,EAAD,CAAQ3B,UAAU,OAAOwB,MAAM,UAAUtB,QAtGjC,WAClB6B,GAAUD,IAqGA,UAC4B,cAAC,IAAD,CAAM7B,KAAM,KACZ,sBAAMD,UAAU,qBAAhB,oCAMlC,cAACgB,EAAA,EAAD,CAAKhB,UAAU,2BAAf,SACE,eAACiB,EAAA,EAAD,CAAKjB,UAAU,qDAAqDqE,GAAG,IAAIC,GAAG,KAA9E,UACE,cAACC,EAAA,EAAD,CAAOvE,UAAU,OAAOwE,IAAI,eAA5B,oBAGA,cAACC,EAAA,EAAD,CACEzE,UAAU,yBACV0E,KAAK,OACLC,OAAO,KACPtB,GAAG,eACHG,MAAOlB,EACPsC,SArFS,SAAAhB,GACnB,IAAMJ,EAAQI,EAAEiB,OAAOrB,MACnBsB,EAAc,GAClBvC,EAAeiB,GACXA,EAAML,SACR2B,EAAcxE,IAAKyE,QAAO,SAAAC,GACxB,IAAMC,EACJD,EAAKzB,OAAO2B,cAAcD,WAAWzB,EAAM0B,gBAC3CF,EAAK1B,IAAI4B,cAAcD,WAAWzB,EAAM0B,eAEpCC,EACJH,EAAKzB,OAAO2B,cAAcC,SAAS3B,EAAM0B,gBACzCF,EAAK1B,IAAI4B,cAAcC,SAAS3B,EAAM0B,eAGxC,OAAID,KAEQA,GAAcE,EACjBA,EACK,SAEhB1C,EAAgBqC,GAChBvC,EAAeiB,YAoEb,cAAC,IAAD,CACE4B,UAAQ,EACRC,YAAU,EAEV3C,QAASA,EACT4C,kBAAmB,EACnBtF,UAAU,kBACVuF,SAAU,cAAC,IAAD,CAAatF,KAAM,KAC7BuF,sBAAuBpD,EAAc,EACrCqD,oBAnEiB,wBACvB,cAAC,KAAD,GACEC,cAAc,GACdC,UAAU,GACVC,UAAWxD,EACXyD,aAAc,SAAAC,GAAI,OAVG,SAAAA,GACvBzD,EAAeyD,EAAKC,UASIC,CAAiBF,IACvCG,UAAW3D,EAAYa,OAASX,EAAaW,OAAS,EAAI7C,IAAK6C,OAAS,GAAK,EAC7E+C,WAAW,MACXC,mBAAoB,EACpBC,qBAAsB,EACtBC,gBAAgB,SAChBC,cAAc,YACdC,eAAe,YACfC,mBAAmB,YACnBC,kBAAkB,YAClBC,cAAc,iBACdC,kBAAkB,iBAClBC,sBAAsB,YACtBC,kBAAkB,aAjBpB,+BAkBiB,aAlBjB,mCAmBqB,aAnBrB,mCAoBqB,8FApBrB,KAmEMvG,KAAMgC,EAAYa,OAASX,EAAelC,SAK1C,cAAC,EAAD,CAAUG,KAAMuB,EAAe7B,YAzIhB,WACrB8B,GAAkBD,IAwIgD3B,UAAW6B,EAAU5B,KAAMA,W,iCChVjG,kCAAO,IAAMA,EAAO,CACd,CACE+C,GAAG,EACHC,IAAI,SACJC,OAAQ,CAAC,CAACC,MAAO,SAAUsD,MAAO,WAClC1F,cAAe,CACE,CACG2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAIlD,CACE9D,GAAG,EACHC,IAAI,SACJC,OAAQ,CAAC,CAACC,MAAO,UAAWsD,MAAO,YACnC1F,cAAe,CACE,CACG2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAIlD,CACE9D,GAAG,EACHC,IAAI,SACJC,OAAQ,CAAC,CAACC,MAAO,aAAcsD,MAAO,eACtC1F,cAAe,CACE,CACG2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAKlD,CACE9D,GAAG,EACHC,IAAI,iBACJC,OAAQ,CAAC,CAACC,MAAO,aAAcsD,MAAO,eACtC1F,cAAe,CACE,CACG2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAKlD,CACE9D,GAAG,EACHC,IAAI,iBACJC,OAAQ,CAAC,CAACC,MAAO,aAAcsD,MAAO,eACtC1F,cAAgB,CACE,CACE2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAKlD,CACE9D,GAAG,EACHC,IAAI,SACJC,OAAQ,CAAC,CAACC,MAAO,aAAcsD,MAAO,eACtC1F,cAAe,CACE,CACG2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAKlD,CACE9D,GAAG,EACHC,IAAI,UACJC,OAAQ,CAAC,CAACC,MAAO,aAAcsD,MAAO,eACtC1F,cAAgB,CACE,CACE2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,KAKlD,CACE9D,GAAG,EACHC,IAAI,UACJC,OAAO,CAAC,CAACC,MAAO,aAAcsD,MAAO,eACrC1F,cAAgB,CACE,CACE2F,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,GAE9B,CACEJ,IAAK,IACLrF,MAAM,YAAD,OAAc,GACnBsF,YAAY,yBAAD,OAA2B,GACtCC,OAAwB,EAAhBC,KAAKC,SAAe,O","file":"static/js/242.da853da1.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\nimport Select from 'react-select'\n// ** Third Party Components\nimport axios from 'axios'\nimport { MoreVertical, User, Users, Edit, Calendar, FileText, Archive, Trash,  MapPin, DollarSign, X  } from 'react-feather'\n//import Flatpickr from 'react-flatpickr'\n// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { selectThemeColors, isObjEmpty } from '@utils'\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Label, Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row, Col  } from 'reactstrap'\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = (prop) => {\n  const init = {\n    id:2,\n    Attribute: \"\",\n    subAttributes: \"\"\n        \n  }\n  const [values, setValues] = useState('')\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={prop.handleModal} />\n\n  useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues(\"\")\n    } else {\n        setValues({\n          ...prop.data[prop.currentId - 1]\n        })\n    }\n  }, [prop.currentId, prop.data])\n\n  return (\n    <Modal\n      isOpen={prop.open}\n      toggle={prop.handleModal}\n      className='sidebar-sm'\n     \n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-1' toggle={prop.handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>View Category</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <Row>\n          <Col xs='12'>\n            <div className='d-flex justify-content-left align-items-center'>\n             \n              <div className='d-flex flex-column'>\n                <span className='font-weight-bold'>Category: <b>{values.Attribute}</b></span>\n                \n              </div>\n            </div>\n            <hr />\n            <div className='d-flex justify-content-between mb-2'>\n                <span className='font-small-2'>Attributes :\n                      {prop.data[prop.currentId - 1] ? (\n                        <div className=\"mt-1\">\n                          {prop.data[prop.currentId - 1].subAttributes.map((val) => {\n                             return (\n                                <Badge className='text-capitalize ml-1' color='primary' pill>\n                                    {val.title}\n                                </Badge>\n                              )\n                          })}\n                        </div>\n                        ) : null}\n                          \n                </span>\n            </div>\n          </Col>\n        </Row>\n        \n        <Button color='secondary' onClick={ prop.handleModal } outline>\n          Cancel\n        </Button>\n\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n","// ** Custom Components\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data } from './data'\nimport Select from 'react-select'\n\n// ** Add New Modal Component\nimport Response from './viewSubAttr'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardText,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar.length) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32'  />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={row.Name || 'John Doe'} initials status=\"online\" />\n  }\n}\n\nconst optionSubAttribute = [\n    {value: \"\", label: \"Filter Status\"},\n    {value: \"created\", label: \"created\"},\n    {value: \"live\", label: \"live\"},\n    {value: \"extended\", label: \"extended\"},\n    {value: \"closed\", label: \"closed\"},\n    {value: \"rejected\", label: \"rejected\"},\n    {value: \"auto closed\", label: \"auto closed\"}\n  ]\n\nconst DataTableWithButtons = () => {\n  const statusObj = {\n        pending: 'light-secondary',\n        approved: 'light-success',\n        approval: 'light-warning'\n  }\n  // ** States\n  const [modal, setModal] = useState(false)\n   const [responseModel, setResponseModel] = useState(false)\n    const [reviewId, setreviewId] = useState(0)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n  const [Filter, setFilter] = useState('')\n\n   //deleteCountry\n  const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) { \n        console.log(\"Deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Id',\n          selector: 'id',\n          sortable: true,\n          minWidth: '50px',\n          maxWidth: '200px'\n        },\n        {\n          name: 'Attributes',\n          selector: 'subAttributes',\n          minWidth: '150px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate d-flex '>\n                {row.subAttributes.map((val, index) => {\n                  if (index < 1) {\n                    return (\n                      <div className=\"mr-1\">{val.title}</div>\n                      )\n                  }\n                })\n                }\n                {row.subAttributes.length > 1 ? (\n                                                  <u><a href=\"#\" onClick={ () => { \n                                                                   setreviewId(row.id)\n                                                                    setResponseModel(true)\n                                                                     } }>\n                                                      view\n                                                </a></u>\n                                                  ) : null}\n                </span>\n                \n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Category',\n          selector: 'Cat',\n          sortable: true,\n          minWidth: '130px',\n         cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>{row.Cat}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Sub Category',\n          selector: 'subCat',\n          sortable: true,\n          minWidth: '130px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>{row.subCat[0].value}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pr-1' tag='span'>\n                    <Trash size={15} onClick={e => {\n                                                                                    e.preventDefault()\n                                                                                    deleteCountry(row.id)\n                                                                                  } }/>\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n                <Link to={`/master/Sub/addE/${row.id}`}>\n                  <Edit size={15} />\n                </Link>  \n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => {\n    setModal(!modal)\n  }\n  \n  const handleResponse = () => {\n    setResponseModel(!responseModel)\n  }\n  // handle drop down filter\n  const handleFilterByDropDown = (value) => {\n    let updatedData = []\n    setFilter(value)\n    console.log(value.value)\n    let search = \"l\"\n    search = value.value\n    setSearchValue(search)\n      if (search.length) {\n          updatedData = data.filter(item => {\n            const startsWith =\n              item.BidStatus[0].value.toLowerCase().startsWith(search.toLowerCase()) \n              \n            const includes =\n              item.BidStatus[0].value.toLowerCase().includes(search.toLowerCase())\n    \n            if (startsWith) {\n              return startsWith\n            } else if (!startsWith && includes) {\n              return includes\n            } else return null\n           })\n        \n      setFilteredData(updatedData)\n      // setSearchValue(search)\n      setFilter(value)\n    }\n  }\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const startsWith =\n          item.subCat.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.Cat.toLowerCase().startsWith(value.toLowerCase()) \n          \n        const includes =\n          item.subCat.toLowerCase().includes(value.toLowerCase()) ||\n          item.Cat.toLowerCase().includes(value.toLowerCase()) \n          \n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Category</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            <Link to={`/master/sub/add`}>\n              <Button className='ml-2' color='primary' onClick={handleModal}>\n                                          <Plus size={15} />\n                                          <span className='align-middle ml-50'>Add Category</span>\n              </Button>\n            </Link>\n          </div>\n        </CardHeader>\n\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n\n        <DataTable\n          noHeader\n          pagination\n         \n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          \n        />\n        \n      </Card>\n          <Response open={responseModel} handleModal={handleResponse} currentId={reviewId} data={data} />\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons","\nexport const data = [\n      {\n        id:1,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Camera\", label: \"Camera\"}],\n        subAttributes: [ \n                         {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n      },\n      {\n        id:2,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Display\", label: \"Display\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n      },\n      {\n        id:3,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:4,\n        Cat:\"Men's Clothers\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:5,\n        Cat:\"Men's Clothers\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:6,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:7,\n        Cat:\"Textile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:8,\n        Cat:\"Textile\",\n        subCat:[{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      }\n\n]"],"sourceRoot":""}