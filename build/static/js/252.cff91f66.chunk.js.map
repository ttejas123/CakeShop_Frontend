{"version":3,"sources":["views/master/order/add.js","@core/components/repeater/index.js"],"names":["EditEmployee","useState","useForm","defaultValues","isOnGround","register","errors","initialvalues","control","setValue","id","name","email","isActive","logo","phone","panNumber","Currency","value","label","City","State","Country","Role","values","setValues","userData","useEffect","tag","sm","onSubmit","e","preventDefault","md","for","type","Number","placeholder","defaultValue","orderNumber","orderType","userId","bidId","sellerId","bidRank","firstName","lastName","className","size","innerRef","required","classnames","address1","classNamePrefix","isClearable","options","theme","selectThemeColors","onChange","data","paymentMode","balanceAmount","amountPaid","deliveryBefore","addonType","Flatpickr","date","dateFormat","sellerConfirmation","Ripple","color","outline","Repeater","props","count","children","component","rest","Tag","items","i","push","defaultProps"],"mappings":"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","file":"static/js/252.cff91f66.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport classnames from 'classnames'\nimport Repeater from '@components/repeater'\nimport Select from 'react-select'\nimport Flatpickr from 'react-flatpickr'\n// ** Third Party Components\nimport { Lock, Edit, Trash2, MapPin, Calendar } from 'react-feather'\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, InputGroup, InputGroupAddon, InputGroupText,  Card, CardHeader,\n  CardBody, Badge, ListGroupItem,\n  CardTitle, CustomInput } from 'reactstrap'\nimport { selectThemeColors, isObjEmpty } from '@utils'\nimport { useForm, Controller } from 'react-hook-form'\n\nconst EditEmployee = () => {\n\n  const [data, setData] = useState(null)\n  const { register, errors, control, setValue } = useForm({\n    defaultValues: { isOnGround: 'No' }\n  })\n\n  const optionCountry1 = [\n    {value: \"India\", label: \"India\"},\n    {value: \"UK\", label: \"UK\"},\n    {value: \"USA\", label: \"USA\"},\n    {value: \"Australia\", label: \"Australia\"},\n    {value: \"China\", label: \"China\"},\n    {value: \"Russia\", label: \"Russia\"}\n  ]\n  const optionCountry2 = [\n    {value: \"India\", label: \"India\"},\n    {value: \"UK\", label: \"UK\"},\n    {value: \"USA\", label: \"USA\"},\n    {value: \"Australia\", label: \"Australia\"},\n    {value: \"China\", label: \"China\"},\n    {value: \"Russia\", label: \"Russia\"}\n  ]\n  const optionsellerConfirmation1 = [\n    {value: \"Conform\", label: \"Conform\"},\n    {value: \"Reject\", label: \"Reject\"}\n  ]\n  const optionRole = [\n    {value: \"Admin\", label: \"Admin\"},\n    {value: \"Intern\", label: \"Intern\"},\n    {value: \"Full-time Employee\", label: \"Full-time Employee\"}\n  ]\n\n  const optionState1 = [\n    {value: \"Maharashtra\", label: \"Maharashtra\"},\n    {value: \"Andhra Pradesh\", label: \"Andhra Pradesh\"},\n    {value: \"Kerala\", label: \"Kerala\"},\n    {value: \"Telangana\", label: \"Telangana\"},\n    {value: \"Karnataka\", label: \"Karnataka\"},\n    {value: \"Gujarat\", label: \"Gujarat\"}\n  ]\n  const optionState2 = [\n    {value: \"Maharashtra\", label: \"Maharashtra\"},\n    {value: \"Andhra Pradesh\", label: \"Andhra Pradesh\"},\n    {value: \"Kerala\", label: \"Kerala\"},\n    {value: \"Telangana\", label: \"Telangana\"},\n    {value: \"Karnataka\", label: \"Karnataka\"},\n    {value: \"Gujarat\", label: \"Gujarat\"}\n  ]\n  const optionCity1 = [\n    {value: \"Pune\", label: \"Pune\"},\n    {value: \"Mumbai\", label: \"Mumbai\"},\n    {value: \"Nagpur\", label: \"Nagpur\"},\n    {value: \"Nashik\", label: \"Nashik\"},\n    {value: \"Solapur\", label: \"Solapur\"}\n  ]\n  const optionCity2 = [\n    {value: \"Pune\", label: \"Pune\"},\n    {value: \"Mumbai\", label: \"Mumbai\"},\n    {value: \"Nagpur\", label: \"Nagpur\"},\n    {value: \"Nashik\", label: \"Nashik\"},\n    {value: \"Solapur\", label: \"Solapur\"}\n  ]\n  const optionCurrency = [\n    {value: \"Indian Rupee\", label: \"Indian Rupee\"},\n    {value: \"Us Dollar\", label: \"Us Dollar\"},\n    {value: \"Euro\", label: \"Euro\"},\n    {value: \"Armerian Dram\", label: \"Armerian Dram\"},\n    {value: \"Canadian Dollar\", label: \"Canadian Dollar\"}\n  ]\n  const initialvalues = {\n    id:1,\n    name: \"\",\n    email: \"\",\n    isOnGround: \"\",\n    isActive: \"\",\n    logo : \"\",\n    phone : \"\",\n    panNumber: \"\",\n    Currency:  [{value: \"currency\", label: \"Indian Rupee\"}],\n    City:  [{value: \"city\", label: \"Mumbai\"}], \n    State:  [{value: \"state\", label: \"Maharashtra\"}],\n    Country: [{value: \"country\", label: \"India\"}],\n    Role: [{value: \"role\", label: \"Intern\"}]\n  }\n  const [values, setValues] = useState(initialvalues)\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    //prop.editAction(values)\n    setValues(initialvalues)\n  }\n  const selectedUser = {\n    avatar: \"\",\n    company: \"Yotz PVT LTD\",\n    contact: \"(479) 232-9151\",\n    country: \"El Salvador\",\n    currentPlan: \"enterprise\",\n    email: \"gslixby0@abc.net.au\",\n    fullName: \"Coense Solution\",\n    id: 1,\n    role: \"editor\",\n    status: \"inactive\",\n    username: \"gslixby0\"\n      }\n  //console.log(selectedUser)\n  // ** States\n  const [img, setImg] = useState(null)\n  const [userData, setUserData] = useState(null)\n  // ** Function to change user image\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setImg(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  // ** Update user image on mount or change\n  useEffect(() => {\n    // if (selectedUser !== null || (selectedUser !== null && userData !== null && selectedUser.id !== userData.id)) {\n    //   setUserData(selectedUser)\n    //   if (selectedUser.avatar.length) {\n    //     return setImg(selectedUser.avatar)\n    //   } else {\n    //     return setImg(null)\n    //   }\n    // }\n  })\n\n  // ** Renders User\n  const renderUserAvatar = () => {\n    if (img === null) {\n      const stateNum = Math.floor(Math.random() * 6),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded mr-2 my-25'\n          content={selectedUser.fullName}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(36px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '90px',\n            width: '90px'\n          }}\n        />\n      )\n    } else {\n      return (\n        <img\n          className='user-avatar rounded mr-2 my-25 cursor-pointer'\n          src={img}\n          alt='user profile avatar'\n          height='90'\n          width='90'\n        />\n      )\n    }\n  }\n\n  return (\n \n<Card>\n<CardHeader>\n  <CardTitle tag='h1'>Add / Edit Orders</CardTitle>\n</CardHeader>\n\n<CardBody>\n<Row>\n<Col sm='12'>\n  <Form onSubmit={e => e.preventDefault()}>\n    <Row>\n    <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='orderNumber'>OrderNumber</Label>\n          <Input type='text' Number='orderNumber' placeholder='Employee Number' defaultValue={userData && userData.orderNumber} />\n        </FormGroup>\n      </Col>\n    <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='orderType'>Order Type</Label>\n          <Input type='text' id='orderType' placeholder='First Name' defaultValue={userData && userData.orderType} />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='userId'>User Id</Label>\n          <Input type='text' id='userId' placeholder='Last Name' defaultValue={userData && userData.userId} />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='bidId'>Bid Id</Label>\n          <Input type='bidId' id='bidId' placeholder='bidId' defaultValue={userData && userData.bidId} />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='sellerId'>SellerId</Label>\n          <Input type='text' id='sellerId' placeholder='sellerId' defaultValue={userData && userData.sellerId} />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='bidRank'>bidRank</Label>\n          <Input type='text' id='bidRank' placeholder='bidRank' defaultValue={userData && userData.bidRank} />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='firstName'>firstName</Label>\n          <Input type='text' id='firstName' placeholder='firstName' defaultValue={userData && userData.firstName} />\n        </FormGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='lastName'>lastName</Label>\n          <Input type='text' id='lastName' placeholder='lastName' defaultValue={userData && userData.lastName} />\n        </FormGroup>\n      </Col>\n      \n      <Col md='12' sm='12'>\n            <Row>\n              <Col sm='12'>\n                <h4 className='mb-1 mt-2'>\n                  <MapPin size={20} className='mr-50' />\n                  <span className='align-middle'>Sellers Address</span>\n                </h4>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='address-1'>First Seller Address</Label>\n                  <Input\n                    id='address-1'\n                    name='address1'\n                    type=\"textarea\"\n                    defaultValue='A-45, Belvedere Streets'\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors.address1\n                    })}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='address-2'>Secound Seller Address</Label>\n                  <Input placeholder='A-45, Belvedere Streets' type=\"textarea\" id='address-2' name='address-2' />\n                </FormGroup>\n              </Col>\n\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='address-2'>Land Mark</Label>\n                  <Input placeholder='A-45, Belvedere Streets' id='address-2' name='address-2' />\n                </FormGroup>\n              </Col>\n\n              <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='City'>City</Label>\n                   <Select\n                     id='City'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionCity2}\n                     theme={selectThemeColors}\n                     value={values.City[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    City : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='State'>State</Label>\n                   <Select\n                     id='State'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionState2}\n                     theme={selectThemeColors}\n                     value={values.State[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    State : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='Country'>Country</Label>\n                   <Select\n                     id='Country'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionCountry2}\n                     theme={selectThemeColors}\n                     value={values.Country[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    Country : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n            </Row> \n      </Col> \n      <Col md='12' sm='12'>\n          <Row>\n              <Col sm='12'>\n                <h4 className='mb-1 mt-2'>\n                  <MapPin size={20} className='mr-50' />\n                  <span className='align-middle'>Buyers Address</span>\n                </h4>\n              </Col>\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='address-1'>First Buyers Address</Label>\n                  <Input\n                    id='address-1'\n                    name='address1'\n                    type=\"textarea\"\n                    defaultValue='A-45, Belvedere Streets'\n                    innerRef={register({ required: true })}\n                    className={classnames({\n                      'is-invalid': errors.address1\n                    })}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='address-2'>Secound Buyers Address</Label>\n                  <Input placeholder='A-45, Belvedere Streets' type=\"textarea\" id='address-2' name='address-2' />\n                </FormGroup>\n              </Col>\n\n              <Col md='4' sm='12'>\n                <FormGroup>\n                  <Label for='address-2'>Land Mark</Label>\n                  <Input placeholder='A-45, Belvedere Streets' id='address-2' name='address-2' />\n                </FormGroup>\n              </Col>\n\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='City'>City</Label>\n                   <Select\n                     id='City'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionCity1}\n                     theme={selectThemeColors}\n                     value={values.City[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    City : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='State'>State</Label>\n                   <Select\n                     id='State'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionState1}\n                     theme={selectThemeColors}\n                     value={values.State[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    State : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='Country'>Country</Label>\n                   <Select\n                     id='Country'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionCountry1}\n                     theme={selectThemeColors}\n                     value={values.Country[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    Country : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n            </Row> \n      </Col> \n\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='paymentMode'>paymentMode</Label>\n          <Input type='text' id='paymentMode' placeholder='paymentMode' defaultValue={userData && userData.paymentMode} />\n        </FormGroup>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='balanceAmount'>balanceAmount</Label>\n          <Input type='text' id='balanceAmount' placeholder='balanceAmount' defaultValue={userData && userData.balanceAmount} />\n        </FormGroup>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='amountPaid'>amountPaid</Label>\n          <Input type='text' id='amountPaid' placeholder='amountPaid' defaultValue={userData && userData.amountPaid} />\n        </FormGroup>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <FormGroup>\n          <Label for='deliveryBefore'>deliveryBefore</Label>\n          <Input type='text' id='deliveryBefore' placeholder='deliveryBefore' defaultValue={userData && userData.deliveryBefore} />\n        </FormGroup>\n      </Col>\n\n       <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='deliveryBefore'>Delivery Before</Label>\n               <InputGroup>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <Calendar size={15} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Flatpickr\n                  id='deliveryBefore'\n                  tag={Flatpickr}\n                  name='deliveryBefore '\n                  className='form-control'\n                  onChange={(date) => setValues(\n                                            {\n                                                 ...values,\n                                                deliveryBefore  : date[0]\n                                            }\n                                       )}\n                  value={values.deliveryBefore }\n                  options={{\n                    dateFormat: 'd-m-Y'\n                  }}\n                />\n              </InputGroup>\n          </FormGroup>\n            </Col>\n\n       <Col md='6' sm='12'>\n               <FormGroup>\n                  <Label for='sellerConfirmation'>sellerConfirmation</Label>\n                   <Select\n                     id='sellerConfirmation'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionsellerConfirmation1}\n                     theme={selectThemeColors}\n                     value={values.sellerConfirmation}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    sellerConfirmation : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n    \n      <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n        <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n          Save Changes\n        </Button.Ripple>\n        <Button.Ripple color='secondary' outline>\n          Reset\n        </Button.Ripple>\n      </Col>\n    </Row>\n  </Form>\n</Col>\n</Row>\n</CardBody>\n</Card>\n  )\n}\nexport default EditEmployee\n\n\n{ /* <Col md='4' sm='12'>\n                 <FormGroup>\n                   <Label for='postcode'>Postcode</Label>\n                   <Input\n                     id='postcode'\n                     name='postcode'\n                     placeholder='597424'\n                     innerRef={register({ required: true })}\n                     invalid={errors.postcode && true}\n                   />\n                 </FormGroup>\n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                  <Label for='sellerConfirmation'>sellerConfirmation</Label>\n                   <Select\n                     id='sellerConfirmation'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionsellerConfirmation1}\n                     theme={selectThemeColors}\n                     value={values.sellerConfirmation[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    sellerConfirmation : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='State'>State</Label>\n                   <Select\n                     id='State'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionState}\n                     theme={selectThemeColors}\n                     value={values.State[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    State : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n               <Col md='4' sm='12'>\n               <FormGroup>\n                     <Label for='Country'>Country</Label>\n                   <Select\n                     id='Country'\n                     className='react-select'\n                     classNamePrefix='select'\n                     isClearable={false}\n                     options={optionCountry}\n                     theme={selectThemeColors}\n                     value={values.Country[0]}\n                     onChange={data => {\n       \n       \n                                        setValues(\n                                                 {\n                                                    ...values,\n                                                    Country : data\n                                                 } \n                                         )\n                                       }\n                               }\n                   />\n                   </FormGroup> \n               </Col>\n             </Row> */ }","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}