{"version":3,"sources":["views/master/Lead/index.js","assets/images/logo/komal.jpg","assets/images/logo/himanshu.jpg","assets/images/logo/pravin.jpg","views/master/Lead/data.js","assets/images/logo/reethika.jpg"],"names":["renderClient","row","color","Math","floor","random","avatar","length","className","img","width","height","content","Name","initials","status","DataTableWithButtons","useState","currentPage","setCurrentPage","searchValue","filteredData","columns","name","minWidth","selector","sortable","cell","to","id","Email","allowOverflow","tag","size","onClick","e","noHeader","pagination","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","data","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","Designation","phone","value","label","komal","pravin"],"mappings":"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","file":"static/js/180.36586dca.chunk.js","sourcesContent":["//Name,Email, Designation(CEO of TCS),phone\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data } from './data'\nimport Select from 'react-select'\n\n// ** Add New Modal Component\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Eye, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar.length) {\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32'  /> \n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={row.Name || 'John Doe'} initials status=\"online\" /> \n  }\n}\n\nconst DataTableWithButtons = () => {\n\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n  const [Filter, setFilter] = useState('')\n\n    const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) { \n        console.log(\"Deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Name',\n          minWidth: '250px',\n          selector: 'Name',\n          sortable: true,\n          cell: row => (\n            <div className='d-flex justify-content-left align-items-center'>\n              {renderClient(row)}\n              <div className=''>\n                <Link to={`/bidDetails/${row.id}`}>\n                  <div className='user-info text-truncate d-flex flex-column'>\n                     <span className='font-weight-bold'>{row.Name}</span>\n                     <small className='text-truncate text-muted mb-0'>@{row.Email}</small>\n                  </div>\n                </Link>  \n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Email',\n          selector: 'Email',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Designation',\n          selector: 'Designation',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'phone',\n          selector: 'phone',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pr-1' tag='span'>\n                    <Trash size={15} onClick={e => {\n                                                           } }/>\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n                <Link to={`/master/Leads/edit/${row.id}`}>\n                  <Edit size={15} />\n                </Link>  \n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        \n        const startsWith =\n          item.Name.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.customizations.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.deliveryDate.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.Category[0].label.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.subCategory[0].label.toLowerCase().startsWith(value.toLowerCase()) \n\n        const includes =\n          item.Name.toLowerCase().includes(value.toLowerCase()) ||\n          item.customizations.toLowerCase().includes(value.toLowerCase()) ||\n          item.deliveryDate.toLowerCase().includes(value.toLowerCase()) ||\n          item.Category[0].label.toLowerCase().includes(value.toLowerCase()) ||\n          item.subCategory[0].label.toLowerCase().includes(value.toLowerCase()) \n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n   // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Lead</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n              <Link to={`/master/Leads/fileupload`}>\n                  <Button className='ml-2' color='primary' >\n                                              <Plus size={15} />\n                                              <span className='align-middle ml-50'>Import From File</span>\n                  </Button>\n            </Link>\n          </div>\n        </CardHeader>\n\n        <DataTable\n          noHeader\n          pagination\n          \n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          \n        />\n        \n      </Card>\n      \n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n","export default __webpack_public_path__ + \"static/media/komal.71eab2e7.jpg\";","export default __webpack_public_path__ + \"static/media/himanshu.db95087a.jpg\";","export default __webpack_public_path__ + \"static/media/pravin.5a89c6c3.jpg\";","//Name,\n//Email, \n//Designation(CEO of TCS),\n//phone\n \nimport komal  from '../../../assets/images/logo/komal.jpg'\nimport pravin  from '../../../assets/images/logo/pravin.jpg'\nimport himanshu  from '../../../assets/images/logo/himanshu.jpg'\nimport reethika  from '../../../assets/images/logo/reethika.jpg'\n\n\n//expot data\nexport const data = [\n      {\n\n        id:1,\n        Name : \"Tejas Thakare\",\n        avatar: \"\",\n        Email : \"tthakare73@gmail.com\",\n        Designation : \"CEO Of TCS\",\n        phone : 8433841610,\n        status : {value: \"meeting done\", label: \"meeting done\"}\n \n      },\n      {\n        id:2,\n        Name : \"Komal Jadhav\",\n        avatar: komal,\n        Email : \"komalj@gmail.com\",\n        Designation : \"SCO Of Infosys\",\n        phone : 9768936483,\n        status : {value: \"meeting done\", label: \"meeting done\"}\n \n      },\n      {\n        id:3,\n        Name : \"Pravin Poshmani\",\n        avatar: pravin,\n        Email : \"pravinP@gmail.com\",\n        Designation : \"emplyee Of TCS\",\n        phone : 8268771502,\n        status : {value: \"meeting done\", label: \"meeting done\"}\n \n      }\n]\n","export default __webpack_public_path__ + \"static/media/reethika.147b588d.jpg\";"],"sourceRoot":""}