{"version":3,"sources":["views/master/bids/formModel.js","views/master/bids/bids.js","assets/images/logo/komal.jpg","assets/images/logo/himanshu.jpg","views/master/bids/data.js","assets/images/logo/pravin.jpg","assets/images/logo/reethika.jpg","@core/components/repeater/index.js"],"names":["AddNewModal","prop","useState","count","setCount","deleteForm","e","preventDefault","target","closest","remove","useForm","initialvalues","register","errors","handleSubmit","Name","DeliveryDate","Date","BidCloseDate","NoOfBidder","BidApplicationDate","created","GoLive","DeliveryLocation","ReqQuantity","BuyerBudget","CustomStatus","ReqCustomization","BidStatus","values","setValues","CloseBtn","className","size","onClick","handleModal","useEffect","currentId","data","handleInputeChange","event","name","value","Modal","isOpen","open","toggle","modalClassName","contentClassName","ModalHeader","close","tag","ModalBody","FormGroup","Label","for","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","disabled","onChange","id","placeholder","required","date","options","dateFormat","classNamePrefix","isClearable","label","theme","selectThemeColors","Col","i","Form","Row","md","type","Button","Ripple","color","outline","console","log","editAction","BootstrapCheckbox","forwardRef","ref","rest","renderClient","row","Math","floor","random","avatar","length","to","img","width","height","content","initials","status","optionBidStatus","DataTableWithButtons","statusObj","pending","approved","approval","modal","setModal","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","setCurrentId","Filter","setFilter","columns","selector","sortable","minWidth","cell","username","Badge","pill","pinid","allowOverflow","UncontrolledDropdown","DropdownToggle","confirm","Card","CardHeader","CardTitle","CardBody","updatedData","search","filter","item","startsWith","toLowerCase","includes","handleFilterByDropDown","sm","bsSize","toString","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","selectableRowsComponent","val","finalSellerId","catalogueId","pravin","komal","reethika","himanshu","Repeater","props","children","component","Tag","items","push","defaultProps"],"mappings":"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","file":"static/js/109.5d9c15bb.chunk.js","sourcesContent":["import Avatar from '@components/avatar'\nimport Select from 'react-select'\nimport { useForm } from 'react-hook-form'\nimport Repeater from '@components/repeater'\n// ** Third Party Components\nimport axios from 'axios'\nimport { MoreVertical, User, Users, Edit, Calendar, FileText, Archive, Trash,  MapPin, DollarSign, X, Plus  } from 'react-feather'\n//import Flatpickr from 'react-flatpickr'\n// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { selectThemeColors, isObjEmpty } from '@utils'\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, InputGroup, Form, InputGroupAddon, InputGroupText, Input, Label, Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Col, Row  } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = (prop) => {\n    const [count, setCount] = useState(1)\n\n  const increaseCount = () => {\n    setCount(count + 1)\n  }\n\n  const deleteForm = e => {\n    e.preventDefault()\n    e.target.closest('form').remove()\n  }\n  const { register, errors, handleSubmit } = useForm()\n  const optionDLocation = [\n    {value: \"Multiple\", label: \"Multiple\"},\n    {value: \"Single\", label: \"Single\"}\n  ]\n  const optionCustomStatus = [\n    {value: \"pending\", label: \"pending\"},\n    {value: \"approval\", label: \"approval\"},\n    {value: \"approved\", label: \"approved\"}\n  ]\n  \n  const optionBidStatus = [\n    {value: \"created\", label: \"created\"},\n    {value: \"live\", label: \"live\"},\n    {value: \"extended\", label: \"extended\"},\n    {value: \"closed\", label: \"closed\"},\n    {value: \"rejected\", label: \"rejected\"},\n    {value: \"auto closed\", label: \"auto closed\"}\n  ]\n\n  const initialvalues = {\n    Name: \"\",\n    DeliveryDate: new Date(),\n    BidCloseDate: new Date(),\n    NoOfBidder: 0,\n    BidApplicationDate: new Date(),\n    created: new Date(),\n    GoLive: new Date(),\n    DeliveryLocation : \"\",\n    ReqQuantity: 0,\n    BuyerBudget: 0,\n    CustomStatus: \"\",\n    ReqCustomization: \"\",\n    BidStatus: \"\"\n  }\n  const [selectedOption, setselectedOption] = useState()\n  const [values, setValues] = useState(initialvalues)\n  const [allDay, setAllDay] = useState(false)\n  const [endPicker, setEndPicker] = useState(new Date())  \n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={prop.handleModal} />\n\n  useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues({...initialvalues})\n    } else {\n        setValues({\n          ...prop.data[prop.currentId - 1]\n        })\n    }\n  }, [prop.currentId, prop.data])\n  //for other input\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n  //for drop down\n  const handleChange = (selectedOption) => {\n    \n    setValues(\n      {\n        ...values,\n        Currency : selectedOption.value\n      }\n    )\n  }\n\n  const submitHandle = (event) => {\n    console.log(values)\n    prop.editAction(values)\n    setValues(initialvalues)\n  }\n\n  return (\n    <Modal\n      isOpen={prop.open}\n      toggle={prop.handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-3' toggle={prop.handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>Edit Record</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n       \n        <FormGroup>\n          <Label for='Name'>User Name</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <User size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input name=\"Name\" disabled=\"disabled\" onChange={handleInputeChange} id='Name' placeholder='Afghanistan' value={values.Name} />\n          </InputGroup>\n        </FormGroup>\n\n        <FormGroup>\n            <Label for='created'>Bid Created Date</Label>\n             <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Calendar size={15} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Flatpickr\n              disabled=\"disabled\"\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='created'\n              className='form-control'\n              onChange={(date) => setValues(\n                                          {\n                                            ...values,\n                                            created : date[0]\n                                          }\n                        )}\n              value={values.created}\n              options={{\n                dateFormat: 'd-m-Y'\n              }}\n            />\n          </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='BidApplicationDate'>Bid Application Date</Label>\n           <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr\n              disabled=\"disabled\"\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='BidApplicationDate'\n              className='form-control'\n              onChange={(date) => setValues(\n                                          {\n                                            ...values,\n                                            BidApplicationDate : date[0]\n                                          }\n                        )}\n              value={values.BidApplicationDate}\n              options={{\n                dateFormat: 'd-m-Y'\n              }}\n            />\n          </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='GoLive'>Go Live Date</Label>\n           <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='GoLive'\n              className='form-control'\n              onChange={(date) => setValues(\n                                        {\n                                             ...values,\n                                            GoLive : date[0]\n                                        }\n                                   )}\n              value={values.GoLive}\n              options={{\n                dateFormat: 'd-m-Y'\n              }}\n            />\n          </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='DeliveryLocation'>Delivery Location</Label>\n            <Select\n              id='DeliveryLocation'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={optionDLocation}\n              theme={selectThemeColors}\n              value={values.DeliveryLocation[0]}\n              onChange={data => {\n                                 setValues(\n                                          {\n                                             ...values,\n                                             DeliveryLocation : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n          </FormGroup>\n          <FormGroup>\n           <Col>\n                      <Repeater count={count}>\n                        {i => (\n                          <Form key={i}>\n                            <Row className='justify-content-between align-itemss-center'>\n                              <Col md={6}>\n                                <FormGroup>\n                                  <Label for={`attribute-name-${i}`}>New Pin Code</Label>\n                                  <Input type='text' id={`attribute-name-${i}`} placeholder='Pin Code' />\n                                </FormGroup>\n                              </Col>\n                              \n                              <Col md={4} className='d-flex my-auto'>\n                                <Button.Ripple color='danger' className='text-nowrap px-1 mt-1' onClick={deleteForm} outline>\n                                  <X size={14} />\n                                  <span></span>\n                                </Button.Ripple>\n                              </Col>\n                              {/* <Col sm={12}>\n                                <hr />\n                              </Col> */}\n                            </Row>\n                          </Form>\n                        )}\n                      </Repeater>\n            </Col>\n            <Col md={6}>\n            <Button.Ripple className='d-flex btn-icon' color='primary' onClick={increaseCount}>\n              <Plus size={14} />\n              <span className='align-middle '>Add New</span>\n            </Button.Ripple>\n            </Col>\n          </FormGroup>\n\n        <FormGroup>\n            <Label for='DeliveryDate'>Delivery Date</Label>\n            <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='DeliveryDate'\n              className='form-control'\n              onChange={(date) => setValues(\n                                                                {\n                                                                  ...values,\n                                                                  DeliveryDate : date[0]\n                                                                }\n                                                        )}\n              value={values.DeliveryDate}\n              options={{\n                dateFormat: 'd-m-Y'\n              }}\n            />\n          </InputGroup>\n          </FormGroup>\n\n        <FormGroup>\n            <Label for='BidCloseDate'>Bid Close Date</Label>\n            <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr\n              disabled=\"disabled\"\n              required\n              id='endDate'\n              // tag={Flatpickr}\n              name='BidCloseDate'\n              className='form-control'\n              onChange={(date) => setValues(\n                                                                {\n                                                                  ...values,\n                                                                  BidCloseDate : date[0]\n                                                                }\n                                                        )}\n              value={values.BidCloseDate}\n              options={{\n                dateFormat: 'd-m-Y'\n              }}\n            />\n          </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='Bidder'>Number Of Bidders</Label>\n            <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Users size={15} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input type=\"number\" disabled=\"disabled\" name=\"NoOfBidder\" onChange={handleInputeChange} id='NoOfBidder' placeholder='200' value={values.NoOfBidder} />\n            </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='BuyerBudget'>Buyer Budgets</Label>\n            <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Users size={15} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input type=\"number\" disabled=\"disabled\" name=\"BuyerBudget\" onChange={handleInputeChange} id='BuyerBudget' placeholder='200' value={values.BuyerBudget} />\n            </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='ReqQuantity'>Required Quantity</Label>\n            <InputGroup>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Users size={15} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input type=\"number\" name=\"ReqQuantity\" onChange={handleInputeChange} id='ReqQuantity' placeholder='200' value={values.ReqQuantity} />\n            </InputGroup>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='BidStatus'>Bid Status</Label>\n            <Select\n              id='BidStatus'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={optionBidStatus}\n              theme={selectThemeColors}\n              value={values.BidStatus[0]}\n              onChange={data => {\n                                 setValues(\n                                          {\n                                             ...values,\n                                             BidStatus : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='CustomStatus'>Customization Status</Label>\n            <Select\n              id='CustomStatus'\n              className='react-select'\n              classNamePrefix='select'\n              isClearable={false}\n              options={optionCustomStatus}\n              theme={selectThemeColors}\n              value={values.CustomStatus[0]}\n              onChange={data => {\n                                 setValues(\n                                          {\n                                             ...values,\n                                             CustomStatus : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for='ReqCustomization'>Requested Customization</Label>\n            <InputGroup>\n              <Input type=\"text\" name=\"ReqCustomization\" onChange={handleInputeChange} id='ReqCustomization' placeholder='Company WaterMark' value={values.ReqCustomization} />\n            </InputGroup>\n          </FormGroup>\n\n        <Button className='mr-1' color='primary' onClick={ e =>  {\n                                                          prop.handleModal() \n                                                          submitHandle()\n                                                        }\n                                                      }>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={ prop.handleModal } outline>\n          Cancel\n        </Button>\n\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport axios from 'axios'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data } from './data'\nimport Select from 'react-select'\n\n// ** Add New Modal Component\nimport FormModel from './formModel'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.avatar.length) {\n    return <Link to={`/bidDetails/${row.id}`}> <Avatar className='mr-1' img={row.avatar} width='32' height='32'  /> </Link>\n  } else {\n    return <Link to={`/bidDetails/${row.id}`}><Avatar color={color || 'primary'} className='mr-1' content={row.Name || 'John Doe'} initials status=\"online\" /> </Link>\n  }\n}\n\nconst optionBidStatus = [\n    {value: \"\", label: \"Filter Status\"},\n    {value: \"created\", label: \"created\"},\n    {value: \"live\", label: \"live\"},\n    {value: \"extended\", label: \"extended\"},\n    {value: \"closed\", label: \"closed\"},\n    {value: \"rejected\", label: \"rejected\"},\n    {value: \"auto closed\", label: \"auto closed\"}\n  ]\n\nconst DataTableWithButtons = () => {\n  const statusObj = {\n        pending: 'light-secondary',\n        approved: 'light-success',\n        approval: 'light-warning'\n  }\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n  const [Filter, setFilter] = useState('')\n\n   //deleteCountry\n  const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) { \n        console.log(\"Deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n\n  //columns\n  const columns = [\n        {\n          name: 'Id',\n          selector: 'id',\n          sortable: true,\n          minWidth: '50px'\n        },\n        {\n          name: 'User',\n          minWidth: '250px',\n          selector: 'Name',\n          sortable: true,\n          cell: row => (\n            <div className='d-flex justify-content-left align-items-center'>\n              {renderClient(row)}\n              <div className=''>\n                <Link to={`/bidDetails/${row.id}`}>\n                  <div className='user-info text-truncate d-flex flex-column'>\n                     <span className='font-weight-bold'>{row.Name}</span>\n                     <small className='text-truncate text-muted mb-0'>@{row.username}</small>\n                  </div>\n                </Link>  \n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Name',\n          selector: 'Name',\n          sortable: true,\n          minWidth: '130px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>{row.Name}</span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'Customization Status',\n          selector: 'CustomStatus',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => (\n            <div key={row.id} className='d-flex align-items-center'>\n              <div className='user-info text-truncate'>\n                <span className='d-block font-weight-bold text-truncate'>\n                      <Badge className='text-capitalize' color={statusObj[row.CustomStatus[0].label]} pill>\n                          {row.CustomStatus[0].label}\n                      </Badge>\n                </span>\n              </div>\n            </div>\n          )\n        },\n        {\n          name: 'catalogue Id',\n          selector: 'catalogueId',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Quantity',\n          selector: 'ReqQuantity',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'created',\n          selector: 'created',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Go Live',\n          selector: 'GoLive',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Bid Close',\n          selector: 'BidCloseDate',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Bid Application',\n          selector: 'BidApplicationDate',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Bidders',\n          selector: 'NoOfBidder',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'PIN ID',\n          selector: 'pinid',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => {\n            \n            return (\n                <div key={row.id} className='d-flex align-items-center'>\n                  <div className='user-info text-truncate '>\n                    <Link to={`/report/pinbaseactivity`}>\n                  \n                      <span className='d-block font-weight-bold text-truncate'>{row.pinid}</span>\n                    </Link>\n                  </div>\n                </div>\n            )\n          }\n        },\n        {\n          name: 'Requested Constomization',\n          selector: 'ReqCustomization',\n          sortable: true,\n          minWidth: '250px'\n        },\n        {\n          name: 'Delivery',\n          selector: 'DeliveryDate',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Seller Id',\n          selector: 'finalSellerId',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Buyer Budget',\n          selector: 'BuyerBudget',\n          sortable: true,\n          minWidth: '150px'\n        },\n        {\n          name: 'Bid Status',\n          selector: 'BidStatus',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => {\n            \n            return (\n                <div key={row.id} className='d-flex align-items-center'>\n                  <div className='user-info text-truncate '>\n                    <span className='d-block font-weight-bold text-truncate'>{row.BidStatus[0].label}</span>\n                  </div>\n                </div>\n            )\n          }\n        },\n        {\n          name: 'Delivery Location',\n          selector: 'DeliveryLocation',\n          sortable: true,\n          minWidth: '150px',\n          cell: row => {\n            \n            return (\n                <div key={row.id} className='d-flex align-items-center'>\n                  <div className='user-info text-truncate '>\n                    <span className='d-block font-weight-bold text-truncate'>{row.DeliveryLocation[0].label}</span>\n                  </div>\n                </div>\n            )\n          }\n        },\n        {\n          name: 'Actions',\n          allowOverflow: true,\n          cell: row => {\n            return (\n              <div className='d-flex'>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='pr-1' tag='span'>\n                    <Trash size={15} onClick={e => {\n                                                                                    e.preventDefault()\n                                                                                    deleteCountry(row.id)\n                                                                                  } }/>\n                  </DropdownToggle>\n                </UncontrolledDropdown>\n\n                <Edit size={15} onClick={ () => { \n                                    setCurrentId(row.id)\n                                    setModal(true)\n                                     } }/>\n              </div>\n            )\n          }\n        }\n    ]\n\n\n  // ** Function to handle Modal toggle\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  // handle drop down filter\n  const handleFilterByDropDown = (value) => {\n    let updatedData = []\n    setFilter(value)\n    console.log(value.value)\n    let search = \"l\"\n    search = value.value\n    setSearchValue(search)\n      if (search.length) {\n          updatedData = data.filter(item => {\n            const startsWith =\n              item.BidStatus[0].value.toLowerCase().startsWith(search.toLowerCase()) \n              \n            const includes =\n              item.BidStatus[0].value.toLowerCase().includes(search.toLowerCase())\n    \n            if (startsWith) {\n              return startsWith\n            } else if (!startsWith && includes) {\n              return includes\n            } else return null\n           })\n        \n      setFilteredData(updatedData)\n      // setSearchValue(search)\n      setFilter(value)\n    }\n  }\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const NoOfBidder = item.NoOfBidder.toString()\n        const startsWith =\n          item.BidCloseDate.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.BidApplicationDate.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.GoLive.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.CustomStatus[0].label.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.BidStatus[0].label.toLowerCase().startsWith(value.toLowerCase()) ||\n          NoOfBidder.toLowerCase().startsWith(value.toLowerCase())\n          console.log(startsWith)\n        const includes =\n          item.BidCloseDate.toLowerCase().includes(value.toLowerCase()) ||\n          item.BidApplicationDate.toLowerCase().includes(value.toLowerCase()) ||\n          item.GoLive.toLowerCase().includes(value.toLowerCase()) ||\n          item.CustomStatus[0].label.toLowerCase().includes(value.toLowerCase()) ||\n          item.BidStatus[0].label.toLowerCase().includes(value.toLowerCase()) ||\n          NoOfBidder.toLowerCase().includes(value.toLowerCase())\n\n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Select\n                isClearable={false}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                options={optionBidStatus}\n                value={Filter}\n                onChange={data => {\n                  handleFilterByDropDown(data)\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>RFQ</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            <Link to={`master/bids/bulk`}>\n              <Button className='ml-2' color='primary' >\n                                          <Plus size={15} />\n                                          <span className='align-middle ml-50'>Bulk Upload</span>\n              </Button>\n            </Link>\n          </div>\n        </CardHeader>\n\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n\n        <DataTable\n          noHeader\n          pagination\n          selectableRows\n          columns={columns}\n          paginationPerPage={7}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          selectableRowsComponent={BootstrapCheckbox}\n        />\n        \n      </Card>\n            <FormModel open={modal} handleModal={handleModal} editAction={AddeditEvent} currentId={currentId} data={data} />\n    </Fragment>\n  )\n}\n\nexport default DataTableWithButtons\n","export default __webpack_public_path__ + \"static/media/komal.71eab2e7.jpg\";","export default __webpack_public_path__ + \"static/media/himanshu.db95087a.jpg\";","// Bid id\n// User Name\n//username:\"\",// Bid S\n//tatus - created,live,extended,closed,rejected,auto closed\n// Requested Customization\n// Customization Status : pending, approval, approved, \n// catalogue id\n// Req Quantity\n// created time\n// Go Live date\n// Bid Close Date\n// Bid Application Date\n// Nos of bidder\n// Delivery date\n// Buyer Budget\n// Delivery Location : Multiple Or Single location\n// finalize seller id\nimport komal  from '../../../assets/images/logo/komal.jpg'\nimport pravin  from '../../../assets/images/logo/pravin.jpg'\nimport himanshu  from '../../../assets/images/logo/himanshu.jpg'\nimport reethika  from '../../../assets/images/logo/reethika.jpg'\n\n\n//expot data\nexport const data = [\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: \"\",\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 321342,\n        NoOfBidder: 124,\n        DeliveryDate: \"21-11-2021\",\n        GoLive: \"28-11-2021\",\n        DeliveryLocation: [{value: \"Multiple\", label: \"Multiple\"}],  //Single multiple\n        BuyerBudget : 40000,\n        ReqQuantity : 1034,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"approval\", label: \"approval\"}],\n        ReqCustomization :\"Logo of team\",\n        created : \"04-10-2021\",\n        BidStatus : [{value: \"created\", label: \"created\"}],\n        Name: \"Tejas\",\n        username:\"tejas\",\n        id: 1\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: pravin,\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 321342,\n        NoOfBidder: 785,\n        DeliveryDate: \"11-11-2021\",\n        GoLive: \"08-11-2021\",\n        DeliveryLocation: [{value: \"Single\", label: \"Single\"}],  //Single multiple\n        BuyerBudget : 200000,\n        ReqQuantity : 155543,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"pending\", label: \"pending\"}],\n        ReqCustomization :\"differnt Color\",\n        created : \"07-10-2021\",\n        BidStatus : [{value: \"live\", label: \"live\"}],\n        Name: \"Pravin\",\n        username:\"pravinn2\",\n        id: 2\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: komal,\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 541342,\n        NoOfBidder: 675,\n        DeliveryDate: \"01-11-2021\",\n        GoLive: \"02-11-2021\",\n        DeliveryLocation: [{value: \"Multiple\", label: \"Multiple\"}], //Single multiple\n        BuyerBudget : 700000,\n        ReqQuantity : 10443,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"approved\", label: \"approved\"}],\n        ReqCustomization :\"Company WaterMark\",\n        created : \"04-10-2021\",\n        BidStatus : [{value: \"auto closed\", label: \"auto closed\"}],\n        Name: \"Komal\",\n        username:\"komal12\",\n        id: 3\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: \"\",\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 721342,\n        NoOfBidder: 5,\n        DeliveryDate: \"01-11-2021\",\n        GoLive: \"03-11-2021\",\n        DeliveryLocation: [{value: \"Multiple\", label: \"Multiple\"}],  //Single multiple\n        BuyerBudget : 1300000,\n        ReqQuantity : 10345,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"approval\", label: \"approval\"}],\n        ReqCustomization :\"Logo of team\",\n        created : \"11-10-2021\",\n        BidStatus : [{value: \"created\", label: \"created\"}],\n        Name: \"Mehul\",\n        username:\"mehulq1\",\n        id: 4\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: \"\",\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 2331342,\n        NoOfBidder: 132,\n        DeliveryDate: \"23-11-2021\",\n        GoLive: \"31-11-2021\",\n        DeliveryLocation: [{value: \"Single\", label: \"Single\"}],  //Single multiple\n        BuyerBudget : 100000,\n        ReqQuantity : 134,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"pending\", label: \"pending\"}],\n        ReqCustomization :\"differnt Color\",\n        created : \"31-10-2021\",\n        BidStatus : [{value: \"rejected\", label: \"rejected\"}],\n        Name: \"Harpriya\",\n        username:\"harpriya23\",\n        id: 5\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: reethika,\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 771356,\n        NoOfBidder: 112,\n        DeliveryDate: \"22-11-2021\",\n        GoLive: \"28-01-2022\",\n        DeliveryLocation: [{value: \"Single\", label: \"Single\"}],  //Single multiple\n        BuyerBudget : 600000,\n        ReqQuantity : 4034,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"approved\", label: \"approved\"}],\n        ReqCustomization :\"Company WaterMark\",\n        created : \"30-10-2021\",\n        BidStatus : [{value: \"auto closed\", label: \"auto closed\"}],\n        Name: \"Reethika\",\n        username:\"Reethika45\",\n        id: 6\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: himanshu,\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 671356,\n        NoOfBidder: 22,\n        DeliveryDate: \"6-1012021\",\n        GoLive: \"07-11-2021\",\n        DeliveryLocation: [{value: \"Multiple\", label: \"Multiple\"}],  //Single multiple\n        BuyerBudget : 200000,\n        ReqQuantity : 10434,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"pending\", label: \"pending\"}],\n        ReqCustomization :\"Company WaterMark\",\n        created : \"12-10-2021\",\n        BidStatus : [{value: \"live\", label: \"live\"}],\n        Name: \"Himanshu\",\n        username:\"himanshu23\",\n        id: 7\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: \"\",\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 921345,\n        NoOfBidder: 2,\n        DeliveryDate: \"21-11-2021\",\n        GoLive: \"22-11-2021\",\n        DeliveryLocation: [{value: \"Multiple\", label: \"Multiple\"}],  //Single multiple\n        BuyerBudget : 300000,\n        ReqQuantity : 2234,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"approved\", label: \"approved\"}],\n        ReqCustomization :\"Logo of team\",\n        created : \"22-10-2021\",\n        BidStatus : [{value: \"auto closed\", label: \"auto closed\"}],\n        Name: \"Surya_Das\",\n        username:\"suryadas\",\n        id: 8\n      },\n      {\n        BidCloseDate :\"23-10-2021\",\n        pinid :5647,\n        avatar: \"\",\n        BidApplicationDate : \"03-09-2021\",\n        finalSellerId : 3421332,\n        NoOfBidder: 20,\n        DeliveryDate: \"17-11-2021\",\n        GoLive: \"18-11-2021\",\n        DeliveryLocation: [{value: \"Single\", label: \"Single\"}],  //Single multiple\n        BuyerBudget : 700000,\n        ReqQuantity : 12034,\n        catalogueId : 42212,\n        CustomStatus : [{value: \"approval\", label: \"approval\"}],\n        ReqCustomization :\"Company WaterMark\",\n        created : \"04-10-2021\",\n        BidStatus : [{value: \"extended\", label: \"extended\"}],\n        Name: \"Avinash\",\n        username:\"avinash\",\n        id: 9\n      }\n]\n","export default __webpack_public_path__ + \"static/media/pravin.5a89c6c3.jpg\";","export default __webpack_public_path__ + \"static/media/reethika.147b588d.jpg\";","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}