{"version":3,"sources":["views/master/subCat/SubAttributes/addE.js","views/master/subCat/SubAttributes/data.js","@core/components/repeater/index.js"],"names":["UserAccountTab","prop","useState","targetKeysA","settargetKeysA","mockDataA","setmockDataA","useEffect","mockData","i","data","key","toString","title","description","chosen","Math","random","push","getMock","id","useParams","optionSubC","value","label","initialvalues","Cat","subCat","subAttributes","values","setValues","Date","currentId","console","log","data1","map","vale","sm","className","onSubmit","e","preventDefault","md","for","name","onChange","event","target","placeholder","type","onClick","checked","val","length","inline","defaultChecked","classNamePrefix","isClearable","options","theme","selectThemeColors","Ripple","color","index","splice","deleteForm","outline","size","dataSource","showSearch","filterOption","inputValue","option","indexOf","targetKeys","onSearch","dir","render","item","alert","submitHandle","Repeater","props","count","tag","children","component","rest","Tag","items","defaultProps"],"mappings":"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","file":"static/js/270.4a466592.chunk.js","sourcesContent":["\n// ** React Imports\nimport { ReactSortable } from 'react-sortablejs'\nimport { useParams } from 'react-router-dom'\nimport Repeater from '@components/repeater'\nimport Select from 'react-select'\nimport { selectThemeColors, isObjEmpty } from '@utils'\nimport { useState, useEffect } from 'react'\nimport Flatpickr from 'react-flatpickr'\nimport { MoreVertical, User, Users, Edit, Calendar, FileText, Archive, Trash,  MapPin, DollarSign, X, Plus  } from 'react-feather'\nimport { data } from './data'\nimport 'antd/dist/antd.css'\nimport { Transfer } from 'antd'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\n\nimport { Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, InputGroup, InputGroupAddon, InputGroupText,  Card, CardHeader,\n  CardBody, Badge, ListGroupItem,\n  CardTitle, CustomInput } from 'reactstrap'\n\nconst UserAccountTab = (prop) => {\n  const [targetKeysA, settargetKeysA] = useState([])\n  const [mockDataA, setmockDataA] = useState([])\n  const getMock = () => {\n    const targetKeys = []\n    const mockData = []\n    let i = 0\n    while (i < 20) {\n      const data = {\n        key: i.toString(),\n        title: `Attribute${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1\n      }\n      // if (data.chosen) {\n      //   targetKeys.push(data.key)\n      // }\n      mockData.push(data)\n      i++\n    }\n   \n    //settargetKeysA(targetKeys)\n    setmockDataA(mockData)\n   // this.setState({ mockData, targetKeys })\n  }\n\n  useEffect(() => {\n      getMock()\n  }, [])\n\n  const filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1\n\n  const handleChangeInTarg = targetKeys => {\n    settargetKeysA(targetKeys)\n  }\n\n  const handleSearch = (dir, value) => {\n    console.log('search:', dir, value)\n  }\n\n  const { id } = useParams()\n\n  const optionSubC = [\n    {value: \"Men's Ware\", label: \"Men's Ware\"},\n    {value: \"T-shirt\", label: \"T-shirt\"},\n    {value: \"Sport's T-shirt\", label: \"Sport's T-shirt\"}\n  ]\n\n  const initialvalues = {\n    id:0,\n    Cat: \"\",\n    subCat: [],\n    subAttributes: []\n  }\n  const [selectedOption, setselectedOption] = useState()\n  const [values, setValues] = useState(initialvalues)\n  const [allDay, setAllDay] = useState(false)\n  const [endPicker, setEndPicker] = useState(new Date()) \n\n    useEffect(() => {\n    if (prop.currentId === \"\") {\n        setValues({...initialvalues})\n    } else {\n        console.log(data[id - 1])\n        setValues({\n          ...data[id - 1]\n        })\n        const data1 = []\n        const val = data[id - 1].subAttributes\n        const proto = val.map(vale => {\n            return data1.push(vale.key)\n        })\n        settargetKeysA(data1)\n        //settargetKeysA(...subCat)\n        \n        \n    }\n  }, [prop.currentId, prop.data])\n \n  // ** Custom close btn\n  const increaseCount = (e, i) => {\n      console.log(e.target.checked)\n       if (e.target.checked) {\n              const val = values.subCat\n               val.length = i + 1\n              setValues({\n                ...values,\n                subCat : [...val]\n                })\n       } else {\n              setValues({\n                ...values,\n                subCat : [...values.subCat, '']\n              })\n        }   \n  }\n\n  //for other input\n  const handleInputeChange = (event) => {\n    const {name, value} = event.target\n    setValues(\n    {\n      ...values,\n      [name] : value\n    }\n    )\n  }\n  //for drop down\n  const handleChange = (selectedOption) => {\n    \n    setValues(\n      {\n        ...values,\n        Currency : selectedOption.value\n      }\n    )\n  }\n\n  const submitHandle = (event) => {\n     const value = []\n    targetKeysA.map((val) => {\n      value.push(mockDataA[val])\n    })\n\n    console.log({\n      ...values,\n      subAttributes : value\n    })\n    //prop.editAction(values)\n    \n    setValues(initialvalues)\n    settargetKeysA([])\n    alert(\"Data successfully Updated\")\n  }\n\n  const handleInput = (i, e) => {\n    const { name, value } = event.target\n    const val = [...values.subCat]\n    val[i] = value\n    setValues({\n      ...values,\n      subCat : val\n    })\n\n  }\n\n  const deleteForm = (e, index) => {\n    e.preventDefault()\n    const val = values.subCat\n    val.splice(index, 1)\n    setValues({\n      ...values,\n      subCat : [...val]\n    })\n    \n  }\n  return (\n    <Card>\n    <Row>\n      \n        <Col sm='12' className=\"pl-5 pt-2\">\n          <h2 className=\"mb-1\">Edit Your Category</h2>\n        </Col>\n      \n      <CardBody className='pl-3 pt-2'>\n      <Col sm='12'>\n        <Form onSubmit={e => e.preventDefault()}>\n          <Row>\n\n            <Col md='6' sm='12'>\n              <FormGroup>\n                <Label for='Name'>Category</Label>\n                <InputGroup>\n                  \n                  <Input name=\"Cat\" onChange={handleInputeChange} id='Cat' placeholder='Textile' value={values.Cat} />\n                </InputGroup>\n              </FormGroup>\n              <CustomInput\n                  type='switch'\n                  \n                  onClick={ (e) => {\n                            console.log(e.target.checked)\n                            if (e.target.checked) {\n                                            const val = values.subCat\n                                            val.length = 0\n                                            setValues({\n                                              ...values,\n                                              subCat : [...val]\n                                            })\n                            } else {\n                               setValues({\n                                  ...values,\n                                  subCat : [...values.subCat, '']\n                               })\n                            }  \n                            }\n                          }\n                  id='exampleCustomSwitch'\n                  name='customSwitch'\n                  label='Is This A Parent Category'\n                  inline\n                />\n                <CustomInput\n                  defaultChecked\n                  type='switch'\n                  id='exampleCustomAvail'\n                  name='customSwitch'\n                  label='Customization Available'\n                  inline\n                />\n            </Col>\n\n            <Col md='12' sm='12'>\n                  { values.subCat.map((val, i) => {\n\n                    return (\n                        <Form key={i} onSubmit={ (e) => e.preventDefault() }>\n                          <Row className='justify-content-between align-items-center'>\n                            <Col md={6} className=\"mt-1\">\n                              <FormGroup>\n                                <Label for={`item-name-${i}`}>Sub Category Name</Label>\n                                \n                                <Select\n                                    id='BidStatus'\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    isClearable={false}\n                                    options={optionSubC}\n                                    theme={selectThemeColors}\n                                    value={values.subCat[i]}\n                                    onChange={data => {\n                                                        const val = [...values.subCat]\n                                                        val[i] = data\n                                                        setValues({\n                                                          ...values,\n                                                          subCat : val\n                                                        })\n                                                      }\n                                              }\n                                  />\n                              </FormGroup>\n                            </Col>\n                            \n                            <Col md={4} className=\"mt-2\">\n                              <Button.Ripple color='danger' className='text-nowrap px-1' onClick={ (e) => deleteForm(e, i)} outline>\n                                <X size={14} className='mr-50' />\n                                <span>Delete</span>\n                              </Button.Ripple>\n                            </Col>\n                            \n                          </Row>\n                      </Form>\n                      )\n                  }\n                  )}\n              {values.Cat === \"\" ? null : (\n                    <div className=\"mt-1\">Pathing: <b>{ values.Cat } </b> > { values.subCat[0] ? <b> { values.subCat[0].value } </b> : null } </div>\n                  )}\n\n              <hr />\n            </Col>\n            \n            <Col>\n                <h3 className=\"mb-2 mt-2\"> Select Attributes </h3>\n                \n                \n                <Transfer\n                  dataSource={mockDataA}\n                  showSearch\n                  filterOption={filterOption}\n                  targetKeys={targetKeysA}\n                  onChange={handleChangeInTarg}\n                  onSearch={handleSearch}\n                  render={item => item.title}\n                />\n            \n            </Col>\n\n            <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n              <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' onClick={ e =>  {\n                                                          submitHandle()\n                                                        }\n                                                      } color='primary'>\n                Save Changes\n              </Button.Ripple>\n              <Button.Ripple color='secondary' onClick={ () => setValues(initialvalues) } outline>\n                Reset\n              </Button.Ripple>\n            </Col> \n          </Row>\n        </Form>\n      </Col>\n      </CardBody> \n    </Row>\n    </Card>\n  )\n}\nexport default UserAccountTab\n","\nexport const data = [\n      {\n        id:1,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Camera\", label: \"Camera\"}],\n        subAttributes: [ \n                         {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n      },\n      {\n        id:2,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Display\", label: \"Display\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n      },\n      {\n        id:3,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:4,\n        Cat:\"Men's Clothers\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:5,\n        Cat:\"Men's Clothers\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:6,\n        Cat:\"Mobile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes: [ \n                         {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:7,\n        Cat:\"Textile\",\n        subCat: [{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '0',\n                            title: `Attribute${0 + 1}`,\n                            description: `description of content${0 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      },\n      {\n        id:8,\n        Cat:\"Textile\",\n        subCat:[{value: \"Back Cover\", label: \"Back Cover\"}],\n        subAttributes:  [\n                          {\n                            key: '1',\n                            title: `Attribute${1 + 1}`,\n                            description: `description of content${1 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '2',\n                            title: `Attribute${2 + 1}`,\n                            description: `description of content${2 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          },\n                          {\n                            key: '3',\n                            title: `Attribute${3 + 1}`,\n                            description: `description of content${3 + 1}`,\n                            chosen: Math.random() * 2 > 1\n                          }\n                        ]\n        \n      }\n\n]","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}