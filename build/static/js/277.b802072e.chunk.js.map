{"version":3,"sources":["views/report/shipment/data.js","views/report/shipment/shipmentList.js"],"names":["data","carrier","method","weight","price","packingType","description","address","status","contactNumber","ShipmentReportsList","console","log","useState","currentPage","setCurrentPage","searchValue","filteredData","Previous","className","Next","downloadCSV","array","link","document","createElement","csv","result","keys","Object","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Card","CardHeader","CardTitle","tag","UncontrolledButtonDropdown","DropdownToggle","color","caret","outline","size","DropdownMenu","right","DropdownItem","onClick","noHeader","pagination","selectableRowsNoSelectAll","columns","name","selector","sortable","minWidth","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName"],"mappings":"8KAAaA,G,YAAO,CAChB,CACEC,QAAU,WACVC,OAAS,UACTC,OAAS,IACTC,MAAQ,IACRC,YAAc,aACdC,YAAc,uBACdC,QAAU,yBACVC,OAAS,UACTC,cAAgB,YAElB,CACIR,QAAU,WACVC,OAAS,SACTC,OAAS,IACTC,MAAQ,IACRC,YAAc,UACdC,YAAc,uBACdC,QAAU,yBACVC,OAAS,UACTC,cAAgB,YAEpB,CACIR,QAAU,WACVC,OAAS,UACTC,OAAS,IACTC,MAAQ,IACRC,YAAc,aACdC,YAAc,uBACdC,QAAU,yBACVC,OAAS,UACTC,cAAgB,YAEpB,CACER,QAAU,WACVC,OAAS,UACTC,OAAS,IACTC,MAAQ,IACRC,YAAc,aACdC,YAAc,uBACdC,QAAU,yBACVC,OAAS,UACTC,cAAgB,c,8KCkWPC,UA3Xa,WAGxBC,QAAQC,IAAIZ,GAHkB,MAqBMa,mBAAS,GArBf,mBAqBzBC,EArByB,KAqBZC,EArBY,OAsBMF,mBAAS,IAtBf,mBAsBzBG,EAtByB,aAuBQH,mBAAS,KAvBjB,mBAuBzBI,EAvByB,aAwBIJ,mBAAS,IAxBb,gCAyBMA,mBAAS,IAzBf,gCA0BAA,mBAAS,KA1BT,mBAoN1BK,GApN0B,UAoNf,WACf,OACE,cAAC,WAAD,UACE,sBAAMC,UAAU,8CAQhBC,EAAO,WACX,OACE,cAAC,WAAD,UACE,sBAAMD,UAAU,6CA4DtB,SAASE,EAAYC,GACnB,IAAMC,EAAOC,SAASC,cAAc,KAChCC,EA7BN,SAAoCJ,GAClC,IAAIK,EAIEC,EAAOC,OAAOD,KAAK5B,EAAK,IAkB9B,OAhBA2B,EAAS,GACTA,GAAUC,EAAKE,KALS,KAMxBH,GALsB,KAOtBL,EAAMS,SAAQ,SAAAC,GACZ,IAAIC,EAAM,EACVL,EAAKG,SAAQ,SAAAG,GACPD,EAAM,IAAGN,GAXO,KAapBA,GAAUK,EAAKE,GAEfD,OAEFN,GAhBoB,QAmBfA,EAMGQ,CAA2Bb,GACrC,GAAY,OAARI,EAAJ,CAIKA,EAAIU,MAAM,sBACbV,EAAG,sCAAkCA,IAGvCH,EAAKc,aAAa,OAAQC,UAAUZ,IACpCH,EAAKc,aAAa,WAPD,cAQjBd,EAAKgB,SAIP,OACI,cAAC,WAAD,UACF,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYtB,UAAU,gBAAtB,UACE,cAACuB,EAAA,EAAD,CAAWC,IAAI,KAAf,8BACA,qBAAKxB,UAAU,sBAAf,SACI,eAACyB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAgBC,MAAM,YAAYC,OAAK,EAACC,SAAO,EAA/C,UACE,cAAC,IAAD,CAAOC,KAAM,KACb,sBAAM9B,UAAU,qBAAhB,uBAEF,eAAC+B,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACE,eAACC,EAAA,EAAD,CAAcjC,UAAU,QAAxB,UACE,cAAC,IAAD,CAAS8B,KAAM,KACf,sBAAM9B,UAAU,qBAAhB,sBAEF,eAACiC,EAAA,EAAD,CAAcjC,UAAU,QAAQkC,QAAS,kBAAMhC,EAAYrB,IAA3D,UACE,cAAC,IAAD,CAAUiD,KAAM,KAChB,sBAAM9B,UAAU,qBAAhB,oBAEF,eAACiC,EAAA,EAAD,CAAcjC,UAAU,QAAxB,UACE,cAAC,IAAD,CAAM8B,KAAM,KACZ,sBAAM9B,UAAU,qBAAhB,sBAEF,eAACiC,EAAA,EAAD,CAAcjC,UAAU,QAAxB,UACE,cAAC,IAAD,CAAM8B,KAAM,KACZ,sBAAM9B,UAAU,qBAAhB,oBAEF,eAACiC,EAAA,EAAD,CAAcjC,UAAU,QAAxB,UACE,cAAC,IAAD,CAAM8B,KAAM,KACZ,sBAAM9B,UAAU,qBAAhB,gCAuBZ,cAAC,IAAD,CACEmC,UAAQ,EACRC,YAAU,EACVC,2BAAyB,EACzBC,QAlRQ,CACZ,CACEC,KAAM,UACNC,SAAU,UACVC,UAAU,EACVC,SAAU,SAEZ,CACEH,KAAM,SACNC,SAAU,SACVC,UAAU,EACVC,SAAU,SAEZ,CACIH,KAAM,SACNC,SAAU,SACVC,UAAU,EACVC,SAAU,SAEd,CACIH,KAAM,QACNC,SAAU,QACVC,UAAU,EACVC,SAAU,SAEd,CACIH,KAAM,eACNC,SAAU,cACVC,UAAU,EACVC,SAAU,SAEd,CACIH,KAAM,cACNC,SAAU,cACVC,UAAU,EACVC,SAAU,SAEd,CACIH,KAAM,UACNC,SAAU,UACVC,UAAU,EACVC,SAAU,SAEd,CACIH,KAAM,SACNC,SAAU,SACVC,UAAU,EACVC,SAAU,SAEd,CACIH,KAAM,iBACNC,SAAU,gBACVC,UAAU,EACVC,SAAU,UA8NV1C,UAAU,kBACV2C,kBAAmB,EACnBC,SAAU,cAAC,IAAD,CAAad,KAAM,KAC7Be,sBAAuBlD,EAAc,EACrCmD,oBAnImB,kBACvB,cAAC,IAAD,CACEC,cAAe,cAAChD,EAAD,CAAU+B,KAAM,KAC/BkB,UAAW,cAAC/C,EAAD,CAAM6B,KAAM,KACvBmB,UAAWtD,EACXuD,aAAc,SAAAC,GAAI,OAnNG,SAAAA,GACvBvD,EAAeuD,EAAKC,UAkNIC,CAAiBF,IACvCG,UAAWzD,EAAY0D,OAASzD,EAAayD,OAAS,EAAI1E,EAAK0E,OAAS,GAAK,EAC7EC,WAAY,MACZC,mBAAoB,EACpBC,qBAAsB,EACtBC,gBAAiB,SACjBC,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,eAAe,YACfC,mBAAmB,YACnBC,mBAAoB,2EAiHlBvF,KAAMA,W","file":"static/js/277.b802072e.chunk.js","sourcesContent":["export const data = [\n    {\n      carrier : \"Carrier1\",\n      method : \"Roadway\",\n      weight : 100,\n      price : 1000,\n      packingType : \"Carton Box\",\n      description : \"Will Reach by 2 days\",\n      address : \"B-1, abc nagar, Mumbai\",\n      status : \"shipped\",\n      contactNumber : 9876543210\n    },\n    {\n        carrier : \"Carrier2\",\n        method : \"Airway\",\n        weight : 200,\n        price : 2000,\n        packingType : \"Plastic\",\n        description : \"Will Reach by 2 days\",\n        address : \"B-2, abc nagar, Mumbai\",\n        status : \"shipped\",\n        contactNumber : 9876543220\n    },\n    {\n        carrier : \"Carrier3\",\n        method : \"Roadway\",\n        weight : 300,\n        price : 3000,\n        packingType : \"Carton Box\",\n        description : \"Will Reach by 2 days\",\n        address : \"B-3, abc nagar, Mumbai\",\n        status : \"shipped\",\n        contactNumber : 9876533210\n    },\n    {\n      carrier : \"Carrier4\",\n      method : \"Roadway\",\n      weight : 400,\n      price : 4000,\n      packingType : \"Carton Box\",\n      description : \"Will Reach by 2 days\",\n      address : \"B-4, abc nagar, Mumbai\",\n      status : \"shipped\",\n      contactNumber : 9876543240\n    }\n]","// ** React Imports\nimport { Fragment, useState } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// ** Table Columns\nimport { data } from './data'\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { FormattedMessage } from 'react-intl'\nimport DataTable from 'react-data-table-component'\nimport { MoreVertical, Edit, FileText, Archive, Share, Printer, File, Grid, Copy, Trash, ChevronDown, Plus} from 'react-feather'\nimport { Card, CardHeader, CardTitle, UncontrolledDropdown, UncontrolledButtonDropdown, DropdownItem, DropdownToggle, DropdownMenu, Button } from 'reactstrap'\n//import InputBasic from './AddBadges'\n// import HorizontalForm from './AddCurrency'\n// import EditForm from './EditCurrency'\n\nconst ShipmentReportsList = () => {\n\n    //console.log(BankGuarranteApplsColumns)\n    console.log(data)\n  // ** State\n//   const data = [\n//     {\n//       name: \"US Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Canadian Dollar\",\n//       symbol: \"$\"\n//     },\n//     {\n//       name: \"Euro\",\n//       symbol: \"â‚¬\"\n//     }\n// ]\n// console.log(data)\n\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [addClicked, setAddClicked] = useState(0)\n  const [editClicked, setEditClicked] = useState(0)\n  const [editData, setEditData] = useState({})\n  \n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  const handleEditClick = (item) => {\n      if (!addClicked) { \n        setEditClicked(!editClicked)\n        setEditData(item)\n      }\n    //console.log(item)\n  }\n\n  const handleAddClick = () => {\n      if (!editClicked) {\n        setAddClicked(!addClicked)\n      }\n  }\n\n  const handleCancelOfEdit = () => {\n    console.log(\"in Cancel\")\n    setEditClicked(!editClicked)\n}\nconst handleCancelOfAdd = () => {\n    console.log(\"in Cancel\")\n    setAddClicked(!addClicked)\n}\nconst handleSubmitOfAdd = (data) => {\n    console.log(\"in submit\", data)\n    setAddClicked(!addClicked)\n}\n\nconst handleSubmitOfEdit = (data) => {\n    console.log(\"in submit of edit\", data)\n    setEditClicked(!editClicked)\n}\n\nconst handleDelete = (data) => {\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) {\n        console.log(\" your record is deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n}\n\nconst renderClient = row => {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n  \n    if (row.icon.length) {\n      return <Avatar className='mr-1' img={row.icon} width='32' height='32'  />\n    } else {\n      return <Avatar color={color || 'primary'} className='mr-1' content={row.name || 'John Doe'} initials status=\"online\" />\n    }\n  }\n\nconst columns = [\n    {\n      name: 'Carrier',\n      selector: 'carrier',\n      sortable: true,\n      minWidth: '150px'\n    },\n    {\n      name: 'Method',\n      selector: 'method',\n      sortable: true,\n      minWidth: '150px'\n    },\n    {\n        name: 'Weight',\n        selector: 'weight',\n        sortable: true,\n        minWidth: '150px'\n    },\n    {\n        name: 'Price',\n        selector: 'price',\n        sortable: true,\n        minWidth: '150px'\n    },\n    {\n        name: 'Packing Type',\n        selector: 'packingType',\n        sortable: true,\n        minWidth: '150px'\n    },\n    {\n        name: 'Description',\n        selector: 'description',\n        sortable: true,\n        minWidth: '150px'\n    },\n    {\n        name: 'Address',\n        selector: 'address',\n        sortable: true,\n        minWidth: '150px'\n    },\n    {\n        name: 'Status',\n        selector: 'status',\n        sortable: true,\n        minWidth: '150px'\n    },\n    {\n        name: 'Contact Number',\n        selector: 'contactNumber',\n        sortable: true,\n        minWidth: '150px'\n    }\n    // ,\n    // {\n    //   name: 'Actions',\n    //   allowOverflow: true,\n    //   cell: row => {\n    //     return (\n    //       <div className='d-flex'>\n    //         <UncontrolledDropdown>\n    //           <DropdownToggle className='pr-1' tag='span'>\n    //             <Trash size={15} onClick={e => { handleDelete(row) }} />\n    //           </DropdownToggle>\n    //         </UncontrolledDropdown>\n    //         <Link  to={`/report/add-GstReport`}><Edit  \n    //               size={15} \n    //               onClick={ () => { \n    //                                 //setCurrentId(row.id)\n    //                                 //setModal(true)\n    //                                  } }>\n    //                                    <Link to='/report/add-GstReport'/>\n    //                                  </Edit></Link>\n    //       </div>\n    //     )\n    //   }\n  ]\n  \n  // ** Function to handle filter\n  // const handleFilter = e => {\n  //   const value = e.target.value\n  //   let updatedData = []\n  //   setSearchValue(value)\n\n  //   const status = {\n  //     1: { title: 'Current', color: 'light-primary' },\n  //     2: { title: 'Professional', color: 'light-success' },\n  //     3: { title: 'Rejected', color: 'light-danger' },\n  //     4: { title: 'Resigned', color: 'light-warning' },\n  //     5: { title: 'Applied', color: 'light-info' }\n  //   }\n\n  //   if (value.length) {\n  //     updatedData = data.filter(item => {\n  //       const startsWith =\n  //         item.full_name.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.post.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.GstReport.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.age.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().startsWith(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().startsWith(value.toLowerCase())\n\n  //       const includes =\n  //         item.full_name.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.post.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.GstReport.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.age.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.salary.toLowerCase().includes(value.toLowerCase()) ||\n  //         item.start_date.toLowerCase().includes(value.toLowerCase()) ||\n  //         status[item.status].title.toLowerCase().includes(value.toLowerCase())\n\n  //       if (startsWith) {\n  //         return startsWith\n  //       } else if (!startsWith && includes) {\n  //         return includes\n  //       } else return null\n  //     })\n  //     setFilteredData(updatedData)\n  //     setSearchValue(value)\n  //   }\n  // }\n\n  // ** Pagination Previous Component\n  const Previous = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Prev' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Pagination Next Component\n  const Next = () => {\n    return (\n      <Fragment>\n        <span className='align-middle d-none d-md-inline-block'>\n          {/* <FormattedMessage id='Next' /> */}\n        </span>\n      </Fragment>\n    )\n  }\n\n  // ** Custom Pagination Component\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={<Previous size={15} />}\n      nextLabel={<Next size={15} />}\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 7 : data.length / 7 || 1}\n      breakLabel={'...'}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName={'active'}\n      pageClassName={'page-item'}\n      nextLinkClassName={'page-link'}\n      nextClassName={'page-item next'}\n      previousClassName={'page-item prev'}\n      previousLinkClassName={'page-link'}\n      pageLinkClassName={'page-link'}\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName={'pagination react-paginate pagination-sm justify-content-end pr-1 mt-1'}\n    />\n  )\n\n   \n  // ** Converts table to CSV\n  function convertArrayOfObjectsToCSV(array) {\n    let result\n\n    const columnDelimiter = ','\n    const lineDelimiter = '\\n'\n    const keys = Object.keys(data[0])\n\n    result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    array.forEach(item => {\n      let ctr = 0\n      keys.forEach(key => {\n        if (ctr > 0) result += columnDelimiter\n\n        result += item[key]\n\n        ctr++\n      })\n      result += lineDelimiter\n    })\n\n    return result\n  }\n\n  // ** Downloads CSV\n  function downloadCSV(array) {\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n\n    const filename = 'export.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n  }\n\n\n  return (\n      <Fragment>\n    <Card>\n      <CardHeader className='border-bottom'>\n        <CardTitle tag='h4'>Shipment Reports</CardTitle>\n        <div className='d-flex mt-md-0 mt-1'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='secondary' caret outline>\n                <Share size={15} />\n                <span className='align-middle ml-50'>Export</span>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem className='w-100'>\n                  <Printer size={15} />\n                  <span className='align-middle ml-50'>Print</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(data)}>\n                  <FileText size={15} />\n                  <span className='align-middle ml-50'>CSV</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Grid size={15} />\n                  <span className='align-middle ml-50'>Excel</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <File size={15} />\n                  <span className='align-middle ml-50'>PDF</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Copy size={15} />\n                  <span className='align-middle ml-50'>Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n      </CardHeader>\n      {/* {addClicked ? <HorizontalForm handleCancel={handleCancelOfAdd} handleSubmit={handleSubmitOfAdd} /> : null}\n      {editClicked ? <EditForm data ={editData} handleCancel={handleCancelOfEdit} handleSubmit={handleSubmitOfEdit} /> : null} */}\n      {/* <Row className='justify-content-end mx-0'>\n        <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n          <Label className='mr-1' for='search-input-1'>\n            <FormattedMessage id='Search' />\n          </Label>\n          <Input\n            className='dataTable-filter mb-50'\n            type='text'\n            bsSize='sm'\n            id='search-input-1'\n            value={searchValue}\n            onChange={handleFilter}\n          />\n        </Col>\n      </Row> */}\n      <DataTable\n        noHeader\n        pagination\n        selectableRowsNoSelectAll\n        columns={columns}\n        className='react-dataTable'\n        paginationPerPage={7}\n        sortIcon={<ChevronDown size={10} />}\n        paginationDefaultPage={currentPage + 1}\n        paginationComponent={CustomPagination}\n        data={data}\n      />\n      {/* <CardFooter>\n        <CardText className='mb-0'>\n          <span className='font-weight-bold'>Note:</span>{' '}\n          <span>Use Intl Dropdown in Navbar to change table language</span>\n        </CardText>\n      </CardFooter> */}\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default ShipmentReportsList\n"],"sourceRoot":""}