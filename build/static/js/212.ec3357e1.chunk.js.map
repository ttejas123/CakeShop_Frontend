{"version":3,"sources":["views/master/onGroundStaff/data.js","views/master/onGroundStaff/userTable.js","views/master/onGroundStaff/OnGroundStaff.js","assets/images/logo/komal.jpg","assets/images/logo/himanshu.jpg","assets/images/logo/pravin.jpg","assets/images/logo/reethika.jpg"],"names":["renderClient","row","color","Math","floor","random","profilePic","length","className","img","width","height","content","Name","initials","status","data","name","pravin","assignedTo","location","columns","selector","sortable","minWidth","cell","BootstrapCheckbox","forwardRef","ref","onClick","rest","type","UserTable","useState","currentPage","setCurrentPage","searchValue","setSearchValue","filteredData","setFilteredData","Card","CardHeader","CardTitle","tag","Row","Col","md","sm","Label","for","Input","bsSize","id","value","onChange","e","target","updatedData","filter","item","NoOfBidder","toString","startsWith","UserName","toLowerCase","mrp","gst","console","log","includes","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","size","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","selectableRowsComponent","OnGroundStaff","Company","label","Location","User","values","setValues","FormGroup","theme","selectThemeColors","classNamePrefix","options","menuPlacement","isClearable","index","Button","Ripple","outline"],"mappings":"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","file":"static/js/212.ec3357e1.chunk.js","sourcesContent":["//expot data\n// Bid id\n// User Name\n//username:\"\",// Bid S\n//tatus - created,live,extended,closed,rejected,auto closed\n// Requested Customization\n// Customization Status : pending, approval, approved, \n// catalogue id\n// Req Quantity\n// created time\n// Go Live date\n// Bid Close Date\n// Bid Application Date\n// Nos of bidder\n// Delivery date\n// Buyer Budget\n// Delivery Location : Multiple Or Single location\n// finalize seller id\nimport komal  from '../../../assets/images/logo/komal.jpg'\nimport pravin  from '../../../assets/images/logo/pravin.jpg'\nimport himanshu  from '../../../assets/images/logo/himanshu.jpg'\nimport reethika  from '../../../assets/images/logo/reethika.jpg'\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\nconst renderClient = row => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n    color = states[stateNum]\n\n  if (row.profilePic.length) {\n    return <Avatar className='mr-1' img={row.profilePic} width='32' height='32'  />\n  } else {\n    return <Avatar color={color || 'primary'} className='mr-1' content={row.Name || 'John Doe'} initials status=\"online\" />\n  }\n}\n//expot data\nexport const data = [\n      {\n        name : \"Tejas Thakare\",\n        profilePic : pravin,\n        assignedTo : \"Company1\",\n        location : \"Location1\"\n      },\n      {\n        name : \"Komal Kamble\",\n        profilePic : pravin,\n        assignedTo : \"Company2\",\n        location : \"Location2\"\n      },\n      {\n        name : \"Pravin Poshmani\",\n        profilePic : pravin,\n        assignedTo : \"Company3\",\n        location : \"Location3\"\n      },\n      {\n        name : \"Mehul Sir\",\n        profilePic : \"\",\n        assignedTo : \"Company4\",\n        location : \"Location4\"\n      }\n]\nexport const columns = [\n  {\n    name: 'Name',\n    selector: 'name',\n    sortable: true,\n    minWidth: '50px'\n  },\n  {\n    name: 'Profile Pic',\n    minWidth: '150px',\n    selector: 'profilePic',\n    sortable: true,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n      </div>\n    )\n  },\n  {\n    name: 'Assigned To',\n    selector: 'assignedTo',\n    sortable: true,\n    minWidth: '150px'\n  },\n  {\n    name: 'Location',\n    selector: 'location',\n    sortable: true,\n    minWidth: '150px'\n  }\n]\n","// ** Custom Components\nimport Avatar from '@components/avatar'\nimport { Link } from 'react-router-dom'\n//import { DropDownList } from '@progress/kendo-react-dropdowns'\n// ** Third Party Components\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\nimport { selectThemeColors } from '@utils'\n// ** Table Data & Columns\nimport { data, columns } from './data'\nimport Select from 'react-select'\n\n// ** Add New Modal Component\n//import FormModel from './formModel'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, File, Grid, Copy, Plus, MoreVertical, Edit, FileText, Archive, Trash  } from 'react-feather'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  UncontrolledButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Input,\n  Label,\n  Row,\n  Col,\n  Badge, UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n  <div className='custom-control custom-checkbox'>\n    <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n    <label className='custom-control-label' onClick={onClick} />\n  </div>\n))\n\n\n// ** Renders Client Columns\n// const renderClient = row => {\n//   const stateNum = Math.floor(Math.random() * 6),\n//     states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n//     color = states[stateNum]\n\n//   if (row.avatar.length) {\n//     return <Avatar className='mr-1' img={row.avatar} width='32' height='32'  />\n//   } else {\n//     return <Avatar color={color || 'primary'} className='mr-1' content={row.Name || 'John Doe'} initials status=\"online\" />\n//   }\n// }\n\nconst optionBidStatus = [\n    {value: \"\", label: \"Filter Status\"},\n    {value: \"UserName\", label: \"User Name\"},\n    {value: \"mrp\", label: \"MRP\"},\n    {value: \"gst\", label: \"GSt\"},\n    {value: \"category\", label: \"Category\"},\n    {value: \"subCategory\", label: \"Sub Category\"},\n    {value: \"UserCategory\", label: \"User Category\"}\n  ]\n\nconst UserTable = () => {\n  const statusObj = {\n        pending: 'light-secondary',\n        approved: 'light-success',\n        approval: 'light-warning'\n  }\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [searchValue, setSearchValue] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [currentId, setCurrentId] = useState('')\n  const [Filter, setFilter] = useState('')\n\n   //deleteCountry\n  const deleteCountry = (val) => {\n    //here we passing id to delete this specific record\n    const userselection = confirm(\"Are you sure you want to delete\")\n \n      if (userselection === true) { \n        console.log(\"Deleted\")\n      } else {\n      console.log(\"not deleted \")\n      }\n  }\n    //edit action\n   const AddeditEvent = (val) => {\n     //here we hande event which comming from addNewModel.js (Form for add and edit)\n      setCurrentId(\"\")\n      console.log(val)\n  }\n\n  // handle drop down filter\n  const handleFilterByDropDown = (value) => {\n    let updatedData = []\n    setFilter(value)\n    console.log(value.value)\n    let search = \"l\"\n    search = value.value\n    setSearchValue(search)\n      if (search.length) {\n          updatedData = data.filter(item => {\n            const startsWith =\n              item.BidStatus[0].value.toLowerCase().startsWith(search.toLowerCase()) \n              \n            const includes =\n              item.BidStatus[0].value.toLowerCase().includes(search.toLowerCase())\n    \n            if (startsWith) {\n              return startsWith\n            } else if (!startsWith && includes) {\n              return includes\n            } else return null\n           })\n        \n      setFilteredData(updatedData)\n      // setSearchValue(search)\n      setFilter(value)\n    }\n  }\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const value = e.target.value\n    let updatedData = []\n    setSearchValue(value)\n\n    if (value.length) {\n      updatedData = data.filter(item => {\n        const NoOfBidder = item.NoOfBidder.toString()\n        const startsWith =\n          item.UserName.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.mrp.toLowerCase().startsWith(value.toLowerCase()) ||\n          item.gst.toLowerCase().startsWith(value.toLowerCase()) \n          console.log(startsWith)\n        const includes =\n          item.UserName.toLowerCase().includes(value.toLowerCase()) ||\n          item.mrp.toLowerCase().includes(value.toLowerCase()) ||\n          item.gst.toLowerCase().includes(value.toLowerCase()) \n          \n        if (startsWith) {\n          return startsWith\n        } else if (!startsWith && includes) {\n          return includes\n        } else return null\n       })\n      setFilteredData(updatedData)\n      setSearchValue(value)\n    }\n  }\n\n  // ** Function to handle Pagination\n  const handlePagination = page => {\n    setCurrentPage(page.selected)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel=''\n      nextLabel=''\n      forcePage={currentPage}\n      onPageChange={page => handlePagination(page)}\n      pageCount={searchValue.length ? filteredData.length / 5 : data.length / 5 || 1}\n      breakLabel='...'\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName='active'\n      pageClassName='page-item'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      nextLinkClassName='page-link'\n      nextClassName='page-item next'\n      previousClassName='page-item prev'\n      previousLinkClassName='page-link'\n      pageLinkClassName='page-link'\n      breakClassName='page-item'\n      breakLinkClassName='page-link'\n      containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n    />\n  )\n\n\n  return (\n    <Fragment>\n      {/* <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Search Filter</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Select\n                isClearable={false}\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                options={optionBidStatus}\n                value={Filter}\n                onChange={data => {\n                  handleFilterByDropDown(data)\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n */}\n      <Card className='mb-0'>\n\n        <CardHeader className='flex-md-row flex-column align-md-items-center align-items-start border-bottom'>\n          <CardTitle tag='h4'>Users</CardTitle>\n          <div className='d-flex mt-md-0 mt-1'>\n            \n          </div>\n        </CardHeader>\n\n        <Row className='justify-content-end mx-0'>\n          <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <Input\n              className='dataTable-filter mb-50'\n              type='text'\n              bsSize='sm'\n              id='search-input'\n              value={searchValue}\n              onChange={handleFilter}\n            />\n          </Col>\n        </Row>\n\n        <DataTable\n          noHeader\n          pagination\n          selectableRows\n          columns={columns}\n          paginationPerPage={5}\n          className='react-dataTable'\n          sortIcon={<ChevronDown size={10} />}\n          paginationDefaultPage={currentPage + 1}\n          paginationComponent={CustomPagination}\n          data={searchValue.length ? filteredData : data}\n          selectableRowsComponent={BootstrapCheckbox}\n        />\n        \n      </Card>\n            {/* <FormModel open={modal} handleModal={handleModal} editAction={AddeditEvent} currentId={currentId} data={data} /> */}\n    </Fragment>\n  )\n}\n\nexport default UserTable\n","// ** React Imports\nimport { Fragment, useState } from 'react'\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { User, MapPin } from 'react-feather'\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport Select from 'react-select'\n// ** Third Party Components\nimport { Card, Row, Col, Button, Label, FormGroup, Input, CustomInput, Form  } from 'reactstrap'\nimport UserTable from './userTable'\nimport CardBody from 'reactstrap/lib/CardBody'\nimport { selectThemeColors } from '@utils'\n\nconst OnGroundStaff = () => {\n\n    const optionUser = [\n        {value: \"Mehul\", label: \"Mehul\", id:4},\n        {value: \"Pravin Poshmani\", label: \"Pravin Poshmani\", id:1},\n        {value: \"Tejas Thakare\", label: \"Tejas Thakare\", id:2},\n        {value: \"Komal Kamble \", label: \"Komal Kamble \", id:3}\n      ]\n\n      const optionCompany = [\n        {value: \"TCS\", label: \"TCS\", id:4},\n        {value: \"Infosys\", label: \"Infosys\", id:1},\n        {value: \"Accenture\", label: \"Accenture\", id:2},\n        {value: \"Goldman Sachs\", label: \"Goldman Sachs\", id:3}\n      ]\n\n      const optionLocation = [\n        {value: \"Mumbai\", label: \"Mumbai\", id:4},\n        {value: \"Pune\", label: \"Pune\", id:1},\n        {value: \"Bangalore\", label: \"Bangalore\", id:2},\n        {value: \"Hyderabad\", label: \"Hyderabad\", id:3}\n      ]\n\n      const initialvalues = {\n        Company:  [{value: \"company\", label: \"Accenture\"}],\n        Location:  [{value: \"location\", label: \"Mumbai\"}], \n        User: [{value: \"User\", label: \"Tejas Thakare\", id:0}]\n      }\n      const [values, setValues] = useState(initialvalues)\n  return (\n      <Fragment>\n    <Card>\n      <UserTable/>\n      <hr/>\n      <CardBody>\n      <Row className=''>\n        <Col sm='12'>\n          <h4 className='mb-3'>\n            <User size={20} className='mr-50' />\n            <span className='align-middle'>Edit User Company / Location</span>\n          </h4>\n        </Col>\n        <Col md='4' sm='12'>\n        <FormGroup>\n              <Label for='User'>User</Label>\n            <Select          \n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              name='users'\n              options={optionUser}\n              value={values.User[0]}\n              menuPlacement = \"auto\"\n            //   isLoading={true}\n              isClearable={false}\n              onChange={(data, index) => {\n\n                                // setEmail(userEmails[data.id].email)\n                                 setValues(\n                                          {\n                                             ...values,\n                                             User : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n            </FormGroup> \n      </Col>\n      <Col md='4' sm='12'>\n      <FormGroup>\n              <Label for='Company'>Company</Label>\n            <Select          \n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              name='Company'\n              menuPlacement = \"auto\"\n              options={optionCompany}\n              value={values.Company[0]}\n            //   isLoading={true}\n              isClearable={false}\n              onChange={(data, index) => {\n\n                                // setEmail(CompanyEmails[data.id].email)\n                                 setValues(\n                                          {\n                                             ...values,\n                                             Company : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n            </FormGroup> \n      </Col>\n      <Col md='4' sm='12'>\n      <FormGroup>\n              <Label for='Location'>Location</Label>\n            <Select          \n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              name='Location'\n              menuPlacement = \"auto\"\n              options={optionLocation}\n              value={values.Location[0]}\n            //   isLoading={true}\n              isClearable={false}\n              onChange={(data, index) => {\n\n                                // setEmail(LocationEmails[data.id].email)\n                                 setValues(\n                                          {\n                                             ...values,\n                                             Location : data\n                                          } \n                                  )\n                                }\n                        }\n            />\n            </FormGroup> \n      </Col>\n            <Col className='d-flex flex-sm-row flex-column mt-2' sm='12'>\n              <Button.Ripple className='mb-1 mb-sm-0 mr-0 mr-sm-1' type='submit' color='primary'>\n                Save Changes\n              </Button.Ripple>\n              <Button.Ripple color='secondary' outline>\n                Reset\n              </Button.Ripple>\n            </Col>\n      </Row>\n      </CardBody>\n    </Card>\n    </Fragment>\n  )\n}\n\nexport default OnGroundStaff\n","export default __webpack_public_path__ + \"static/media/komal.71eab2e7.jpg\";","export default __webpack_public_path__ + \"static/media/himanshu.db95087a.jpg\";","export default __webpack_public_path__ + \"static/media/pravin.5a89c6c3.jpg\";","export default __webpack_public_path__ + \"static/media/reethika.147b588d.jpg\";"],"sourceRoot":""}