{"version":3,"sources":["assets/images/portrait/small/avatar-s-9.jpg","@core/components/avatar-group/index.js","@core/components/timeline/index.js","views/master/customization/custTimelineView.js"],"names":["AvatarGroup","props","data","tag","className","Tag","classnames","map","item","i","ItemTag","title","placement","target","split","join","meta","id","undefined","Timeline","color","icon","metaClassName","length","customContent","content","UserTimeline"],"mappings":"oJAAA,OAAe,cAA0B,wC,mGC0D1BA,IA/CK,SAAAC,GAAS,IAEnBC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,IAAKC,EAAcH,EAAdG,UAGbC,EAAMF,GAAY,MA+BxB,OACE,cAACE,EAAD,CACED,UAAWE,IAAW,eAAD,eAClBF,EAAYA,IAFjB,SA5BOF,EAAKK,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAUF,EAAKL,IAAMK,EAAKL,IAAM,MACtC,OACE,eAAC,WAAD,WACGK,EAAKG,MACJ,cAAC,IAAD,CAAqBC,UAAWJ,EAAKI,UAAWC,OAAQL,EAAKG,MAAMG,MAAM,KAAKC,KAAK,KAAnF,SACGP,EAAKG,QAEN,KACFH,EAAKQ,KAWH,KAVF,cAAC,IAAD,yBACEb,IAAKO,EACLN,UAAWE,IAAW,UAAD,eAClBE,EAAKJ,UAAYI,EAAKJ,aAEpBI,EAAKG,MAAQ,CAAEM,GAAIT,EAAKG,MAAMG,MAAM,KAAKC,KAAK,MAAS,IAL9D,IAMEJ,WAAOO,EACPF,UAAME,GACFV,IAGPA,EAAKQ,KAAO,cAACN,EAAD,CAASN,UAAU,iCAAnB,SAAqDI,EAAKQ,OAAkB,OAlB5EP,U,oEC6CRU,IAhEE,SAAAlB,GAAS,IAEhBC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,IAAKC,EAAcH,EAAdG,UAGbC,EAAMF,GAAY,KAExB,OACE,cAACE,EAAD,CACED,UAAWE,IAAW,WAAD,eAClBF,EAAYA,IAFjB,SAKGF,EAAKK,KAAI,SAACC,EAAMC,GAAO,IAAD,EACfC,EAAUF,EAAKL,IAAMK,EAAKL,IAAM,KAEtC,OACE,eAACO,EAAD,CAEEN,UAAWE,IAAW,gBAAD,eAClBE,EAAKJ,UAAYA,IAHtB,UAME,sBACEA,UAAWE,IAAW,kBAAD,4CACAE,EAAKY,OAAUZ,EAAKY,OADpB,cAEnB,4BAA6BZ,EAAKa,MAFf,IADvB,SAMGb,EAAKa,KAAOb,EAAKa,KAAO,OAE3B,sBAAKjB,UAAU,iBAAf,UACE,sBACEA,UAAWE,IAAW,yDAA0D,CAC9E,eAAgBE,EAAKQ,OAFzB,UAKE,6BAAKR,EAAKG,QACTH,EAAKQ,KACJ,sBACEZ,UAAWE,IAAW,sBAAD,eAClBE,EAAKc,cAAgBd,EAAKc,gBAF/B,SAKGd,EAAKQ,OAEN,QAEN,mBACEZ,UAAWE,IAAW,CACpB,OAAQG,IAAMP,EAAKqB,OAAS,IAAMf,EAAKgB,gBAF3C,SAKGhB,EAAKiB,UAEPjB,EAAKgB,cAAgBhB,EAAKgB,cAAgB,UArCxCf,U,mECtBjB,wFAQMP,EAAO,CACX,CACES,MAAO,QACPc,QAAS,6BACTT,KAAM,sBACNM,cAAe,QAUjB,CACEX,MAAO,SACPc,QAAS,8CACTT,KAAM,sBACNM,cAAe,OACfF,MAAO,WAET,CACET,MAAO,QACPc,QAAS,iCACTL,MAAO,OACPJ,KAAM,sBACNM,cAAe,QAEjB,CACEX,MAAO,SACPc,QAAS,mBACTL,MAAO,SACPJ,KAAM,sBACNM,cAAe,QAEjB,CACEX,MAAO,QACPc,QAAS,+BACTL,MAAO,SACPJ,KAAM,sBACNM,cAAe,QAEjB,CACEX,MAAO,SACPc,QAAS,KACTL,MAAO,SACPJ,KAAM,sBACNM,cAAe,QAEjB,CACEX,MAAO,cACPc,QAAS,kBACTL,MAAO,UACPJ,KAAM,sBACNM,cAAe,SAmBJI,UAfM,WACnB,OACE,eAAC,IAAD,CAAMtB,UAAU,qBAAhB,UACE,cAAC,IAAD,UACE,qBAAKA,UAAU,4BAAf,SACE,cAAC,IAAD,CAAWD,IAAI,KAAf,wCAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,UAAU,aAAaF,KAAMA","file":"static/js/251.fb341054.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-s-9.e2785e7a.jpg\";","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarGroup = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : 'div'\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div'\n      return (\n        <Fragment key={i}>\n          {item.title ? (\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null}\n          {!item.meta ? (\n            <Avatar\n              tag={ItemTag}\n              className={classnames('pull-up', {\n                [item.className]: item.className\n              })}\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\n              title={undefined}\n              meta={undefined}\n              {...item}\n            />\n          ) : null}\n          {item.meta ? <ItemTag className='d-flex align-items-center pl-1'>{item.meta}</ItemTag> : null}\n        </Fragment>\n      )\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar-group', {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Timeline = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Custom Tagg\n  const Tag = tag ? tag : 'ul'\n\n  return (\n    <Tag\n      className={classnames('timeline', {\n        [className]: className\n      })}\n    >\n      {data.map((item, i) => {\n        const ItemTag = item.tag ? item.tag : 'li'\n\n        return (\n          <ItemTag\n            key={i}\n            className={classnames('timeline-item', {\n              [item.className]: className\n            })}\n          >\n            <span\n              className={classnames('timeline-point', {\n                [`timeline-point-${item.color}`]: item.color,\n                'timeline-point-indicator': !item.icon\n              })}\n            >\n              {item.icon ? item.icon : null}\n            </span>\n            <div className='timeline-event'>\n              <div\n                className={classnames('d-flex justify-content-between flex-sm-row flex-column', {\n                  'mb-sm-0 mb-1': item.meta\n                })}\n              >\n                <h6>{item.title}</h6>\n                {item.meta ? (\n                  <span\n                    className={classnames('timeline-event-time', {\n                      [item.metaClassName]: item.metaClassName\n                    })}\n                  >\n                    {item.meta}\n                  </span>\n                ) : null}\n              </div>\n              <p\n                className={classnames({\n                  'mb-0': i === data.length - 1 && !item.customContent\n                })}\n              >\n                {item.content}\n              </p>\n              {item.customContent ? item.customContent : null}\n            </div>\n          </ItemTag>\n        )\n      })}\n    </Tag>\n  )\n}\n\nexport default Timeline\n\n// ** PropTypes\nTimeline.propTypes = {\n  data: Proptypes.array.isRequired,\n  className: Proptypes.string,\n  tag: Proptypes.string\n}\n","import Avatar from '@components/avatar'\nimport Timeline from '@components/timeline'\nimport AvatarGroup from '@components/avatar-group'\nimport { List, MoreVertical } from 'react-feather'\nimport jsonImg from '@src/assets/images/icons/json.png'\nimport ceo from '@src/assets/images/portrait/small/avatar-s-9.jpg'\nimport { Card, CardHeader, CardTitle, CardBody, Media } from 'reactstrap'\n\nconst data = [\n  {\n    title: 'Buyer',\n    content: 'Need Our Logo on the shirt',\n    meta: '01-05-2021 11:30 AM',\n    metaClassName: 'mr-1'\n    // customContent: (\n    //   <Media>\n    //     <img className='mr-1' src={jsonImg} alt='data.json' height='23' />\n    //     <Media className='mb-0' body>\n    //       data.json\n    //     </Media>\n    //   </Media>\n    //)\n  },\n  {\n    title: 'Seller',\n    content: 'Ok, but that would incur additional charges',\n    meta: '01-05-2021 12:30 PM',\n    metaClassName: 'mr-1',\n    color: 'warning'\n  },\n  {\n    title: 'Buyer',\n    content: 'How much will it cost per unit',\n    color: 'info',\n    meta: '01-05-2021 01:30 PM',\n    metaClassName: 'mr-1'\n  },\n  {\n    title: 'Seller',\n    content: '50 more per unit',\n    color: 'danger',\n    meta: '01-05-2021 02:00 PM',\n    metaClassName: 'mr-1'\n  },\n  {\n    title: 'Buyer',\n    content: 'Can I get it for 30 per unit',\n    color: 'danger',\n    meta: '01-05-2021 02:30 PM',\n    metaClassName: 'mr-1'\n  },\n  {\n    title: 'Seller',\n    content: 'No',\n    color: 'danger',\n    meta: '01-05-2021 03:00 PM',\n    metaClassName: 'mr-1'\n  },\n  {\n    title: 'Approved By',\n    content: 'Pravin Poshmani',\n    color: 'warning',\n    meta: '01-05-2021 03:00 PM',\n    metaClassName: 'mr-1'\n  }\n]\n\nconst UserTimeline = () => {\n  return (\n    <Card className='card-user-timeline'>\n      <CardHeader>\n        <div className='d-flex align-items-center'>\n          <CardTitle tag='h4'>Customization Timeline</CardTitle>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Timeline className='ml-50 mb-0' data={data} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default UserTimeline\n"],"sourceRoot":""}